import{a6 as e,N as n,g as t,bv as a,bt as i,b2 as s,bw as o,bx as l,by as r,bz as d,bp as p,ba as h,b5 as m,b8 as c,R as u,a3 as f,bo as g,bn as S,D as b,a$ as w,d as T,a as y}from"./raid_sim_action-a290d9e8.chunk.js";import{m as I,a as M,b as v,c as O,B as W,I as P,M as R,d as x,A as C,e as N,f as E,g as B,P as U,T as k,D as A}from"./individual_sim_ui-df1e8984.chunk.js";const F=I({fieldName:"innervateTarget",id:e.fromSpellId(29166),extraCssClasses:["within-raid-sim-hide"],getValue:e=>e.getSpecOptions().innervateTarget?.targetIndex!=n,setValue:(e,a,i)=>{const s=a.getSpecOptions();s.innervateTarget=t.create({targetIndex:i?0:n}),a.setSpecOptions(e,s)}}),H={inputs:[M({fieldName:"type",label:"Type",labelTooltip:"If set to 'Adaptive', will dynamically adjust rotation.",values:[{name:"Adaptive",value:a.Adaptive,tooltip:"Dynamically adapts based on available mana to maximize CL casts without going OOM."},{name:"Manual",value:a.Manual,tooltip:"Allows custom selection of which spells to use, dot managment and CD usage."}]}),v({fieldName:"useBattleRes",label:"Use Battle Res",labelTooltip:"Cast Battle Res on an ally sometime during the encounter.",showWhen:e=>e.getRotation().type==a.Manual}),v({fieldName:"useMf",label:"Use Moonfire",labelTooltip:"Should the rotation use Moonfire.",showWhen:e=>e.getRotation().type==a.Manual}),v({fieldName:"useIs",label:"Use Insect Swarm",labelTooltip:"Should the rotation use Insect Swarm.",showWhen:e=>e.getRotation().type==a.Manual}),v({fieldName:"useStarfire",label:"Use Starfire",labelTooltip:"Should the rotation use Starfire.",showWhen:e=>e.getRotation().type==a.Manual}),v({fieldName:"useWrath",label:"Use Wrath",labelTooltip:"Should the rotation use Wrath.",showWhen:e=>e.getRotation().type==a.Manual}),v({fieldName:"useTyphoon",label:"Use Typhoon",labelTooltip:"Should the rotation use Typhoon.",showWhen:e=>e.getRotation().type==a.Manual}),v({fieldName:"useHurricane",label:"Use Hurricane",labelTooltip:"Should the rotation use Hurricane.",showWhen:e=>e.getRotation().type==a.Manual}),O({fieldName:"mfInsideEclipseThreshold",label:"Moonfire inside eclipse max timing",labelTooltip:"Max eclipse uptime at which Moonfire can be applied/refreshed. 15 = never refresh,  0= always refresh.",showWhen:e=>e.getRotation().type==a.Manual}),O({fieldName:"isInsideEclipseThreshold",label:"Insect Swarm inside eclipse max timing",labelTooltip:"Max eclipse uptime at which Insect Swarm can be applied/refreshed. 15 = never refresh,  0= always refresh.",showWhen:e=>e.getRotation().type==a.Manual}),v({fieldName:"useSmartCooldowns",label:"Smart Cooldowns usage",labelTooltip:"The rotation will use cooldowns during eclipses, avoiding Haste CDs in solar and Crit CDs in lunar",showWhen:e=>e.getRotation().type==a.Manual}),v({fieldName:"maximizeMfUptime",label:"Maximize Moonfire uptime",labelTooltip:"Rotation will try to keep Moonfire up without clipping",showWhen:e=>e.getRotation().type==a.Manual}),v({fieldName:"maximizeIsUptime",label:"Maximize Insect Swarm uptime",labelTooltip:"Rotation will try to keep Insect Swarm up without clipping",showWhen:e=>e.getRotation().type==a.Manual})]},D={name:"Phase 1",data:i.create({talentsString:"5032003115331303213305311231--205003012",glyphs:s.create({major1:o.GlyphOfFocus,major2:o.GlyphOfInsectSwarm,major3:o.GlyphOfStarfall,minor1:l.GlyphOfTyphoon,minor2:l.GlyphOfUnburdenedRebirth,minor3:l.GlyphOfTheWild})})},z=r.create({type:a.Adaptive,useBattleRes:!1,useIs:!0,useMf:!1,isInsideEclipseThreshold:15,mfInsideEclipseThreshold:0,useSmartCooldowns:!0,maximizeIsUptime:!0}),j=d.create({innervateTarget:t.create({targetIndex:n})}),G=p.create({defaultPotion:h.PotionOfSpeed,flask:m.FlaskOfTheFrostWyrm,food:c.FoodFishFeast,prepopPotion:h.PotionOfWildMagic,thermalSapper:!0}),_=u.create({arcaneBrilliance:!0,bloodlust:!0,divineSpirit:!0,giftOfTheWild:f.TristateEffectImproved,icyTalons:!0,moonkinAura:f.TristateEffectImproved,leaderOfThePack:f.TristateEffectImproved,powerWordFortitude:f.TristateEffectImproved,sanctifiedRetribution:!0,strengthOfEarthTotem:f.TristateEffectImproved,trueshotAura:!0,wrathOfAirTotem:!0}),J=g.create({blessingOfKings:!0,blessingOfMight:f.TristateEffectImproved,blessingOfWisdom:f.TristateEffectImproved,vampiricTouch:!0}),V=S.create({heroicPresence:!1}),K=b.create({bloodFrenzy:!0,ebonPlaguebringer:!0,faerieFire:f.TristateEffectImproved,heartOfTheCrusader:!0,judgementOfWisdom:!0,shadowMastery:!0,sunderArmor:!0,totemOfWrath:!0}),L={distanceFromTarget:18},$={name:"P1 Preset",tooltip:W,gear:w.fromJsonString('{"items": [\n        {\n          "id": 40467,\n          "enchant": 44877,\n          "gems": [\n            41285,\n            42144\n          ]\n        },\n        {\n          "id": 44661,\n          "gems": [\n            40026\n          ]\n        },\n        {\n          "id": 40470,\n          "enchant": 44874,\n          "gems": [\n            42144\n          ]\n        },\n        {\n          "id": 44005,\n          "enchant": 63765,\n          "gems": [\n            40026\n          ]\n        },\n        {\n          "id": 40469,\n          "enchant": 44489,\n          "gems": [\n            42144,\n            39998\n          ]\n        },\n        {\n          "id": 44008,\n          "enchant": 44498,\n          "gems": [\n            39998,\n            0\n          ]\n        },\n        {\n          "id": 40466,\n          "enchant": 54999,\n          "gems": [\n            39998,\n            0\n          ]\n        },\n        {\n          "id": 40561,\n          "enchant": 54793,\n          "gems": [\n            39998\n          ]\n        },\n        {\n          "id": 40560,\n          "enchant": 41602\n        },\n        {\n          "id": 40519,\n          "enchant": 55016\n        },\n        {\n          "id": 40399\n        },\n        {\n          "id": 40080\n        },\n        {\n          "id": 40255\n        },\n        {\n          "id": 40432\n        },\n        {\n          "id": 40395,\n          "enchant": 44487\n        },\n        {\n          "id": 40192\n        },\n        {\n          "id": 40321\n        }\n      ]}')},q={name:"Pre-raid Preset",tooltip:W,gear:w.fromJsonString('{   "items": [\n        {\n          "id": 42554,\n          "enchant": 44877,\n          "gems": [\n            41285,\n            40049\n          ]\n        },\n        {\n          "id": 40680\n        },\n        {\n          "id": 37673,\n          "enchant": 44874,\n          "gems": [\n            42144\n          ]\n        },\n        {\n          "id": 41610,\n          "enchant": 63765\n        },\n        {\n          "id": 39547,\n          "enchant": 44489,\n          "gems": [\n            42144,\n            40026\n          ]\n        },\n        {\n          "id": 37884,\n          "enchant": 44498,\n          "gems": [\n            0\n          ]\n        },\n        {\n          "id": 39544,\n          "enchant": 54999,\n          "gems": [\n            42144,\n            0\n          ]\n        },\n        {\n          "id": 40696,\n          "enchant": 54793,\n          "gems": [\n            40014,\n            39998\n          ]\n        },\n        {\n          "id": 37854,\n          "enchant": 41602\n        },\n        {\n          "id": 44202,\n          "enchant": 55016,\n          "gems": [\n            39998\n          ]\n        },\n        {\n          "id": 40585\n        },\n        {\n          "id": 43253,\n          "gems": [\n            40026\n          ]\n        },\n        {\n          "id": 37873\n        },\n        {\n          "id": 40682\n        },\n        {\n          "id": 45085,\n          "enchant": 44487\n        },\n        {\n          "id": 40698\n        },\n        {\n          "id": 40712\n        }\n      ]\n    }')};class Q extends P{constructor(e,n){super(e,n,{cssClass:"balance-druid-sim-ui",knownIssues:[],epStats:[T.StatIntellect,T.StatSpirit,T.StatSpellPower,T.StatSpellHit,T.StatSpellCrit,T.StatSpellHaste,T.StatMP5],epReferenceStat:T.StatSpellPower,displayStats:[T.StatHealth,T.StatStamina,T.StatIntellect,T.StatSpirit,T.StatSpellPower,T.StatSpellHit,T.StatSpellCrit,T.StatSpellHaste,T.StatMP5],defaults:{gear:q.gear,epWeights:y.fromMap({[T.StatIntellect]:.52,[T.StatSpirit]:.3,[T.StatSpellPower]:1,[T.StatSpellCrit]:.61,[T.StatSpellHaste]:.67,[T.StatMP5]:0}),consumes:G,rotation:z,talents:D.data,specOptions:j,raidBuffs:_,partyBuffs:V,individualBuffs:J,debuffs:K,other:L},playerIconInputs:[F],rotationInputs:H,includeBuffDebuffInputs:[R,x,C,N,E,B,U],excludeBuffDebuffInputs:[],otherInputs:{inputs:[k,A]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[D],gear:[$,q]}})}}export{Q as B,z as D,$ as P,D as S,j as a,G as b};
//# sourceMappingURL=sim-2abdc574.chunk.js.map
