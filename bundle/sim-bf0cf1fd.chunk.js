import{bt as n,b2 as e,dc as t,dd as a,de as i,df as o,dg as s,dh as r,di as l,bp as m,ba as d,ah as u,b5 as p,b8 as c,a$ as h,a6 as g,d as f,aj as y,ar as b,a as S,R as I,a3 as P,bn as T,bo as v,D as O}from"./raid_sim_action-a290d9e8.chunk.js";import{B as w,s as F,i as M,h as E,a as C,c as k,b as q,I as A,a6 as N,a7 as R,a8 as D,l as G,a9 as H,T as x,r as W}from"./individual_sim_ui-df1e8984.chunk.js";const j={name:"Combat",data:n.create({talentsString:"00532000523-0252051050035010223100501251",glyphs:e.create({major1:t.GlyphOfKillingSpree,major2:t.GlyphOfTricksOfTheTrade,major3:t.GlyphOfRupture})})},B={name:"Assassination",data:n.create({talentsString:"005303005352100520103331051-005005003-502",glyphs:e.create({major1:t.GlyphOfMutilate,major2:t.GlyphOfTricksOfTheTrade,major3:t.GlyphOfHungerForBlood})})},U=a.create({exposeArmorFrequency:i.Never,minimumComboPointsExposeArmor:4,tricksOfTheTradeFrequency:i.Maintain,assassinationFinisherPriority:o.EnvenomRupture,combatFinisherPriority:s.RuptureEviscerate,minimumComboPointsPrimaryFinisher:3,minimumComboPointsSecondaryFinisher:2}),J=r.create({mhImbue:l.DeadlyPoison,ohImbue:l.InstantPoison,applyPoisonsManually:!1}),_=m.create({defaultPotion:d.PotionOfSpeed,defaultConjured:u.ConjuredRogueThistleTea,flask:p.FlaskOfEndlessRage,food:c.FoodMegaMammothMeal}),z={name:"Pre-Raid Assassination",tooltip:w,gear:h.fromJsonString('{"items": [\n    {\n      "id": 42550,\n      "enchant": 44879,\n      "gems": [\n        41398,\n        40058\n      ]\n    },\n    {\n      "id": 40678\n    },\n    {\n      "id": 43481,\n      "enchant": 44871\n    },\n    {\n      "id": 38614,\n      "enchant": 55002\n    },\n    {\n      "id": 39558,\n      "enchant": 44489,\n      "gems": [\n        40003,\n        42702\n      ]\n    },\n    {\n      "id": 34448,\n      "enchant": 44484,\n      "gems": [\n        40003,\n        0\n      ]\n    },\n    {\n      "id": 39560,\n      "enchant": 54999,\n      "gems": [\n        40058,\n        0\n      ]\n    },\n    {\n      "id": 40694,\n      "gems": [\n        40003,\n        40003\n      ]\n    },\n    {\n      "id": 37644,\n      "enchant": 38374\n    },\n    {\n      "id": 34575,\n      "enchant": 55016,\n      "gems": [\n        40003\n      ]\n    },\n    {\n      "id": 40586\n    },\n    {\n      "id": 37642\n    },\n    {\n      "id": 40684\n    },\n    {\n      "id": 44253\n    },\n    {\n      "id": 37856,\n      "enchant": 44492\n    },\n    {\n      "id": 37667,\n      "enchant": 44492\n    },\n    {\n      "id": 43612\n    }\n  ]}')},K={name:"Pre-Raid Combat",tooltip:w,gear:h.fromJsonString('{"items": [\n    {\n      "id": 42550,\n      "enchant": 44879,\n      "gems": [\n        41398,\n        40014\n      ]\n    },\n    {\n      "id": 40678\n    },\n    {\n      "id": 37139,\n      "enchant": 44871,\n      "gems": [\n        39999\n      ]\n    },\n    {\n      "id": 34241,\n      "enchant": 55002,\n      "gems": [\n        40014\n      ]\n    },\n    {\n      "id": 39558,\n      "enchant": 44489,\n      "gems": [\n        39999,\n        40014\n      ]\n    },\n    {\n      "id": 34448,\n      "enchant": 44484,\n      "gems": [\n        39999,\n        0\n      ]\n    },\n    {\n      "id": 39560,\n      "enchant": 54999,\n      "gems": [\n        40014,\n        0\n      ]\n    },\n    {\n      "id": 40694,\n      "gems": [\n        42702,\n        39999\n      ]\n    },\n    {\n      "id": 37644,\n      "enchant": 38374\n    },\n    {\n      "id": 34575,\n      "enchant": 55016,\n      "gems": [\n        39999\n      ]\n    },\n    {\n      "id": 40586\n    },\n    {\n      "id": 37642\n    },\n    {\n      "id": 40684\n    },\n    {\n      "id": 44253\n    },\n    {\n      "id": 37693,\n      "enchant": 44492\n    },\n    {\n      "id": 37856,\n      "enchant": 44492\n    },\n    {\n      "id": 44504,\n      "gems": [\n        40053\n      ]\n    }\n  ]}')},$={name:"P1 Assassination",tooltip:w,gear:h.fromJsonString('{ "items": [\n    {\n      "id": 40499,\n      "enchant": 44879,\n      "gems": [\n        41398,\n        42702\n      ]\n    },\n    {\n      "id": 44664,\n      "gems": [\n        40003\n      ]\n    },\n    {\n      "id": 40502,\n      "enchant": 44871,\n      "gems": [\n        40003\n      ]\n    },\n    {\n      "id": 40403,\n      "enchant": 55002\n    },\n    {\n      "id": 40539,\n      "enchant": 44489,\n      "gems": [\n        40003\n      ]\n    },\n    {\n      "id": 39765,\n      "enchant": 44484,\n      "gems": [\n        40003,\n        0\n      ]\n    },\n    {\n      "id": 40496,\n      "enchant": 54999,\n      "gems": [\n        40053,\n        0\n      ]\n    },\n    {\n      "id": 40260,\n      "gems": [\n        39999\n      ]\n    },\n    {\n      "id": 40500,\n      "enchant": 38374,\n      "gems": [\n        40003,\n        40003\n      ]\n    },\n    {\n      "id": 39701,\n      "enchant": 55016\n    },\n    {\n      "id": 40074\n    },\n    {\n      "id": 40474\n    },\n    {\n      "id": 40684\n    },\n    {\n      "id": 44253\n    },\n    {\n      "id": 39714,\n      "enchant": 44492\n    },\n    {\n      "id": 40386,\n      "enchant": 44492\n    },\n    {\n      "id": 40385\n    }\n  ]}')},L={name:"P1 Combat",tooltip:w,gear:h.fromJsonString('{"items": [\n    {\n      "id": 40499,\n      "enchant": 44879,\n      "gems": [\n        41398,\n        42702\n      ]\n    },\n    {\n      "id": 44664,\n      "gems": [\n        39999\n      ]\n    },\n    {\n      "id": 40502,\n      "enchant": 44871,\n      "gems": [\n        39999\n      ]\n    },\n    {\n      "id": 40403,\n      "enchant": 55002\n    },\n    {\n      "id": 40539,\n      "enchant": 44489,\n      "gems": [\n        39999\n      ]\n    },\n    {\n      "id": 39765,\n      "enchant": 44484,\n      "gems": [\n        39999,\n        0\n      ]\n    },\n    {\n      "id": 40541,\n      "enchant": 54999,\n      "gems": [\n        0\n      ]\n    },\n    {\n      "id": 40205,\n      "gems": [\n        39999\n      ]\n    },\n    {\n      "id": 44011,\n      "enchant": 38374,\n      "gems": [\n        39999,\n        39999\n      ]\n    },\n    {\n      "id": 39701,\n      "enchant": 55016\n    },\n    {\n      "id": 40074\n    },\n    {\n      "id": 40474\n    },\n    {\n      "id": 40684\n    },\n    {\n      "id": 44253\n    },\n    {\n      "id": 40383,\n      "enchant": 44492\n    },\n    {\n      "id": 39714,\n      "enchant": 44492\n    },\n    {\n      "id": 40385\n    }\n  ]}')},Q=F({fieldName:"mhImbue",numColumns:1,values:[{color:"grey",value:l.NoPoison},{actionId:g.fromItemId(43233),value:l.DeadlyPoison},{actionId:g.fromItemId(43231),value:l.InstantPoison},{actionId:g.fromItemId(43235),value:l.WoundPoison}]}),V=F({fieldName:"ohImbue",numColumns:1,values:[{color:"grey",value:l.NoPoison},{actionId:g.fromItemId(43233),value:l.DeadlyPoison},{actionId:g.fromItemId(43231),value:l.InstantPoison},{actionId:g.fromItemId(43235),value:l.WoundPoison}]}),X=M({fieldName:"startingOverkillDuration",label:"Starting Overkill duration",labelTooltip:"Initial Overkill buff duration at the start of each iteration."}),Y=E({fieldName:"applyPoisonsManually",label:"Configure poisons manually",labelTooltip:"Prevent automatic poison configuration that is based on equipped weapons."}),Z={inputs:[C({fieldName:"exposeArmorFrequency",label:"Expose Armor",labelTooltip:"Frequency of Expose Armor casts.",values:[{name:"Never",value:i.Never},{name:"Cast Once",value:i.Once},{name:"Maintain",value:i.Maintain}]}),k({fieldName:"minimumComboPointsExposeArmor",label:"Minimum CP (Expose Armor)",labelTooltip:"Minimum number of combo points for Expose Armor when only cast once.",showWhen:n=>n.getRotation().exposeArmorFrequency==i.Once}),C({fieldName:"tricksOfTheTradeFrequency",label:"Tricks of the Trade",labelTooltip:"Frequency of Tricks of the Trade usage.",values:[{name:"Never",value:i.Never},{name:"Maintain",value:i.Maintain}]}),k({fieldName:"envenomPoolAmount",label:"Energy Pooled (Envenom)",labelTooltip:"Amount of energy to pool before casting Envenom (beyond the cost).",showWhen:n=>n.getTalents().mutilate}),C({fieldName:"multiTargetSliceFrequency",label:"Multi-Target S&D",labelTooltip:"Frequency of Slice and Dice cast in multi-target scnearios.",values:[{name:"Never",value:i.Never},{name:"Once",value:i.Once},{name:"Maintain",value:i.Maintain}],showWhen:n=>n.getRotation().multiTargetSliceFrequency!=i.FrequencyUnknown}),k({fieldName:"minimumComboPointsMultiTargetSlice",label:"Minimum CP (Slice)",labelTooltip:"Minimum number of combo points spent if Slice and Dice has frequency: Once",showWhen:n=>n.getRotation().multiTargetSliceFrequency==i.Once}),q({fieldName:"openWithGarrote",label:"Open with Garrote",labelTooltip:"Open the encounter by casting Garrote.",showWhen:n=>n.getTalents().mutilate}),q({fieldName:"useFeint",label:"Use Feint",labelTooltip:"Cast Feint on cooldown. Mainly useful when using the associate glyph."}),q({fieldName:"allowCpUndercap",label:"Undercap CP",labelTooltip:"Cast Envenom at 3 cp if the Envenom buff is missing.",showWhen:n=>n.getTalents().mutilate}),q({fieldName:"allowCpOvercap",label:"Overcap CP",labelTooltip:"Cast Mutilate at 4 cp if the Envenom buff will last long enough.",showWhen:n=>n.getTalents().mutilate}),q({fieldName:"ruptureForBleed",label:"Rupture for Bleed",labelTooltip:"Cast Rupture as needed to apply a bleed effect for Hunger for Blood",showWhen:n=>n.getTalents().hungerForBlood})]};class nn extends A{constructor(n,e){super(n,e,{cssClass:"rogue-sim-ui",knownIssues:["Rotations are not fully optimized, especially for non-standard setups.","Subtlety specs are not currently supported."],warnings:[n=>({updateOn:n.sim.encounter.changeEmitter,getContent:()=>{var e=!1;for(const t of n.sim.encounter.getTargets())if(t.getStats().getStat(f.StatArmor)<=0){e=!0;break}return e?"One or more targets have no armor! Check advanced encounter settings.":""}}),n=>({updateOn:n.player.changeEmitter,getContent:()=>!n.player.getTalents().mutilate||n.player.getGear().getEquippedItem(y.ItemSlotMainHand)?.item.weaponType==b.WeaponTypeDagger&&n.player.getGear().getEquippedItem(y.ItemSlotOffHand)?.item.weaponType==b.WeaponTypeDagger?"":"'Mutilate' talent selected, but daggers not equipped in both hands!"}),n=>({updateOn:n.player.changeEmitter,getContent:()=>n.player.getRotation().useFeint&&!n.player.getMajorGlyphs().includes(t.GlyphOfFeint)?"'Use Feint' selected, but missing Glyph of Feint!":""}),n=>({updateOn:n.player.changeEmitter,getContent:()=>{const e=n.player.getGear().getEquippedItem(y.ItemSlotMainHand)?.item.weaponSpeed,t=n.player.getGear().getEquippedItem(y.ItemSlotOffHand)?.item.weaponSpeed,a=n.player.getSpecOptions().mhImbue,i=n.player.getSpecOptions().ohImbue;return void 0!==e&&void 0!==t&&n.player.getSpecOptions().applyPoisonsManually?e<t&&i==l.DeadlyPoison?"Deadly poison applied to slower (off hand) weapon!":t<e&&a==l.DeadlyPoison?"Deadly poison applied to slower (main hand) weapon!":"":""}})],epStats:[f.StatAgility,f.StatStrength,f.StatAttackPower,f.StatMeleeHit,f.StatMeleeCrit,f.StatMeleeHaste,f.StatArmorPenetration,f.StatExpertise],epReferenceStat:f.StatAttackPower,displayStats:[f.StatHealth,f.StatStamina,f.StatAgility,f.StatStrength,f.StatAttackPower,f.StatMeleeHit,f.StatSpellHit,f.StatMeleeCrit,f.StatMeleeHaste,f.StatArmorPenetration,f.StatExpertise],defaults:{gear:z.gear,epWeights:S.fromMap({[f.StatAgility]:1.89,[f.StatStrength]:1.17,[f.StatAttackPower]:1,[f.StatMeleeHit]:1.65,[f.StatMeleeCrit]:1.11,[f.StatMeleeHaste]:1.27,[f.StatArmorPenetration]:.3,[f.StatExpertise]:1.69}),consumes:_,rotation:U,talents:B.data,specOptions:J,raidBuffs:I.create({giftOfTheWild:P.TristateEffectImproved,bloodlust:!0,strengthOfEarthTotem:P.TristateEffectImproved,icyTalons:!0,leaderOfThePack:P.TristateEffectImproved,abominationsMight:!0,swiftRetribution:!0,elementalOath:!0,sanctifiedRetribution:!0}),partyBuffs:T.create({}),individualBuffs:v.create({blessingOfKings:!0,blessingOfMight:P.TristateEffectImproved}),debuffs:O.create({heartOfTheCrusader:!0,mangle:!0,sunderArmor:!0,faerieFire:P.TristateEffectImproved,shadowMastery:!0,earthAndMoon:!0,bloodFrenzy:!0})},playerInputs:{inputs:[Y]},playerIconInputs:[Q,V],rotationInputs:Z,includeBuffDebuffInputs:[N,R,D,G],excludeBuffDebuffInputs:[],otherInputs:{inputs:[X,H,x,W]},additionalIconSections:{},encounterPicker:{showExecuteProportion:!1},presets:{talents:[B,j],gear:[z,K,$,L]}}),this.player.changeEmitter.on((n=>{const e=this.player.getRotation(),t=this.player.getSpecOptions(),a=this.sim.encounter;if(this.player.getTalents().mutilate?(e.assassinationFinisherPriority==o.AssassinationPriorityUnknown&&(e.assassinationFinisherPriority=U.assassinationFinisherPriority),e.combatFinisherPriority=s.CombatPriorityUnknown):(e.assassinationFinisherPriority=o.AssassinationPriorityUnknown,e.combatFinisherPriority==s.CombatPriorityUnknown&&(e.combatFinisherPriority=U.combatFinisherPriority)),this.player.setRotation(n,e),!t.applyPoisonsManually){const n=this.player.getGear().getEquippedItem(y.ItemSlotMainHand)?.item.weaponSpeed,e=this.player.getGear().getEquippedItem(y.ItemSlotOffHand)?.item.weaponSpeed;if(void 0===n||void 0===e)return;a.getNumTargets()>3?(t.mhImbue=l.InstantPoison,t.ohImbue=l.InstantPoison):n<=e?(t.mhImbue=l.DeadlyPoison,t.ohImbue=l.InstantPoison):(t.mhImbue=l.InstantPoison,t.ohImbue=l.DeadlyPoison)}this.player.setSpecOptions(n,t)})),this.sim.encounter.changeEmitter.on((n=>{const e=this.player.getRotation(),t=this.player.getSpecOptions(),a=this.sim.encounter;if(this.sim.encounter.getNumTargets()>3?e.multiTargetSliceFrequency==i.FrequencyUnknown&&(e.multiTargetSliceFrequency=U.multiTargetSliceFrequency):e.multiTargetSliceFrequency=i.FrequencyUnknown,this.player.setRotation(n,e),!t.applyPoisonsManually){const n=this.player.getGear().getEquippedItem(y.ItemSlotMainHand)?.item.weaponSpeed,e=this.player.getGear().getEquippedItem(y.ItemSlotOffHand)?.item.weaponSpeed;if(void 0===n||void 0===e)return;a.getNumTargets()>3?(t.mhImbue=l.InstantPoison,t.ohImbue=l.InstantPoison):n<=e?(t.mhImbue=l.DeadlyPoison,t.ohImbue=l.InstantPoison):(t.mhImbue=l.InstantPoison,t.ohImbue=l.DeadlyPoison)}this.player.setSpecOptions(n,t)}))}}export{j as C,U as D,L as P,nn as R,J as a,_ as b};
//# sourceMappingURL=sim-bf0cf1fd.chunk.js.map
