import{cQ as e,a6 as n,cR as t,cS as a,cT as i,bt as o,b2 as r,cU as l,cV as s,cW as c,ab as d,ac as m,cX as h,bp as S,b6 as u,b7 as p,b8 as f,ba as g,b9 as v,a$ as I,d as b,a as C,R as T,a3 as k,bn as P,bo as y,D as O}from"./raid_sim_action-a290d9e8.chunk.js";import{i as D,s as w,m as E,h as B,j as A,c as R,b as M,a as N,B as x,I as G,T as H,F as j,H as F,G as W,Q as V,r as _}from"./individual_sim_ui-df1e8984.chunk.js";const z=D({fieldName:"startingRage",label:"Starting Rage",labelTooltip:"Initial rage at the start of each iteration."}),J=w({fieldName:"shout",values:[{color:"c79c6e",value:e.WarriorShoutNone},{actionId:n.fromSpellId(2048),value:e.WarriorShoutBattle},{actionId:n.fromSpellId(469),value:e.WarriorShoutCommanding}]}),Q=E({fieldName:"useShatteringThrow",id:n.fromSpellId(64382)}),U=B({fieldName:"precastShout",label:"Precast Shout",labelTooltip:"Selected shout is cast 10 seconds before combat starts."}),K={inputs:[A({fieldName:"customRotation",numColumns:3,values:[{actionId:n.fromSpellId(30357),value:t.Revenge},{actionId:n.fromSpellId(47488),value:t.ShieldSlam},{actionId:n.fromSpellId(47440),value:t.Shout},{actionId:n.fromSpellId(47502),value:t.ThunderClap},{actionId:n.fromSpellId(25203),value:t.DemoralizingShout},{actionId:n.fromSpellId(71552),value:t.MortalStrike},{actionId:n.fromSpellId(30022),value:t.Devastate},{actionId:n.fromSpellId(47467),value:t.SunderArmor},{actionId:n.fromSpellId(12809),value:t.ConcussionBlow},{actionId:n.fromSpellId(46968),value:t.Shockwave}]}),R({fieldName:"hsRageThreshold",label:"HS rage threshold",labelTooltip:"Heroic Strike when rage is above:"}),M({fieldName:"prioSslamOnShieldBlock",label:"Prio SSlam on Shield Block",labelTooltip:"The rotation code will prio SSlam over Revenge during active shield block windows."}),N({fieldName:"demoShoutChoice",label:"Demo Shout",values:[{name:"Never",value:a.DemoShoutChoiceNone},{name:"Maintain Debuff",value:a.DemoShoutChoiceMaintain},{name:"Filler",value:a.DemoShoutChoiceFiller}]}),N({fieldName:"thunderClapChoice",label:"Thunder Clap",values:[{name:"Never",value:i.ThunderClapChoiceNone},{name:"Maintain Debuff",value:i.ThunderClapChoiceMaintain},{name:"On CD",value:i.ThunderClapChoiceOnCD}]})]},L={name:"Standard",data:o.create({talentsString:"2500030023-302-053351225000012521030113321",glyphs:r.create({major1:l.GlyphOfBlocking,major2:l.GlyphOfVigilance,major3:l.GlyphOfDevastate,minor1:s.GlyphOfCharge,minor2:s.GlyphOfThunderClap,minor3:s.GlyphOfCommand})})},X={name:"UA",data:o.create({talentsString:"35023301230051002020120002-2-05035122500000252",glyphs:r.create({major1:l.GlyphOfRevenge,major2:l.GlyphOfHeroicStrike,major3:l.GlyphOfSweepingStrikes,minor1:s.GlyphOfCharge,minor2:s.GlyphOfThunderClap,minor3:s.GlyphOfCommand})})},$=c.create({customRotation:d.create({spells:[m.create({spell:t.ShieldSlam}),m.create({spell:t.Revenge}),m.create({spell:t.Shout}),m.create({spell:t.ThunderClap}),m.create({spell:t.DemoralizingShout}),m.create({spell:t.MortalStrike}),m.create({spell:t.Devastate}),m.create({spell:t.SunderArmor}),m.create({spell:t.ConcussionBlow}),m.create({spell:t.Shockwave})]}),demoShoutChoice:a.DemoShoutChoiceNone,thunderClapChoice:i.ThunderClapChoiceNone,hsRageThreshold:30}),q=h.create({shout:e.WarriorShoutCommanding,precastShout:!0,precastShoutSapphire:!1,precastShoutT2:!1,useShatteringThrow:!1,startingRage:0}),Y=S.create({battleElixir:u.ElixirOfExpertise,guardianElixir:p.ElixirOfProtection,food:f.FoodDragonfinFilet,defaultPotion:g.IndestructiblePotion,prepopPotion:g.IndestructiblePotion,thermalSapper:!0,fillerExplosive:v.ExplosiveSaroniteBomb}),Z={name:"P1 Balanced Preset",tooltip:x,gear:I.fromJsonString('{  "items": [\n    {\n      "id": 40546,\n      "enchant": 44878,\n      "gems": [\n        41380,\n        40034\n      ]\n    },\n    {\n      "id": 40387\n    },\n    {\n      "id": 39704,\n      "enchant": 44957,\n      "gems": [\n        40034\n      ]\n    },\n    {\n      "id": 40722,\n      "enchant": 55002\n    },\n    {\n      "id": 44000,\n      "enchant": 44489,\n      "gems": [\n        40034,\n        40015\n      ]\n    },\n    {\n      "id": 39764,\n      "enchant": 44944,\n      "gems": [\n        0\n      ]\n    },\n    {\n      "id": 40545,\n      "enchant": 63770,\n      "gems": [\n        40034,\n        0\n      ]\n    },\n    {\n      "id": 39759,\n      "enchant": 54793,\n      "gems": [\n        40008,\n        36767\n      ]\n    },\n    {\n      "id": 40589,\n      "enchant": 38373\n    },\n    {\n      "id": 39717,\n      "enchant": 44491,\n      "gems": [\n        40089\n      ]\n    },\n    {\n      "id": 40370\n    },\n    {\n      "id": 40718\n    },\n    {\n      "id": 40257\n    },\n    {\n      "id": 44063,\n      "gems": [\n        36767,\n        40089\n      ]\n    },\n    {\n      "id": 40402,\n      "enchant": 44496\n    },\n    {\n      "id": 40400,\n      "enchant": 44936\n    },\n    {\n      "id": 41168,\n      "gems": [\n        36767\n      ]\n    }\n  ]}')},ee={name:"P1 Pre-Raid Balanced Preset",tooltip:x,gear:I.fromJsonString('{"items": [\n    {\n      "id": 42549,\n      "enchant": 44878,\n      "gems": [\n        41380,\n        40015\n      ]\n    },\n    {\n      "id": 40679\n    },\n    {\n      "id": 37814,\n      "enchant": 44957\n    },\n    {\n      "id": 37728,\n      "enchant": 55002\n    },\n    {\n      "id": 39611,\n      "enchant": 47766,\n      "gems": [\n        40008,\n        40008\n      ]\n    },\n    {\n      "id": 37620,\n      "enchant": 44944,\n      "gems": [\n        0\n      ]\n    },\n    {\n      "id": 39622,\n      "enchant": 63770,\n      "gems": [\n        40034,\n        0\n      ]\n    },\n    {\n      "id": 37379,\n      "enchant": 54793,\n      "gems": [\n        40034,\n        36767\n      ]\n    },\n    {\n      "id": 43500,\n      "enchant": 38373,\n      "gems": [\n        40034\n      ]\n    },\n    {\n      "id": 44201,\n      "enchant": 44491\n    },\n    {\n      "id": 37784\n    },\n    {\n      "id": 37186\n    },\n    {\n      "id": 37220\n    },\n    {\n      "id": 44063,\n      "gems": [\n        36767,\n        40089\n      ]\n    },\n    {\n      "id": 37401,\n      "enchant": 44496\n    },\n    {\n      "id": 43085,\n      "enchant": 44936\n    },\n    {\n      "id": 41168,\n      "gems": [\n        36767\n      ]\n    }\n  ]}')};class ne extends G{constructor(e,n){super(e,n,{cssClass:"protection-warrior-sim-ui",knownIssues:[],epStats:[b.StatStamina,b.StatStrength,b.StatAgility,b.StatAttackPower,b.StatExpertise,b.StatMeleeHit,b.StatMeleeCrit,b.StatMeleeHaste,b.StatArmor,b.StatArmorPenetration,b.StatDefense,b.StatBlock,b.StatBlockValue,b.StatDodge,b.StatParry,b.StatResilience],epReferenceStat:b.StatAttackPower,displayStats:[b.StatHealth,b.StatArmor,b.StatStamina,b.StatStrength,b.StatAgility,b.StatAttackPower,b.StatExpertise,b.StatMeleeHit,b.StatMeleeCrit,b.StatMeleeHaste,b.StatArmorPenetration,b.StatDefense,b.StatBlock,b.StatBlockValue,b.StatDodge,b.StatParry,b.StatResilience],defaults:{gear:Z.gear,epWeights:C.fromMap({[b.StatArmor]:.05,[b.StatStamina]:1,[b.StatStrength]:.33,[b.StatAgility]:.6,[b.StatAttackPower]:.06,[b.StatExpertise]:.67,[b.StatMeleeHit]:.67,[b.StatMeleeCrit]:.28,[b.StatMeleeHaste]:.21,[b.StatArmorPenetration]:.19,[b.StatBlock]:.35,[b.StatBlockValue]:.59,[b.StatDodge]:.7,[b.StatParry]:.58,[b.StatDefense]:.8}),consumes:Y,rotation:$,talents:L.data,specOptions:q,raidBuffs:T.create({giftOfTheWild:k.TristateEffectImproved,powerWordFortitude:k.TristateEffectImproved,abominationsMight:!0,swiftRetribution:!0,bloodlust:!0,strengthOfEarthTotem:k.TristateEffectImproved,leaderOfThePack:k.TristateEffectImproved,sanctifiedRetribution:!0,devotionAura:k.TristateEffectImproved,stoneskinTotem:k.TristateEffectImproved,icyTalons:!0,retributionAura:!0,thorns:k.TristateEffectImproved,shadowProtection:!0}),partyBuffs:P.create({}),individualBuffs:y.create({blessingOfKings:!0,blessingOfMight:k.TristateEffectImproved,blessingOfSanctuary:!0}),debuffs:O.create({sunderArmor:!0,mangle:!0,vindication:!0,faerieFire:k.TristateEffectImproved,insectSwarm:!0,bloodFrenzy:!0,judgementOfLight:!0,heartOfTheCrusader:!0,frostFever:k.TristateEffectImproved})},playerIconInputs:[J,Q],rotationInputs:K,includeBuffDebuffInputs:[],excludeBuffDebuffInputs:[],otherInputs:{inputs:[H,j,F,W,V,z,U,_]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[L,X],gear:[Z,ee]}})}}export{$ as D,ne as P,L as S,q as a,Y as b,Z as c};
//# sourceMappingURL=sim-819fd9a7.chunk.js.map
