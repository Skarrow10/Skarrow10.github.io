{"version":3,"file":"individual_sim_ui-df1e8984.chunk.js","sources":["../../../ui/core/target.ts","../../../ui/core/encounter.ts","../../../ui/core/raid.ts","../../../ui/core/worker_pool.ts","../../../ui/core/sim.ts","../../../ui/core/components/number_picker.ts","../../../ui/core/components/bonus_stats_picker.ts","../../../ui/core/components/boolean_picker.ts","../../../ui/core/components/character_stats.ts","../../../ui/core/components/icon_enum_picker.ts","../../../ui/core/components/number_list_picker.ts","../../../ui/core/components/cooldowns_picker.ts","../../../ui/core/components/detailed_results.ts","../../../ui/core/components/list_picker.ts","../../../ui/core/components/custom_rotation_picker.ts","../../../ui/core/components/enum_picker.ts","../../../ui/core/components/encounter_picker.ts","../../../ui/core/proto_utils/enchants.ts","../../../ui/core/components/other_inputs.ts","../../../ui/core/components/gear_picker.ts","../../../ui/core/components/saved_data_manager.ts","../../../ui/core/components/input_helpers.ts","../../../ui/core/talents/hunter_pet.ts","../../../ui/core/components/icon_picker.ts","../../../ui/core/components/log_runner.ts","../../../ui/core/components/multi_icon_picker.ts","../../../ui/core/components/settings_menu.ts","../../../ui/core/components/results_viewer.ts","../../../ui/core/launched_sims.ts","../../../ui/core/components/title.ts","../../../ui/core/sim_ui.ts","../../../ui/core/components/stat_weights_action.ts","../../../ui/core/components/exporters.ts","../../../ui/core/components/importers.ts","../../../ui/core/components/icon_inputs.ts","../../../ui/core/constants/tooltips.ts","../../../ui/core/individual_sim_ui.ts"],"sourcesContent":["import { MobType } from './proto/common.js';\nimport { SpellSchool } from './proto/common.js';\nimport { Stat } from './proto/common.js';\nimport { Target as TargetProto } from './proto/common.js';\nimport { PresetTarget } from './proto/api.js';\nimport { Stats } from './proto_utils/stats.js';\n\nimport * as Mechanics from './constants/mechanics.js';\n\nimport { Listener } from './typed_event.js';\nimport { Sim } from './sim.js';\nimport { EventID, TypedEvent } from './typed_event.js';\nimport { sum } from './utils.js';\nimport { wait } from './utils.js';\n\n// Manages all the settings for a single Target.\nexport class Target {\n\treadonly sim: Sim;\n\n\tprivate id: number = 0;\n\tprivate name: string = '';\n\tprivate level: number = Mechanics.BOSS_LEVEL;\n\tprivate mobType: MobType = MobType.MobTypeDemon;\n\tprivate tankIndex: number = 0;\n\tprivate stats: Stats = new Stats();\n\n\tprivate swingSpeed: number = 0;\n\tprivate minBaseDamage: number = 0;\n\tprivate dualWield: boolean = false;\n\tprivate dualWieldPenalty: boolean = false;\n\tprivate suppressDodge: boolean = false;\n\tprivate parryHaste: boolean = true;\n\tprivate tightEnemyDamage: boolean = false;\n\tprivate spellSchool: SpellSchool = SpellSchool.SpellSchoolPhysical;\n\n\treadonly idChangeEmitter = new TypedEvent<void>();\n\treadonly nameChangeEmitter = new TypedEvent<void>();\n\treadonly levelChangeEmitter = new TypedEvent<void>();\n\treadonly mobTypeChangeEmitter = new TypedEvent<void>();\n\treadonly propChangeEmitter = new TypedEvent<void>();\n\treadonly statsChangeEmitter = new TypedEvent<void>();\n\n\t// Emits when any of the above emitters emit.\n\treadonly changeEmitter = new TypedEvent<void>();\n\n\tconstructor(sim: Sim) {\n\t\tthis.sim = sim;\n\n\t\t[\n\t\t\tthis.idChangeEmitter,\n\t\t\tthis.nameChangeEmitter,\n\t\t\tthis.levelChangeEmitter,\n\t\t\tthis.mobTypeChangeEmitter,\n\t\t\tthis.propChangeEmitter,\n\t\t\tthis.statsChangeEmitter,\n\t\t].forEach(emitter => emitter.on(eventID => this.changeEmitter.emit(eventID)));\n\n\t\tthis.changeEmitter.on(eventID => this.sim.encounter?.changeEmitter.emit(eventID));\n\t}\n\n\tgetId(): number {\n\t\treturn this.id;\n\t}\n\n\tsetId(eventID: EventID, newId: number) {\n\t\tif (newId == this.id)\n\t\t\treturn;\n\n\t\tthis.id = newId;\n\t\tthis.idChangeEmitter.emit(eventID);\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\tsetName(eventID: EventID, newName: string) {\n\t\tif (newName == this.name)\n\t\t\treturn;\n\n\t\tthis.name = newName;\n\t\tthis.nameChangeEmitter.emit(eventID);\n\t}\n\n\tgetLevel(): number {\n\t\treturn this.level;\n\t}\n\n\tsetLevel(eventID: EventID, newLevel: number) {\n\t\tif (newLevel == this.level)\n\t\t\treturn;\n\n\t\tthis.level = newLevel;\n\t\tthis.levelChangeEmitter.emit(eventID);\n\t}\n\n\tgetMobType(): MobType {\n\t\treturn this.mobType;\n\t}\n\n\tsetMobType(eventID: EventID, newMobType: MobType) {\n\t\tif (newMobType == this.mobType)\n\t\t\treturn;\n\n\t\tthis.mobType = newMobType;\n\t\tthis.mobTypeChangeEmitter.emit(eventID);\n\t}\n\n\tgetTankIndex(): number {\n\t\treturn this.tankIndex;\n\t}\n\n\tsetTankIndex(eventID: EventID, newTankIndex: number) {\n\t\tif (newTankIndex == this.tankIndex)\n\t\t\treturn;\n\n\t\tthis.tankIndex = newTankIndex;\n\t\tthis.propChangeEmitter.emit(eventID);\n\t}\n\n\tgetSwingSpeed(): number {\n\t\treturn this.swingSpeed;\n\t}\n\n\tsetSwingSpeed(eventID: EventID, newSwingSpeed: number) {\n\t\tif (newSwingSpeed == this.swingSpeed)\n\t\t\treturn;\n\n\t\tthis.swingSpeed = newSwingSpeed;\n\t\tthis.propChangeEmitter.emit(eventID);\n\t}\n\n\tgetMinBaseDamage(): number {\n\t\treturn this.minBaseDamage;\n\t}\n\n\tsetMinBaseDamage(eventID: EventID, newMinBaseDamage: number) {\n\t\tif (newMinBaseDamage == this.minBaseDamage)\n\t\t\treturn;\n\n\t\tthis.minBaseDamage = newMinBaseDamage;\n\t\tthis.propChangeEmitter.emit(eventID);\n\t}\n\n\tgetDualWield(): boolean {\n\t\treturn this.dualWield;\n\t}\n\n\tsetDualWield(eventID: EventID, newDualWield: boolean) {\n\t\tif (newDualWield == this.dualWield)\n\t\t\treturn;\n\n\t\tthis.dualWield = newDualWield;\n\t\tthis.propChangeEmitter.emit(eventID);\n\t}\n\n\tgetDualWieldPenalty(): boolean {\n\t\treturn this.dualWieldPenalty;\n\t}\n\n\tsetDualWieldPenalty(eventID: EventID, newDualWieldPenalty: boolean) {\n\t\tif (newDualWieldPenalty == this.dualWieldPenalty)\n\t\t\treturn;\n\n\t\tthis.dualWieldPenalty = newDualWieldPenalty;\n\t\tthis.propChangeEmitter.emit(eventID);\n\t}\n\n\tgetSuppressDodge(): boolean {\n\t\treturn this.suppressDodge;\n\t}\n\n\tsetSuppressDodge(eventID: EventID, newSuppressDodge: boolean) {\n\t\tif (newSuppressDodge == this.suppressDodge)\n\t\t\treturn;\n\n\t\tthis.suppressDodge = newSuppressDodge;\n\t\tthis.propChangeEmitter.emit(eventID);\n\t}\n\n\tgetParryHaste(): boolean {\n\t\treturn this.parryHaste;\n\t}\n\n\tsetParryHaste(eventID: EventID, newParryHaste: boolean) {\n\t\tif (newParryHaste == this.parryHaste)\n\t\t\treturn;\n\n\t\tthis.parryHaste = newParryHaste;\n\t\tthis.propChangeEmitter.emit(eventID);\n\t}\n\n\tgetTightEnemyDamage(): boolean {\n\t\treturn this.tightEnemyDamage;\n\t}\n\n\tsetTightEnemyDamage(eventID: EventID, newTightEnemyDamage: boolean) {\n\t\tif (newTightEnemyDamage == this.tightEnemyDamage)\n\t\t\treturn;\n\n\t\tthis.tightEnemyDamage = newTightEnemyDamage;\n\t\tthis.propChangeEmitter.emit(eventID);\n\t}\n\n\tgetSpellSchool(): SpellSchool {\n\t\treturn this.spellSchool;\n\t}\n\n\tsetSpellSchool(eventID: EventID, newSpellSchool: SpellSchool) {\n\t\tif (newSpellSchool == this.spellSchool)\n\t\t\treturn;\n\n\t\tthis.spellSchool = newSpellSchool;\n\t\tthis.propChangeEmitter.emit(eventID);\n\t}\n\n\tgetStats(): Stats {\n\t\treturn this.stats;\n\t}\n\n\tsetStats(eventID: EventID, newStats: Stats) {\n\t\tif (newStats.equals(this.stats))\n\t\t\treturn;\n\n\t\tthis.stats = newStats;\n\t\tthis.statsChangeEmitter.emit(eventID);\n\t}\n\n\tmatchesPreset(preset: PresetTarget): boolean {\n\t\treturn TargetProto.equals(this.toProto(), preset.target);\n\t}\n\n\tapplyPreset(eventID: EventID, preset: PresetTarget) {\n\t\tthis.fromProto(eventID, preset.target || TargetProto.create());\n\t}\n\n\ttoProto(): TargetProto {\n\t\treturn TargetProto.create({\n\t\t\tid: this.getId(),\n\t\t\tname: this.getName(),\n\t\t\tlevel: this.getLevel(),\n\t\t\tmobType: this.getMobType(),\n\t\t\ttankIndex: this.getTankIndex(),\n\t\t\tswingSpeed: this.getSwingSpeed(),\n\t\t\tminBaseDamage: this.getMinBaseDamage(),\n\t\t\tdualWield: this.getDualWield(),\n\t\t\tdualWieldPenalty: this.getDualWieldPenalty(),\n\t\t\tsuppressDodge: this.getSuppressDodge(),\n\t\t\tparryHaste: this.getParryHaste(),\n\t\t\ttightEnemyDamage: this.getTightEnemyDamage(),\n\t\t\tspellSchool: this.getSpellSchool(),\n\t\t\tstats: this.stats.asArray(),\n\t\t});\n\t}\n\n\tfromProto(eventID: EventID, proto: TargetProto) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.setId(eventID, proto.id);\n\t\t\tthis.setName(eventID, proto.name);\n\t\t\tthis.setLevel(eventID, proto.level);\n\t\t\tthis.setMobType(eventID, proto.mobType);\n\t\t\tthis.setTankIndex(eventID, proto.tankIndex);\n\t\t\tthis.setSwingSpeed(eventID, proto.swingSpeed);\n\t\t\tthis.setMinBaseDamage(eventID, proto.minBaseDamage);\n\t\t\tthis.setDualWield(eventID, proto.dualWield);\n\t\t\tthis.setDualWieldPenalty(eventID, proto.dualWieldPenalty);\n\t\t\tthis.setSuppressDodge(eventID, proto.suppressDodge);\n\t\t\tthis.setParryHaste(eventID, proto.parryHaste);\n\t\t\tthis.setTightEnemyDamage(eventID, proto.tightEnemyDamage);\n\t\t\tthis.setSpellSchool(eventID, proto.spellSchool);\n\t\t\tthis.setStats(eventID, new Stats(proto.stats));\n\t\t});\n\t}\n\n\tclone(eventID: EventID): Target {\n\t\tconst newTarget = new Target(this.sim);\n\t\tnewTarget.fromProto(eventID, this.toProto());\n\t\treturn newTarget;\n\t}\n\n\tstatic defaultProto(): TargetProto {\n\t\treturn TargetProto.create({\n\t\t\tlevel: Mechanics.BOSS_LEVEL,\n\t\t\tmobType: MobType.MobTypeUndead,\n\t\t\ttankIndex: 0,\n\t\t\tswingSpeed: 1.5,\n\t\t\tminBaseDamage: 30000,\n\t\t\tdualWield: true,\n\t\t\tdualWieldPenalty: false,\n\t\t\tsuppressDodge: false,\n\t\t\tparryHaste: true,\n\t\t\tspellSchool: SpellSchool.SpellSchoolPhysical,\n\t\t\tstats: Stats.fromMap({\n\t\t\t\t[Stat.StatArmor]: 10643,\n\t\t\t\t[Stat.StatAttackPower]: 640,\n\t\t\t}).asArray(),\n\t\t});\n\t}\n\n\tstatic fromDefaults(eventID: EventID, sim: Sim): Target {\n\t\tconst target = new Target(sim);\n\t\ttarget.fromProto(eventID, Target.defaultProto());\n\t\treturn target;\n\t}\n}\n","import { Encounter as EncounterProto } from './proto/common.js';\nimport { MobType } from './proto/common.js';\nimport { Stat } from './proto/common.js';\nimport { Target as TargetProto } from './proto/common.js';\nimport { PresetEncounter } from './proto/api.js';\nimport { PresetTarget } from './proto/api.js';\nimport { Target } from './target.js';\nimport { Stats } from './proto_utils/stats.js';\n\nimport { Sim } from './sim.js';\nimport { EventID, TypedEvent } from './typed_event.js';\n\n// Manages all the settings for an Encounter.\nexport class Encounter {\n\treadonly sim: Sim;\n\n\tprivate duration: number = 180;\n\tprivate durationVariation: number = 5;\n\tprivate executeProportion20: number = 0.2;\n\tprivate executeProportion25: number = 0.25;\n\tprivate executeProportion35: number = 0.35;\n\tprivate useHealth: boolean = false;\n\tprivate targets: Array<Target>;\n\n\treadonly targetsChangeEmitter = new TypedEvent<void>();\n\treadonly durationChangeEmitter = new TypedEvent<void>();\n\treadonly executeProportionChangeEmitter = new TypedEvent<void>();\n\n\t// Emits when any of the above emitters emit.\n\treadonly changeEmitter = new TypedEvent<void>();\n\n\tconstructor(sim: Sim) {\n\t\tthis.sim = sim;\n\t\tthis.targets = [Target.fromDefaults(TypedEvent.nextEventID(), sim)];\n\n\t\t[\n\t\t\tthis.targetsChangeEmitter,\n\t\t\tthis.durationChangeEmitter,\n\t\t\tthis.executeProportionChangeEmitter,\n\t\t].forEach(emitter => emitter.on(eventID => this.changeEmitter.emit(eventID)));\n\t}\n\n\tget primaryTarget(): Target {\n\t\treturn this.targets[0];\n\t}\n\n\tgetDurationVariation(): number {\n\t\treturn this.durationVariation;\n\t}\n\tsetDurationVariation(eventID: EventID, newDuration: number) {\n\t\tif (newDuration == this.durationVariation)\n\t\t\treturn;\n\n\t\tthis.durationVariation = newDuration;\n\t\tthis.durationChangeEmitter.emit(eventID);\n\t}\n\n\tgetDuration(): number {\n\t\treturn this.duration;\n\t}\n\tsetDuration(eventID: EventID, newDuration: number) {\n\t\tif (newDuration == this.duration)\n\t\t\treturn;\n\n\t\tthis.duration = newDuration;\n\t\tthis.durationChangeEmitter.emit(eventID);\n\t}\n\n\tgetExecuteProportion20(): number {\n\t\treturn this.executeProportion20;\n\t}\n\tsetExecuteProportion20(eventID: EventID, newExecuteProportion20: number) {\n\t\tif (newExecuteProportion20 == this.executeProportion20)\n\t\t\treturn;\n\n\t\tthis.executeProportion20 = newExecuteProportion20;\n\t\tthis.executeProportionChangeEmitter.emit(eventID);\n\t}\n\tgetExecuteProportion25(): number {\n\t\treturn this.executeProportion25;\n\t}\n\tsetExecuteProportion25(eventID: EventID, newExecuteProportion25: number) {\n\t\tif (newExecuteProportion25 == this.executeProportion25)\n\t\t\treturn;\n\n\t\tthis.executeProportion25 = newExecuteProportion25;\n\t\tthis.executeProportionChangeEmitter.emit(eventID);\n\t}\n\tgetExecuteProportion35(): number {\n\t\treturn this.executeProportion35;\n\t}\n\tsetExecuteProportion35(eventID: EventID, newExecuteProportion35: number) {\n\t\tif (newExecuteProportion35 == this.executeProportion35)\n\t\t\treturn;\n\n\t\tthis.executeProportion35 = newExecuteProportion35;\n\t\tthis.executeProportionChangeEmitter.emit(eventID);\n\t}\n\n\tgetUseHealth(): boolean {\n\t\treturn this.useHealth;\n\t}\n\tsetUseHealth(eventID: EventID, newUseHealth: boolean) {\n\t\tif (newUseHealth == this.useHealth)\n\t\t\treturn;\n\n\t\tthis.useHealth = newUseHealth;\n\t\tthis.durationChangeEmitter.emit(eventID);\n\t\tthis.executeProportionChangeEmitter.emit(eventID);\n\t}\n\n\tgetNumTargets(): number {\n\t\treturn this.targets.length;\n\t}\n\n\tgetTargets(): Array<Target> {\n\t\treturn this.targets.slice();\n\t}\n\tsetTargets(eventID: EventID, newTargets: Array<Target>) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tif (newTargets.length == 0) {\n\t\t\t\tnewTargets = [Target.fromDefaults(eventID, this.sim)];\n\t\t\t}\n\t\t\tif (newTargets.length == this.targets.length && newTargets.every((target, i) => TargetProto.equals(target.toProto(), this.targets[i].toProto()))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.targets = newTargets;\n\t\t\tthis.targetsChangeEmitter.emit(eventID);\n\t\t});\n\t}\n\n\tmatchesPreset(preset: PresetEncounter): boolean {\n\t\treturn preset.targets.length == this.targets.length && this.targets.every((t, i) => t.matchesPreset(preset.targets[i]));\n\t}\n\n\tapplyPreset(eventID: EventID, preset: PresetEncounter) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tlet newTargets = this.targets.slice(0, preset.targets.length);\n\t\t\twhile (newTargets.length < preset.targets.length) {\n\t\t\t\tnewTargets.push(new Target(this.sim));\n\t\t\t}\n\n\t\t\tnewTargets.forEach((nt, i) => nt.applyPreset(eventID, preset.targets[i]));\n\t\t\tthis.setTargets(eventID, newTargets);\n\t\t});\n\t}\n\n\ttoProto(): EncounterProto {\n\t\treturn EncounterProto.create({\n\t\t\tduration: this.duration,\n\t\t\tdurationVariation: this.durationVariation,\n\t\t\texecuteProportion20: this.executeProportion20,\n\t\t\texecuteProportion25: this.executeProportion25,\n\t\t\texecuteProportion35: this.executeProportion35,\n\t\t\tuseHealth: this.useHealth,\n\t\t\ttargets: this.targets.map(target => target.toProto()),\n\t\t});\n\t}\n\n\tfromProto(eventID: EventID, proto: EncounterProto) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.setDuration(eventID, proto.duration);\n\t\t\tthis.setDurationVariation(eventID, proto.durationVariation);\n\t\t\tthis.setExecuteProportion20(eventID, proto.executeProportion20);\n\t\t\tthis.setExecuteProportion25(eventID, proto.executeProportion25);\n\t\t\tthis.setExecuteProportion35(eventID, proto.executeProportion35);\n\t\t\tthis.setUseHealth(eventID, proto.useHealth);\n\n\t\t\tif (proto.targets.length > 0) {\n\t\t\t\tthis.setTargets(eventID, proto.targets.map(targetProto => {\n\t\t\t\t\tconst target = new Target(this.sim);\n\t\t\t\t\ttarget.fromProto(eventID, targetProto);\n\t\t\t\t\treturn target;\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tthis.setTargets(eventID, [Target.fromDefaults(eventID, this.sim)]);\n\t\t\t}\n\t\t});\n\t}\n\n\tapplyDefaults(eventID: EventID) {\n\t\tthis.fromProto(eventID, EncounterProto.create({\n\t\t\tduration: 180,\n\t\t\tdurationVariation: 5,\n\t\t\texecuteProportion20: 0.2,\n\t\t\texecuteProportion25: 0.25,\n\t\t\texecuteProportion35: 0.35,\n\t\t\ttargets: [Target.defaultProto()],\n\t\t}));\n\t}\n}\n","import { Class } from './proto/common.js';\nimport { Debuffs } from './proto/common.js';\nimport { RaidTarget } from './proto/common.js';\nimport { Raid as RaidProto } from './proto/api.js';\nimport { RaidStats as RaidStatsProto } from './proto/api.js';\nimport { RaidBuffs } from './proto/common.js';\nimport { Spec } from './proto/common.js';\nimport { NO_TARGET } from './proto_utils/utils.js';\n\nimport { Party, MAX_PARTY_SIZE } from './party.js';\nimport { Player } from './player.js';\nimport { EventID, TypedEvent } from './typed_event.js';\nimport { Sim } from './sim.js';\nimport { sum } from './utils.js';\n\nexport const MAX_NUM_PARTIES = 5;\n\n// Manages all the settings for a single Raid.\nexport class Raid {\n\tprivate buffs: RaidBuffs = RaidBuffs.create();\n\tprivate debuffs: Debuffs = Debuffs.create();\n\tprivate tanks: Array<RaidTarget> = [];\n\tprivate targetDummies: number = 0;\n\n\t// Emits when a raid member is added/removed/moved.\n\treadonly compChangeEmitter = new TypedEvent<void>();\n\n\treadonly buffsChangeEmitter = new TypedEvent<void>();\n\treadonly debuffsChangeEmitter = new TypedEvent<void>();\n\treadonly tanksChangeEmitter = new TypedEvent<void>();\n\treadonly targetDummiesChangeEmitter = new TypedEvent<void>();\n\n\t// Emits when anything in the raid changes.\n\treadonly changeEmitter: TypedEvent<void>;\n\n\t// Should always hold exactly MAX_NUM_PARTIES elements.\n\tprivate parties: Array<Party>;\n\n\treadonly sim: Sim;\n\n\tconstructor(sim: Sim) {\n\t\tthis.sim = sim;\n\n\t\tthis.parties = [...Array(MAX_NUM_PARTIES).keys()].map(i => {\n\t\t\tconst newParty = new Party(this, sim);\n\t\t\tnewParty.compChangeEmitter.on(eventID => this.compChangeEmitter.emit(eventID));\n\t\t\tnewParty.changeEmitter.on(eventID => this.changeEmitter.emit(eventID));\n\t\t\treturn newParty;\n\t\t});\n\n\t\tthis.changeEmitter = TypedEvent.onAny([\n\t\t\tthis.compChangeEmitter,\n\t\t\tthis.buffsChangeEmitter,\n\t\t\tthis.debuffsChangeEmitter,\n\t\t\tthis.tanksChangeEmitter,\n\t\t\tthis.targetDummiesChangeEmitter,\n\t\t], 'RaidChange');\n\t}\n\n\tsize(): number {\n\t\treturn sum(this.parties.map(party => party.size()));\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this.size() == 0;\n\t}\n\n\tgetParties(): Array<Party> {\n\t\t// Make defensive copy.\n\t\treturn this.parties.slice();\n\t}\n\n\tgetParty(index: number): Party {\n\t\treturn this.parties[index];\n\t}\n\n\tgetPlayers(): Array<Player<any> | null> {\n\t\treturn this.parties.map(party => party.getPlayers()).flat();\n\t}\n\n\tgetPlayer(index: number): Player<any> | null {\n\t\tconst party = this.parties[Math.floor(index / MAX_PARTY_SIZE)];\n\t\treturn party.getPlayer(index % MAX_PARTY_SIZE);\n\t}\n\n\tgetPlayerFromRaidTarget(raidTarget: RaidTarget): Player<any> | null {\n\t\tif (raidTarget.targetIndex == NO_TARGET) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn this.getPlayer(raidTarget.targetIndex);\n\t\t}\n\t}\n\n\tsetPlayer(eventID: EventID, index: number, newPlayer: Player<any> | null) {\n\t\tconst party = this.parties[Math.floor(index / MAX_PARTY_SIZE)];\n\t\tparty.setPlayer(eventID, index % MAX_PARTY_SIZE, newPlayer);\n\t}\n\n\tgetClassCount(playerClass: Class) {\n\t\treturn this.getPlayers().filter(player => player != null && player.getClass() == playerClass).length;\n\t}\n\n\tgetBuffs(): RaidBuffs {\n\t\t// Make a defensive copy\n\t\treturn RaidBuffs.clone(this.buffs);\n\t}\n\n\tsetBuffs(eventID: EventID, newBuffs: RaidBuffs) {\n\t\tif (RaidBuffs.equals(this.buffs, newBuffs))\n\t\t\treturn;\n\n\t\t// Make a defensive copy\n\t\tthis.buffs = RaidBuffs.clone(newBuffs);\n\n\t\t// Special handle ToW since it crosses buffs/debuffs.\n\t\tif (!this.debuffs.totemOfWrath && this.buffs.totemOfWrath) {\n\t\t\tvar newDebuff = Debuffs.clone(this.debuffs);\n\t\t\tnewDebuff.totemOfWrath = this.buffs.totemOfWrath;\n\t\t\tthis.setDebuffs(eventID, newDebuff);\n\t\t}\n\t\tthis.buffsChangeEmitter.emit(eventID);\n\t}\n\n\tgetDebuffs(): Debuffs {\n\t\t// Make a defensive copy\n\t\treturn Debuffs.clone(this.debuffs);\n\t}\n\n\tsetDebuffs(eventID: EventID, newDebuffs: Debuffs) {\n\t\tif (Debuffs.equals(this.debuffs, newDebuffs))\n\t\t\treturn;\n\n\t\t// Make a defensive copy\n\t\tthis.debuffs = Debuffs.clone(newDebuffs);\n\n\t\t// Special handle ToW since it crosses buffs/debuffs.\n\t\tif (this.debuffs.totemOfWrath && !this.buffs.totemOfWrath) {\n\t\t\tvar newBuffs = RaidBuffs.clone(this.buffs);\n\t\t\tnewBuffs.totemOfWrath = this.debuffs.totemOfWrath;\n\t\t\tthis.setBuffs(eventID, newBuffs);\n\t\t}\n\t\tthis.debuffsChangeEmitter.emit(eventID);\n\t}\n\n\tgetTanks(): Array<RaidTarget> {\n\t\t// Make a defensive copy\n\t\treturn this.tanks.map(tank => RaidTarget.clone(tank));\n\t}\n\n\tsetTanks(eventID: EventID, newTanks: Array<RaidTarget>) {\n\t\tif (this.tanks.length == newTanks.length && this.tanks.every((tank, i) => RaidTarget.equals(tank, newTanks[i])))\n\t\t\treturn;\n\n\t\t// Make a defensive copy\n\t\tthis.tanks = newTanks.map(tank => RaidTarget.clone(tank));\n\t\tthis.tanksChangeEmitter.emit(eventID);\n\t}\n\n\tgetTargetDummies(): number {\n\t\treturn this.targetDummies;\n\t}\n\n\tsetTargetDummies(eventID: EventID, newTargetDummies: number) {\n\t\tif (this.targetDummies == newTargetDummies)\n\t\t\treturn;\n\n\t\tthis.targetDummies = newTargetDummies;\n\t\tthis.targetDummiesChangeEmitter.emit(eventID);\n\t}\n\n\ttoProto(forExport?: boolean): RaidProto {\n\t\treturn RaidProto.create({\n\t\t\tparties: this.parties.map(party => party.toProto(forExport)),\n\t\t\tbuffs: this.getBuffs(),\n\t\t\tdebuffs: this.getDebuffs(),\n\t\t\ttanks: this.getTanks(),\n\t\t\ttargetDummies: this.getTargetDummies(),\n\t\t});\n\t}\n\n\tfromProto(eventID: EventID, proto: RaidProto) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.setBuffs(eventID, proto.buffs || RaidBuffs.create());\n\t\t\tthis.setDebuffs(eventID, proto.debuffs || Debuffs.create());\n\t\t\tthis.setTanks(eventID, proto.tanks);\n\t\t\tthis.setTargetDummies(eventID, proto.targetDummies);\n\n\t\t\tfor (let i = 0; i < MAX_NUM_PARTIES; i++) {\n\t\t\t\tif (proto.parties[i]) {\n\t\t\t\t\tthis.parties[i].fromProto(eventID, proto.parties[i]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.parties[i].clear(eventID);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tclear(eventID: EventID) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tfor (let i = 0; i < MAX_NUM_PARTIES; i++) {\n\t\t\t\tthis.parties[i].clear(eventID);\n\t\t\t}\n\t\t});\n\t}\n}\n","import { REPO_NAME } from './constants/other.js'\nimport { Enchant } from './proto/common.js';\nimport { Gem } from './proto/common.js';\nimport { GemColor } from './proto/common.js';\nimport { Item } from './proto/common.js';\nimport { ItemQuality } from './proto/common.js';\nimport { ItemSlot } from './proto/common.js';\nimport { ItemSpec } from './proto/common.js';\nimport { ItemType } from './proto/common.js';\nimport { Stat } from './proto/common.js';\n\nimport { ComputeStatsRequest, ComputeStatsResult } from './proto/api.js';\nimport { GearListRequest, GearListResult } from './proto/api.js';\nimport { RaidSimRequest, RaidSimResult, ProgressMetrics } from './proto/api.js';\nimport { StatWeightsRequest, StatWeightsResult } from './proto/api.js';\n\nimport { wait } from './utils.js';\n\nconst SIM_WORKER_URL = `/${REPO_NAME}/sim_worker.js`;\n\nexport class WorkerPool {\n\tprivate workers: Array<SimWorker>;\n\n\tconstructor(numWorkers: number) {\n\t\tthis.workers = [];\n\t\tfor (let i = 0; i < numWorkers; i++) {\n\t\t\tthis.workers.push(new SimWorker());\n\t\t}\n\t}\n\n\tprivate getLeastBusyWorker(): SimWorker {\n\t\treturn this.workers.reduce(\n\t\t\t(curMinWorker, nextWorker) => curMinWorker.numTasksRunning < nextWorker.numTasksRunning ?\n\t\t\t\tcurMinWorker : nextWorker);\n\t}\n\n\tasync makeApiCall(requestName: string, request: Uint8Array): Promise<Uint8Array> {\n\t\treturn await this.getLeastBusyWorker().doApiCall(requestName, request, \"\");\n\t}\n\n\tasync getGearList(request: GearListRequest): Promise<GearListResult> {\n\t\tconst result = await this.makeApiCall('gearList', GearListRequest.toBinary(request));\n\t\treturn GearListResult.fromBinary(result);\n\t}\n\n\tasync computeStats(request: ComputeStatsRequest): Promise<ComputeStatsResult> {\n\t\tconst result = await this.makeApiCall('computeStats', ComputeStatsRequest.toBinary(request));\n\t\treturn ComputeStatsResult.fromBinary(result);\n\t}\n\n\tasync statWeightsAsync(request: StatWeightsRequest, onProgress: Function): Promise<StatWeightsResult> {\n\t\tconsole.log('Stat weights request: ' + StatWeightsRequest.toJsonString(request));\n\t\tconst worker = this.getLeastBusyWorker();\n\t\tconst id = worker.makeTaskId();\n\t\t// Add handler for the progress events\n\t\tworker.addPromiseFunc(id + \"progress\", this.newProgressHandler(id, worker, onProgress), (err) => { })\n\n\t\t// Now start the async sim\n\t\tconst resultData = await worker.doApiCall('statWeightsAsync', StatWeightsRequest.toBinary(request), id);\n\t\tconst result = ProgressMetrics.fromBinary(resultData)\n\t\tconsole.log('Stat weights result: ' + StatWeightsResult.toJsonString(result.finalWeightResult!));\n\t\treturn result.finalWeightResult!;\n\t}\n\n\tasync raidSimAsync(request: RaidSimRequest, onProgress: Function): Promise<RaidSimResult> {\n\t\tconsole.log('Raid sim request: ' + RaidSimRequest.toJsonString(request));\n\t\tconst worker = this.getLeastBusyWorker();\n\t\tconst id = worker.makeTaskId();\n\t\t// Add handler for the progress events\n\t\tworker.addPromiseFunc(id + \"progress\", this.newProgressHandler(id, worker, onProgress), (err) => { })\n\n\t\t// Now start the async sim\n\t\tconst resultData = await worker.doApiCall('raidSimAsync', RaidSimRequest.toBinary(request), id);\n\t\tconst result = ProgressMetrics.fromBinary(resultData)\n\n\t\t// Don't print the logs because it just clogs the console.\n\t\tconst resultJson = RaidSimResult.toJson(result.finalRaidResult!) as any;\n\t\tdelete resultJson!['logs'];\n\t\tconsole.log('Raid sim result: ' + JSON.stringify(resultJson));\n\t\treturn result.finalRaidResult!;\n\t}\n\n\tnewProgressHandler(id: string, worker: SimWorker, onProgress: Function): (progressData: any) => void {\n\t\treturn (progressData: any) => {\n\t\t\tvar progress = ProgressMetrics.fromBinary(progressData);\n\t\t\tonProgress(progress);\n\t\t\t// If we are done, stop adding the handler.\n\t\t\tif (progress.finalRaidResult != null || progress.finalWeightResult != null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tworker.addPromiseFunc(id + \"progress\", this.newProgressHandler(id, worker, onProgress), (err) => { });\n\t\t};\n\t}\n}\n\nclass SimWorker {\n\tnumTasksRunning: number;\n\tprivate taskIdsToPromiseFuncs: Record<string, [(result: any) => void, (error: any) => void]>;\n\tprivate worker: Worker;\n\tprivate onReady: Promise<void>;\n\n\tconstructor() {\n\t\tthis.numTasksRunning = 0;\n\t\tthis.taskIdsToPromiseFuncs = {};\n\t\tthis.worker = new window.Worker(SIM_WORKER_URL);\n\n\t\tlet resolveReady: (() => void) | null = null;\n\t\tthis.onReady = new Promise((_resolve, _reject) => {\n\t\t\tresolveReady = _resolve;\n\t\t});\n\n\t\tthis.worker.onmessage = event => {\n\t\t\tif (event.data.msg == 'ready') {\n\t\t\t\tthis.worker.postMessage({ msg: 'setID', id: '1' });\n\t\t\t\tresolveReady!();\n\t\t\t} else if (event.data.msg == 'idconfirm') {\n\t\t\t\t// Do nothing\n\t\t\t} else {\n\t\t\t\tconst id = event.data.id;\n\t\t\t\tif (!this.taskIdsToPromiseFuncs[id]) {\n\t\t\t\t\tconsole.warn('Unrecognized result id: ' + id);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst promiseFuncs = this.taskIdsToPromiseFuncs[id];\n\t\t\t\tdelete this.taskIdsToPromiseFuncs[id];\n\t\t\t\tthis.numTasksRunning--;\n\n\t\t\t\tpromiseFuncs[0](event.data.outputData);\n\t\t\t}\n\t\t};\n\t}\n\n\taddPromiseFunc(id: string, callback: (result: any) => void, onError: (error: any) => void) {\n\t\tthis.taskIdsToPromiseFuncs[id] = [callback, onError];\n\t}\n\n\tmakeTaskId(): string {\n\t\tlet id = '';\n\t\tconst characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\t\tfor (let i = 0; i < 16; i++) {\n\t\t\tid += characters.charAt(Math.floor(Math.random() * characters.length));\n\t\t}\n\t\treturn id;\n\t}\n\n\tasync doApiCall(requestName: string, request: Uint8Array, id: string): Promise<Uint8Array> {\n\t\tthis.numTasksRunning++;\n\t\tawait this.onReady;\n\n\t\tconst taskPromise = new Promise<Uint8Array>((resolve, reject) => {\n\t\t\tif (!id) {\n\t\t\t\tid = this.makeTaskId();\n\t\t\t}\n\t\t\tthis.taskIdsToPromiseFuncs[id] = [resolve, reject];\n\n\t\t\tthis.worker.postMessage({\n\t\t\t\tmsg: requestName,\n\t\t\t\tid: id,\n\t\t\t\tinputData: request,\n\t\t\t});\n\t\t});\n\t\treturn await taskPromise;\n\t}\n}\n","import { Class, Faction } from './proto/common.js';\nimport { Consumes } from './proto/common.js';\nimport { Enchant } from './proto/common.js';\nimport { Encounter as EncounterProto } from './proto/common.js';\nimport { EquipmentSpec } from './proto/common.js';\nimport { Gem } from './proto/common.js';\nimport { GemColor } from './proto/common.js';\nimport { ItemQuality } from './proto/common.js';\nimport { ItemSlot } from './proto/common.js';\nimport { ItemSpec } from './proto/common.js';\nimport { ItemType } from './proto/common.js';\nimport { Item } from './proto/common.js';\nimport { Profession } from './proto/common.js';\nimport { Race } from './proto/common.js';\nimport { RaidTarget } from './proto/common.js';\nimport { Spec } from './proto/common.js';\nimport { Stat } from './proto/common.js';\nimport { Raid as RaidProto } from './proto/api.js';\nimport { PresetEncounter, PresetTarget } from './proto/api.js';\nimport { ComputeStatsRequest, ComputeStatsResult } from './proto/api.js';\nimport { GearListRequest, GearListResult } from './proto/api.js';\nimport { RaidSimRequest, RaidSimResult } from './proto/api.js';\nimport { SimOptions } from './proto/api.js';\nimport { StatWeightsRequest, StatWeightsResult } from './proto/api.js';\nimport { SimSettings as SimSettingsProto } from './proto/ui.js';\n\nimport { EquippedItem } from './proto_utils/equipped_item.js';\nimport { Gear } from './proto_utils/gear.js';\nimport { SimResult } from './proto_utils/sim_result.js';\nimport { Stats } from './proto_utils/stats.js';\nimport { gemEligibleForSocket } from './proto_utils/gems.js';\nimport { gemMatchesSocket } from './proto_utils/gems.js';\nimport { SpecRotation } from './proto_utils/utils.js';\nimport { SpecTalents } from './proto_utils/utils.js';\nimport { SpecTypeFunctions } from './proto_utils/utils.js';\nimport { specTypeFunctions } from './proto_utils/utils.js';\nimport { SpecOptions } from './proto_utils/utils.js';\nimport { specToClass } from './proto_utils/utils.js';\nimport { specToEligibleRaces } from './proto_utils/utils.js';\nimport { getEligibleItemSlots } from './proto_utils/utils.js';\nimport { getEligibleEnchantSlots } from './proto_utils/utils.js';\nimport { playerToSpec } from './proto_utils/utils.js';\n\nimport { Encounter } from './encounter.js';\nimport { Player } from './player.js';\nimport { Raid } from './raid.js';\nimport { Listener } from './typed_event.js';\nimport { EventID, TypedEvent } from './typed_event.js';\nimport { sum } from './utils.js';\nimport { wait } from './utils.js';\nimport { WorkerPool } from './worker_pool.js';\n\nimport * as OtherConstants from './constants/other.js';\n\nexport type RaidSimData = {\n\trequest: RaidSimRequest,\n\tresult: RaidSimResult,\n};\n\nexport type StatWeightsData = {\n\trequest: StatWeightsRequest,\n\tresult: StatWeightsResult,\n};\n\n// Core Sim module which deals only with api types, no UI-related stuff.\nexport class Sim {\n\tprivate readonly workerPool: WorkerPool;\n\n\tprivate iterations: number = 3000;\n\tprivate phase: number = OtherConstants.CURRENT_PHASE;\n\tprivate faction: Faction = Faction.Alliance;\n\tprivate fixedRngSeed: number = 0;\n\tprivate show1hWeapons: boolean = true;\n\tprivate show2hWeapons: boolean = true;\n\tprivate showMatchingGems: boolean = true;\n\tprivate showDamageMetrics: boolean = true;\n\tprivate showThreatMetrics: boolean = false;\n\tprivate showHealingMetrics: boolean = false;\n\tprivate showExperimental: boolean = false;\n\n\treadonly raid: Raid;\n\treadonly encounter: Encounter;\n\n\t// Database\n\tprivate items: Record<number, Item> = {};\n\tprivate enchants: Enchant[] = [];\n\tprivate gems: Record<number, Gem> = {};\n\tprivate presetEncounters: Record<string, PresetEncounter> = {};\n\tprivate presetTargets: Record<string, PresetTarget> = {};\n\n\treadonly iterationsChangeEmitter = new TypedEvent<void>();\n\treadonly phaseChangeEmitter = new TypedEvent<void>();\n\treadonly factionChangeEmitter = new TypedEvent<void>();\n\treadonly fixedRngSeedChangeEmitter = new TypedEvent<void>();\n\treadonly lastUsedRngSeedChangeEmitter = new TypedEvent<void>();\n\treadonly show1hWeaponsChangeEmitter = new TypedEvent<void>();\n\treadonly show2hWeaponsChangeEmitter = new TypedEvent<void>();\n\treadonly showMatchingGemsChangeEmitter = new TypedEvent<void>();\n\treadonly showDamageMetricsChangeEmitter = new TypedEvent<void>();\n\treadonly showThreatMetricsChangeEmitter = new TypedEvent<void>();\n\treadonly showHealingMetricsChangeEmitter = new TypedEvent<void>();\n\treadonly showExperimentalChangeEmitter = new TypedEvent<void>();\n\treadonly crashEmitter = new TypedEvent<SimError>();\n\n\t// Emits when any of the settings change (but not the raid / encounter).\n\treadonly settingsChangeEmitter: TypedEvent<void>;\n\n\t// Emits when any of the above emitters emit.\n\treadonly changeEmitter: TypedEvent<void>;\n\n\t// Fires when a raid sim API call completes.\n\treadonly simResultEmitter = new TypedEvent<SimResult>();\n\n\tprivate readonly _initPromise: Promise<void>;\n\tprivate lastUsedRngSeed: number = 0;\n\n\t// These callbacks are needed so we can apply BuffBot modifications automatically before sending requests.\n\tprivate modifyRaidProto: ((raidProto: RaidProto) => void) = () => { };\n\n\tconstructor() {\n\t\tthis.workerPool = new WorkerPool(3);\n\n\t\tthis._initPromise = this.workerPool.getGearList(GearListRequest.create()).then(result => {\n\t\t\tresult.items.forEach(item => this.items[item.id] = item);\n\t\t\t// result.enchants.forEach(enchant => this.enchants[enchant.id] = enchant);\n\t\t\tthis.enchants = result.enchants;\n\t\t\tresult.gems.forEach(gem => this.gems[gem.id] = gem);\n\t\t\tresult.encounters.forEach(encounter => this.presetEncounters[encounter.path] = encounter);\n\t\t\tresult.encounters.map(e => e.targets).flat().forEach(target => this.presetTargets[target.path] = target);\n\t\t});\n\n\t\tthis.raid = new Raid(this);\n\t\tthis.encounter = new Encounter(this);\n\n\t\tthis.settingsChangeEmitter = TypedEvent.onAny([\n\t\t\tthis.iterationsChangeEmitter,\n\t\t\tthis.phaseChangeEmitter,\n\t\t\tthis.fixedRngSeedChangeEmitter,\n\t\t\tthis.show1hWeaponsChangeEmitter,\n\t\t\tthis.show2hWeaponsChangeEmitter,\n\t\t\tthis.showMatchingGemsChangeEmitter,\n\t\t\tthis.showDamageMetricsChangeEmitter,\n\t\t\tthis.showThreatMetricsChangeEmitter,\n\t\t\tthis.showHealingMetricsChangeEmitter,\n\t\t\tthis.showExperimentalChangeEmitter,\n\t\t]);\n\n\t\tthis.changeEmitter = TypedEvent.onAny([\n\t\t\tthis.settingsChangeEmitter,\n\t\t\tthis.raid.changeEmitter,\n\t\t\tthis.encounter.changeEmitter,\n\t\t]);\n\n\t\tthis.raid.changeEmitter.on(eventID => this.updateCharacterStats(eventID));\n\t}\n\n\twaitForInit(): Promise<void> {\n\t\treturn this._initPromise;\n\t}\n\n\tsetModifyRaidProto(newModFn: (raidProto: RaidProto) => void) {\n\t\tthis.modifyRaidProto = newModFn;\n\t}\n\tgetModifiedRaidProto(): RaidProto {\n\t\tconst raidProto = this.raid.toProto();\n\t\tthis.modifyRaidProto(raidProto);\n\n\t\t// Remove any inactive meta gems, since the backend doesn't have its own validation.\n\t\traidProto.parties.forEach(party => {\n\t\t\tparty.players.forEach(player => {\n\t\t\t\tif (!player.equipment) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet gear = this.lookupEquipmentSpec(player.equipment);\n\t\t\t\tlet gearChanged = false;\n\n\t\t\t\tconst isBlacksmith = [player.profession1, player.profession2].includes(Profession.Blacksmithing);\n\n\t\t\t\t// Disable meta gem if inactive.\n\t\t\t\tif (gear.hasInactiveMetaGem(isBlacksmith)) {\n\t\t\t\t\tgear = gear.withoutMetaGem();\n\t\t\t\t\tgearChanged = true;\n\t\t\t\t}\n\n\t\t\t\t// Remove bonus sockets if not blacksmith.\n\t\t\t\tif (!isBlacksmith) {\n\t\t\t\t\tgear = gear.withoutBlacksmithSockets();\n\t\t\t\t\tgearChanged = true;\n\t\t\t\t}\n\n\t\t\t\tif (gearChanged) {\n\t\t\t\t\tplayer.equipment = gear.asSpec();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn raidProto;\n\t}\n\n\tprivate makeRaidSimRequest(debug: boolean): RaidSimRequest {\n\t\tconst raid = this.getModifiedRaidProto();\n\t\tconst encounter = this.encounter.toProto();\n\n\t\t// TODO: remove any replenishment from sim request here? probably makes more sense to do it inside the sim to protect against accidents\n\n\t\treturn RaidSimRequest.create({\n\t\t\traid: raid,\n\t\t\tencounter: encounter,\n\t\t\tsimOptions: SimOptions.create({\n\t\t\t\titerations: debug ? 1 : this.getIterations(),\n\t\t\t\trandomSeed: BigInt(this.nextRngSeed()),\n\t\t\t\tdebugFirstIteration: true,\n\t\t\t}),\n\t\t});\n\t}\n\n\tasync runRaidSim(eventID: EventID, onProgress: Function) {\n\t\tif (this.raid.isEmpty()) {\n\t\t\tthrow new Error('Raid is empty! Try adding some players first.');\n\t\t} else if (this.encounter.getNumTargets() < 1) {\n\t\t\tthrow new Error('Encounter has no targets! Try adding some targets first.');\n\t\t}\n\n\t\tawait this.waitForInit();\n\n\t\tconst request = this.makeRaidSimRequest(false);\n\n\t\tvar result = await this.workerPool.raidSimAsync(request, onProgress);\n\t\tif (result.errorResult != \"\") {\n\t\t\tthrow new SimError(result.errorResult);\n\t\t}\n\t\tconst simResult = await SimResult.makeNew(request, result);\n\t\tthis.simResultEmitter.emit(eventID, simResult);\n\t}\n\n\tasync runRaidSimWithLogs(eventID: EventID): Promise<SimResult> {\n\t\tif (this.raid.isEmpty()) {\n\t\t\tthrow new Error('Raid is empty! Try adding some players first.');\n\t\t} else if (this.encounter.getNumTargets() < 1) {\n\t\t\tthrow new Error('Encounter has no targets! Try adding some targets first.');\n\t\t}\n\n\t\tawait this.waitForInit();\n\n\t\tconst request = this.makeRaidSimRequest(true);\n\t\tconst result = await this.workerPool.raidSimAsync(request, () => { });\n\t\tif (result.errorResult != \"\") {\n\t\t\tthrow new SimError(result.errorResult);\n\t\t}\n\t\tconst simResult = await SimResult.makeNew(request, result);\n\t\tthis.simResultEmitter.emit(eventID, simResult);\n\t\treturn simResult;\n\t}\n\n\t// This should be invoked internally whenever stats might have changed.\n\tprivate async updateCharacterStats(eventID: EventID) {\n\t\tif (eventID == 0) {\n\t\t\t// Skip the first event ID because it interferes with the loaded stats.\n\t\t\treturn;\n\t\t}\n\t\teventID = TypedEvent.nextEventID();\n\n\t\tawait this.waitForInit();\n\n\t\t// Capture the current players so we avoid issues if something changes while\n\t\t// request is in-flight.\n\t\tconst players = this.raid.getPlayers();\n\n\t\tconst req = ComputeStatsRequest.create({ raid: this.getModifiedRaidProto() });\n\t\tconst result = await this.workerPool.computeStats(req);\n\n\t\tif (result.errorResult != \"\") {\n\t\t\tthis.crashEmitter.emit(eventID, new SimError(result.errorResult));\n\t\t\treturn;\n\t\t}\n\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tresult.raidStats!.parties\n\t\t\t\t.forEach((partyStats, partyIndex) =>\n\t\t\t\t\tpartyStats.players.forEach((playerStats, playerIndex) =>\n\t\t\t\t\t\tplayers[partyIndex * 5 + playerIndex]?.setCurrentStats(eventID, playerStats)));\n\t\t});\n\t}\n\n\tasync statWeights(player: Player<any>, epStats: Array<Stat>, epReferenceStat: Stat, onProgress: Function): Promise<StatWeightsResult> {\n\t\tif (this.raid.isEmpty()) {\n\t\t\tthrow new Error('Raid is empty! Try adding some players first.');\n\t\t} else if (this.encounter.getNumTargets() < 1) {\n\t\t\tthrow new Error('Encounter has no targets! Try adding some targets first.');\n\t\t}\n\n\t\tawait this.waitForInit();\n\n\t\tif (player.getParty() == null) {\n\t\t\tconsole.warn('Trying to get stat weights without a party!');\n\t\t\treturn StatWeightsResult.create();\n\t\t} else {\n\t\t\tconst tanks = this.raid.getTanks().map(tank => tank.targetIndex).includes(player.getRaidIndex())\n\t\t\t\t? [RaidTarget.create({ targetIndex: 0 })]\n\t\t\t\t: [];\n\t\t\tconst request = StatWeightsRequest.create({\n\t\t\t\tplayer: player.toProto(),\n\t\t\t\traidBuffs: this.raid.getBuffs(),\n\t\t\t\tpartyBuffs: player.getParty()!.getBuffs(),\n\t\t\t\tdebuffs: this.raid.getDebuffs(),\n\t\t\t\tencounter: this.encounter.toProto(),\n\t\t\t\tsimOptions: SimOptions.create({\n\t\t\t\t\titerations: this.getIterations(),\n\t\t\t\t\trandomSeed: BigInt(this.nextRngSeed()),\n\t\t\t\t\tdebug: false,\n\t\t\t\t}),\n\t\t\t\ttanks: tanks,\n\n\t\t\t\tstatsToWeigh: epStats,\n\t\t\t\tepReferenceStat: epReferenceStat,\n\t\t\t});\n\t\t\tvar result = await this.workerPool.statWeightsAsync(request, onProgress);\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tgetItems(slot: ItemSlot | undefined): Array<Item> {\n\t\tlet items = Object.values(this.items);\n\t\tif (slot != undefined) {\n\t\t\titems = items.filter(item => getEligibleItemSlots(item).includes(slot));\n\t\t}\n\t\treturn items;\n\t}\n\n\tgetEnchants(slot: ItemSlot | undefined): Array<Enchant> {\n\t\tlet enchants = Object.values(this.enchants);\n\t\tif (slot != undefined) {\n\t\t\tenchants = enchants.filter(enchant => getEligibleEnchantSlots(enchant).includes(slot));\n\t\t}\n\t\treturn enchants;\n\t}\n\n\t// ID can be the formula ID OR the effect ID.\n\tgetEnchantFlexible(id: number): Enchant | null {\n\t\treturn Object.values(this.enchants).find(enchant => enchant.id == id || enchant.effectId == id) || null;\n\t}\n\n\tgetGems(socketColor?: GemColor): Array<Gem> {\n\t\tlet gems = Object.values(this.gems);\n\t\tif (socketColor) {\n\t\t\tgems = gems.filter(gem => gemEligibleForSocket(gem, socketColor));\n\t\t}\n\t\treturn gems;\n\t}\n\n\tgetMatchingGems(socketColor: GemColor): Array<Gem> {\n\t\treturn Object.values(this.gems).filter(gem => gemMatchesSocket(gem, socketColor));\n\t}\n\n\tgetPresetEncounter(path: string): PresetEncounter | null {\n\t\treturn this.presetEncounters[path] || null;\n\t}\n\tgetPresetTarget(path: string): PresetTarget | null {\n\t\treturn this.presetTargets[path] || null;\n\t}\n\tgetAllPresetEncounters(): Array<PresetEncounter> {\n\t\treturn Object.values(this.presetEncounters);\n\t}\n\tgetAllPresetTargets(): Array<PresetTarget> {\n\t\treturn Object.values(this.presetTargets);\n\t}\n\n\tgetPhase(): number {\n\t\treturn this.phase;\n\t}\n\tsetPhase(eventID: EventID, newPhase: number) {\n\t\tif (newPhase != this.phase && newPhase > 0) {\n\t\t\tthis.phase = newPhase;\n\t\t\tthis.phaseChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetFaction(): Faction {\n\t\treturn this.faction;\n\t}\n\tsetFaction(eventID: EventID, newFaction: Faction) {\n\t\tif (newFaction != this.faction && !!newFaction) {\n\t\t\tthis.faction = newFaction;\n\t\t\tthis.factionChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetFixedRngSeed(): number {\n\t\treturn this.fixedRngSeed;\n\t}\n\tsetFixedRngSeed(eventID: EventID, newFixedRngSeed: number) {\n\t\tif (newFixedRngSeed != this.fixedRngSeed) {\n\t\t\tthis.fixedRngSeed = newFixedRngSeed;\n\t\t\tthis.fixedRngSeedChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tstatic MAX_RNG_SEED = Math.pow(2, 32) - 1;\n\tprivate nextRngSeed(): number {\n\t\tlet rngSeed = 0;\n\t\tif (this.fixedRngSeed) {\n\t\t\trngSeed = this.fixedRngSeed;\n\t\t} else {\n\t\t\trngSeed = Math.floor(Math.random() * Sim.MAX_RNG_SEED);\n\t\t}\n\n\t\tthis.lastUsedRngSeed = rngSeed;\n\t\tthis.lastUsedRngSeedChangeEmitter.emit(TypedEvent.nextEventID());\n\t\treturn rngSeed;\n\t}\n\tgetLastUsedRngSeed(): number {\n\t\treturn this.lastUsedRngSeed;\n\t}\n\n\n\tgetShow1hWeapons(): boolean {\n\t\treturn this.show1hWeapons;\n\t}\n\tsetShow1hWeapons(eventID: EventID, newShow1hWeapons: boolean) {\n\t\tif (newShow1hWeapons != this.show1hWeapons) {\n\t\t\tthis.show1hWeapons = newShow1hWeapons;\n\t\t\tthis.show1hWeaponsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetShow2hWeapons(): boolean {\n\t\treturn this.show2hWeapons;\n\t}\n\tsetShow2hWeapons(eventID: EventID, newShow2hWeapons: boolean) {\n\t\tif (newShow2hWeapons != this.show2hWeapons) {\n\t\t\tthis.show2hWeapons = newShow2hWeapons;\n\t\t\tthis.show2hWeaponsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetShowMatchingGems(): boolean {\n\t\treturn this.showMatchingGems;\n\t}\n\tsetShowMatchingGems(eventID: EventID, newShowMatchingGems: boolean) {\n\t\tif (newShowMatchingGems != this.showMatchingGems) {\n\t\t\tthis.showMatchingGems = newShowMatchingGems;\n\t\t\tthis.showMatchingGemsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetShowDamageMetrics(): boolean {\n\t\treturn this.showDamageMetrics;\n\t}\n\tsetShowDamageMetrics(eventID: EventID, newShowDamageMetrics: boolean) {\n\t\tif (newShowDamageMetrics != this.showDamageMetrics) {\n\t\t\tthis.showDamageMetrics = newShowDamageMetrics;\n\t\t\tthis.showDamageMetricsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetShowThreatMetrics(): boolean {\n\t\treturn this.showThreatMetrics;\n\t}\n\tsetShowThreatMetrics(eventID: EventID, newShowThreatMetrics: boolean) {\n\t\tif (newShowThreatMetrics != this.showThreatMetrics) {\n\t\t\tthis.showThreatMetrics = newShowThreatMetrics;\n\t\t\tthis.showThreatMetricsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetShowHealingMetrics(): boolean {\n\t\treturn this.showHealingMetrics;\n\t}\n\tsetShowHealingMetrics(eventID: EventID, newShowHealingMetrics: boolean) {\n\t\tif (newShowHealingMetrics != this.showHealingMetrics) {\n\t\t\tthis.showHealingMetrics = newShowHealingMetrics;\n\t\t\tthis.showHealingMetricsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetShowExperimental(): boolean {\n\t\treturn this.showExperimental;\n\t}\n\tsetShowExperimental(eventID: EventID, newShowExperimental: boolean) {\n\t\tif (newShowExperimental != this.showExperimental) {\n\t\t\tthis.showExperimental = newShowExperimental;\n\t\t\tthis.showExperimentalChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetIterations(): number {\n\t\treturn this.iterations;\n\t}\n\tsetIterations(eventID: EventID, newIterations: number) {\n\t\tif (newIterations != this.iterations) {\n\t\t\tthis.iterations = newIterations;\n\t\t\tthis.iterationsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tlookupItemSpec(itemSpec: ItemSpec): EquippedItem | null {\n\t\tconst item = this.items[itemSpec.id];\n\t\tif (!item)\n\t\t\treturn null;\n\n\t\tconst enchant = itemSpec.enchant > 0 ? this.enchants.find(e => (e.id == itemSpec.enchant && e.type == item.type)) : null;\n\t\tconst gems = itemSpec.gems.map(gemId => this.gems[gemId] || null);\n\n\t\treturn new EquippedItem(item, enchant, gems);\n\t}\n\n\tlookupEquipmentSpec(equipSpec: EquipmentSpec): Gear {\n\t\t// EquipmentSpec is supposed to be indexed by slot, but here we assume\n\t\t// it isn't just in case.\n\t\tconst gearMap: Partial<Record<ItemSlot, EquippedItem | null>> = {};\n\n\t\tequipSpec.items.forEach(itemSpec => {\n\t\t\tconst item = this.lookupItemSpec(itemSpec);\n\t\t\tif (!item)\n\t\t\t\treturn;\n\n\t\t\tconst itemSlots = getEligibleItemSlots(item.item);\n\n\t\t\tconst assignedSlot = itemSlots.find(slot => !gearMap[slot]);\n\t\t\tif (assignedSlot == null)\n\t\t\t\tthrow new Error('No slots left to equip ' + Item.toJsonString(item.item));\n\n\t\t\tgearMap[assignedSlot] = item;\n\t\t});\n\n\t\treturn new Gear(gearMap);\n\t}\n\n\ttoProto(): SimSettingsProto {\n\t\treturn SimSettingsProto.create({\n\t\t\titerations: this.getIterations(),\n\t\t\tphase: this.getPhase(),\n\t\t\tfixedRngSeed: BigInt(this.getFixedRngSeed()),\n\t\t\tshowDamageMetrics: this.getShowDamageMetrics(),\n\t\t\tshowThreatMetrics: this.getShowThreatMetrics(),\n\t\t\tshowHealingMetrics: this.getShowHealingMetrics(),\n\t\t\tshowExperimental: this.getShowExperimental(),\n\t\t\tfaction: this.getFaction(),\n\t\t});\n\t}\n\n\tfromProto(eventID: EventID, proto: SimSettingsProto) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.setIterations(eventID, proto.iterations || 3000);\n\t\t\tthis.setPhase(eventID, proto.phase || OtherConstants.CURRENT_PHASE);\n\t\t\tthis.setFixedRngSeed(eventID, Number(proto.fixedRngSeed));\n\t\t\tthis.setShowDamageMetrics(eventID, proto.showDamageMetrics);\n\t\t\tthis.setShowThreatMetrics(eventID, proto.showThreatMetrics);\n\t\t\tthis.setShowHealingMetrics(eventID, proto.showHealingMetrics);\n\t\t\tthis.setShowExperimental(eventID, proto.showExperimental);\n\t\t\tthis.setFaction(eventID, proto.faction || Faction.Alliance)\n\t\t});\n\t}\n\n\tapplyDefaults(eventID: EventID, isTankSim: boolean, isHealingSim: boolean) {\n\t\tthis.fromProto(eventID, SimSettingsProto.create({\n\t\t\titerations: 3000,\n\t\t\tphase: OtherConstants.CURRENT_PHASE,\n\t\t\tfaction: Faction.Alliance,\n\t\t\tshowDamageMetrics: !isHealingSim,\n\t\t\tshowThreatMetrics: isTankSim,\n\t\t\tshowHealingMetrics: isHealingSim,\n\t\t}));\n\t}\n}\n\nexport class SimError extends Error {\n\treadonly errorStr: string;\n\n\tconstructor(errorStr: string) {\n\t\tsuper(errorStr);\n\t\tthis.errorStr = errorStr;\n\t}\n}\n","import { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Input, InputConfig } from './input.js';\n\n/**\n * Data for creating a number picker.\n */\nexport interface NumberPickerConfig<ModObject> extends InputConfig<ModObject, number> {\n\tfloat?: boolean,\n\tpositive?: boolean,\n}\n\n// UI element for picking an arbitrary number field.\nexport class NumberPicker<ModObject> extends Input<ModObject, number> {\n\tprivate readonly inputElem: HTMLInputElement;\n\tprivate float: boolean;\n\tprivate positive: boolean;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: NumberPickerConfig<ModObject>) {\n\t\tsuper(parent, 'number-picker-root', modObject, config);\n\t\tthis.float = config.float || false;\n\t\tthis.positive = config.positive || false;\n\n\t\tthis.inputElem = document.createElement('input');\n\t\tif (this.float) {\n\t\t\tthis.inputElem.type = 'text';\n\t\t\tthis.inputElem.inputMode = 'numeric';\n\t\t} else {\n\t\t\tthis.inputElem.type = 'number';\n\t\t\tif (this.positive) {\n\t\t\t\tthis.inputElem.min = \"0\"\n\t\t\t\tthis.inputElem.onchange = e => {\n\t\t\t\t\tthis.inputElem.value = Math.abs(parseInt(this.inputElem.value)).toString()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.inputElem.classList.add('number-picker-input');\n\t\tthis.rootElem.appendChild(this.inputElem);\n\n\t\tthis.init();\n\n\t\tthis.inputElem.addEventListener('change', event => {\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.inputElem;\n\t}\n\n\tgetInputValue(): number {\n\t\tif (this.float) {\n\t\t\treturn parseFloat(this.inputElem.value || '') || 0;\n\t\t} else {\n\t\t\treturn parseInt(this.inputElem.value || '') || 0;\n\t\t}\n\t}\n\n\tsetInputValue(newValue: number) {\n\t\tthis.inputElem.value = String(newValue);\n\t}\n}\n","import { Stat } from '../proto/common.js';\nimport { getClassStatName, statOrder } from '../proto_utils/names.js';\nimport { Stats } from '../proto_utils/stats.js';\nimport { Player } from '../player.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Component } from './component.js';\nimport { NumberPicker } from './number_picker.js';\n\ndeclare var tippy: any;\n\nexport class BonusStatsPicker extends Component {\n\treadonly stats: Array<Stat>;\n\treadonly statPickers: Array<NumberPicker<Player<any>>>;\n\n\tconstructor(parent: HTMLElement, player: Player<any>, stats: Array<Stat>) {\n\t\tsuper(parent, 'bonus-stats-root');\n\t\tthis.stats = stats;\n\n\t\tconst label = document.createElement('span');\n\t\tlabel.classList.add('bonus-stats-label');\n\t\tlabel.textContent = 'Bonus Stats';\n\t\ttippy(label, {\n\t\t\t'content': 'Extra stats to add on top of gear, buffs, etc.',\n\t\t\t'allowHTML': true,\n\t\t});\n\t\tthis.rootElem.appendChild(label);\n\n\t\tthis.statPickers = statOrder.filter(stat => this.stats.includes(stat)).map(stat => new NumberPicker(this.rootElem, player, {\n\t\t\tlabel: getClassStatName(stat, player.getClass()),\n\t\t\tchangedEvent: (player: Player<any>) => player.bonusStatsChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => player.getBonusStats().getStat(stat),\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\t\t\tconst bonusStats = player.getBonusStats().withStat(stat, newValue);\n\t\t\t\tplayer.setBonusStats(eventID, bonusStats);\n\t\t\t},\n\t\t}));\n\n\t\tplayer.bonusStatsChangeEmitter.on(() => {\n\t\t\tthis.statPickers.forEach(statPicker => {\n\t\t\t\tif (statPicker.getInputValue() > 0) {\n\t\t\t\t\tstatPicker.rootElem.classList.remove('negative');\n\t\t\t\t\tstatPicker.rootElem.classList.add('positive');\n\t\t\t\t} else if (statPicker.getInputValue() < 0) {\n\t\t\t\t\tstatPicker.rootElem.classList.remove('positive');\n\t\t\t\t\tstatPicker.rootElem.classList.add('negative');\n\t\t\t\t} else {\n\t\t\t\t\tstatPicker.rootElem.classList.remove('negative');\n\t\t\t\t\tstatPicker.rootElem.classList.remove('positive');\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n","import { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Input, InputConfig } from './input.js';\n\n/**\n * Data for creating a boolean picker (checkbox).\n */\nexport interface BooleanPickerConfig<ModObject> extends InputConfig<ModObject, boolean> {\n}\n\n// UI element for picking an arbitrary number field.\nexport class BooleanPicker<ModObject> extends Input<ModObject, boolean> {\n\tprivate readonly inputElem: HTMLInputElement;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: BooleanPickerConfig<ModObject>) {\n\t\tsuper(parent, 'boolean-picker-root', modObject, config);\n\n\t\tthis.inputElem = document.createElement('input');\n\t\tthis.inputElem.type = 'checkbox';\n\t\tthis.inputElem.classList.add('boolean-picker-input');\n\t\tthis.rootElem.appendChild(this.inputElem);\n\n\t\tthis.init();\n\n\t\tthis.inputElem.addEventListener('change', event => {\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.inputElem;\n\t}\n\n\tgetInputValue(): boolean {\n\t\treturn Boolean(this.inputElem.checked);\n\t}\n\n\tsetInputValue(newValue: boolean) {\n\t\tthis.inputElem.checked = newValue;\n\t}\n}\n","import { PlayerStats } from '..//proto/api.js';\nimport { Stat, Class } from '..//proto/common.js';\nimport { TristateEffect } from '..//proto/common.js'\nimport { getClassStatName, statOrder } from '..//proto_utils/names.js';\nimport { Stats } from '..//proto_utils/stats.js';\nimport { Player } from '..//player.js';\nimport { EventID, TypedEvent } from '..//typed_event.js';\n\nimport * as Mechanics from '../constants/mechanics.js';\n\nimport { Component } from './component.js';\n\ndeclare var tippy: any;\n\nexport type StatMods = { talents: Stats };\n\nexport class CharacterStats extends Component {\n\treadonly stats: Array<Stat>;\n\treadonly valueElems: Array<HTMLTableCellElement>;\n\treadonly tooltipElems: Array<HTMLElement>;\n\n\tprivate readonly player: Player<any>;\n\tprivate readonly modifyDisplayStats?: (player: Player<any>) => StatMods;\n\n\tconstructor(parent: HTMLElement, player: Player<any>, stats: Array<Stat>, modifyDisplayStats?: (player: Player<any>) => StatMods) {\n\t\tsuper(parent, 'character-stats-root');\n\t\tthis.stats = statOrder.filter(stat => stats.includes(stat));\n\t\tthis.player = player;\n\t\tthis.modifyDisplayStats = modifyDisplayStats;\n\n\t\tconst table = document.createElement('table');\n\t\ttable.classList.add('character-stats-table');\n\t\tthis.rootElem.appendChild(table);\n\n\t\tthis.valueElems = [];\n\t\tthis.tooltipElems = [];\n\t\tthis.stats.forEach(stat => {\n\t\t\tconst row = document.createElement('tr');\n\t\t\trow.classList.add('character-stats-table-row');\n\t\t\trow.innerHTML = `\n\t\t\t\t<td class=\"character-stats-table-label\">\n\t\t\t\t\t<span>${getClassStatName(stat, player.getClass()).toUpperCase()}<span>\n\t\t\t\t\t<span class=\"character-stats-table-tooltip fas fa-search\"></span>\n\t\t\t\t</td>\n\t\t\t\t<td class=\"character-stats-table-value\"></td>\n\t\t\t`;\n\t\t\ttable.appendChild(row);\n\n\t\t\tconst valueElem = row.getElementsByClassName('character-stats-table-value')[0] as HTMLTableCellElement;\n\t\t\tthis.valueElems.push(valueElem);\n\n\t\t\tconst tooltipElem = row.getElementsByClassName('character-stats-table-tooltip')[0] as HTMLElement;\n\t\t\tthis.tooltipElems.push(tooltipElem);\n\t\t});\n\n\t\tthis.updateStats(player);\n\t\tTypedEvent.onAny([player.currentStatsEmitter, player.sim.changeEmitter]).on(() => {\n\t\t\tthis.updateStats(player);\n\t\t});\n\t}\n\n\tprivate updateStats(player: Player<any>) {\n\t\tconst playerStats = player.getCurrentStats();\n\n\t\tconst statMods = this.modifyDisplayStats ? this.modifyDisplayStats(this.player) : {\n\t\t\ttalents: new Stats(),\n\t\t};\n\n\t\tconst baseStats = new Stats(playerStats.baseStats);\n\t\tconst gearStats = new Stats(playerStats.gearStats);\n\t\tconst talentsStats = new Stats(playerStats.talentsStats);\n\t\tconst buffsStats = new Stats(playerStats.buffsStats);\n\t\tconst consumesStats = new Stats(playerStats.consumesStats);\n\t\tconst debuffStats = CharacterStats.getDebuffStats(player);\n\t\tconst finalStats = new Stats(playerStats.finalStats).add(statMods.talents).add(debuffStats);\n\n\t\tconst gearDelta = gearStats.subtract(baseStats);\n\t\tconst talentsDelta = talentsStats.subtract(gearStats).add(statMods.talents);\n\t\tconst buffsDelta = buffsStats.subtract(talentsStats);\n\t\tconst consumesDelta = consumesStats.subtract(buffsStats);\n\n\t\tthis.stats.forEach((stat, idx) => {\n\t\t\tthis.valueElems[idx].textContent = CharacterStats.statDisplayString(player, finalStats, stat);\n\n\t\t\ttippy(this.tooltipElems[idx], {\n\t\t\t\t'content': `\n\t\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Base:</span>\n\t\t\t\t\t\t<span>${CharacterStats.statDisplayString(player, baseStats, stat)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Gear:</span>\n\t\t\t\t\t\t<span>${CharacterStats.statDisplayString(player, gearDelta, stat)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Talents:</span>\n\t\t\t\t\t\t<span>${CharacterStats.statDisplayString(player, talentsDelta, stat)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Buffs:</span>\n\t\t\t\t\t\t<span>${CharacterStats.statDisplayString(player, buffsDelta, stat)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Consumes:</span>\n\t\t\t\t\t\t<span>${CharacterStats.statDisplayString(player, consumesDelta, stat)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t${debuffStats.getStat(stat) == 0 ? '' : `\n\t\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Debuffs:</span>\n\t\t\t\t\t\t<span>${CharacterStats.statDisplayString(player, debuffStats, stat)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t`}\n\t\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Total:</span>\n\t\t\t\t\t\t<span>${CharacterStats.statDisplayString(player, finalStats, stat)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t`,\n\t\t\t\t'allowHTML': true,\n\t\t\t});\n\t\t});\n\t}\n\n\tstatic statDisplayString(player: Player<any>, stats: Stats, stat: Stat): string {\n\t\tconst rawValue = stats.getStat(stat);\n\t\tlet displayStr = String(Math.round(rawValue));\n\n\t\tif (stat == Stat.StatMeleeHit) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.MELEE_HIT_RATING_PER_HIT_CHANCE).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatSpellHit) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatMeleeCrit || stat == Stat.StatSpellCrit) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatMeleeHaste) {\n\t\t\tif ([Class.ClassDruid, Class.ClassShaman, Class.ClassPaladin, Class.ClassDeathknight].includes(player.getClass())) {\n\t\t\t\tdisplayStr += ` (${(rawValue / Mechanics.SPECIAL_MELEE_HASTE_RATING_PER_HASTE_PERCENT).toFixed(2)}%)`;\n\t\t\t} else {\n\t\t\t\tdisplayStr += ` (${(rawValue / Mechanics.HASTE_RATING_PER_HASTE_PERCENT).toFixed(2)}%)`;\n\t\t\t}\n\t\t} else if (stat == Stat.StatSpellHaste) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.HASTE_RATING_PER_HASTE_PERCENT).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatExpertise) {\n\t\t\tdisplayStr += ` (${(Math.floor(Number(rawValue.toFixed(2)) / Mechanics.EXPERTISE_PER_QUARTER_PERCENT_REDUCTION)).toFixed(0)})`;\n\t\t} else if (stat == Stat.StatDefense) {\n\t\t\tdisplayStr += ` (${(Mechanics.CHARACTER_LEVEL * 5 + rawValue / Mechanics.DEFENSE_RATING_PER_DEFENSE).toFixed(1)})`;\n\t\t} else if (stat == Stat.StatBlock) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.BLOCK_RATING_PER_BLOCK_CHANCE).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatDodge) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.DODGE_RATING_PER_DODGE_CHANCE).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatParry) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.PARRY_RATING_PER_PARRY_CHANCE).toFixed(2)}%)`;\n\t\t}\n\n\t\treturn displayStr;\n\t}\n\n\tstatic getDebuffStats(player: Player<any>): Stats {\n\t\tlet debuffStats = new Stats();\n\n\t\tconst debuffs = player.sim.raid.getDebuffs();\n\t\tif (debuffs.misery || debuffs.faerieFire == TristateEffect.TristateEffectImproved) {\n\t\t\tdebuffStats = debuffStats.addStat(Stat.StatSpellHit, 3 * Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE);\n\t\t}\n\t\tif (debuffs.totemOfWrath || debuffs.heartOfTheCrusader || debuffs.masterPoisoner) {\n\t\t\tdebuffStats = debuffStats.addStat(Stat.StatSpellCrit, 3 * Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE);\n\t\t\tdebuffStats = debuffStats.addStat(Stat.StatMeleeCrit, 3 * Mechanics.MELEE_CRIT_RATING_PER_CRIT_CHANCE);\n\t\t}\n\t\tif (debuffs.improvedScorch || debuffs.wintersChill || debuffs.shadowMastery) {\n\t\t\tdebuffStats = debuffStats.addStat(Stat.StatSpellCrit, 5 * Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE);\n\t\t}\n\n\t\treturn debuffStats;\n\t}\n}\n","import { ActionId } from '../proto_utils/action_id.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Component } from './component.js';\nimport { Input, InputConfig } from './input.js';\n\ndeclare var tippy: any;\n\nexport interface IconEnumValueConfig<ModObject, T> {\n\t// One of these should be set. If actionId is set, shows the icon for that id. If\n\t// color is set, shows that color.\n\tactionId?: ActionId,\n\tcolor?: string,\n\n\tvalue: T,\n\n\t// Hover tooltip.\n\ttooltip?: string,\n\t// Text to be displayed on the icon.\n\ttext?: string,\n\n\tshowWhen?: (obj: ModObject) => boolean,\n}\n\nexport interface IconEnumPickerConfig<ModObject, T> extends InputConfig<ModObject, T> {\n\tnumColumns: number,\n\n\tvalues: Array<IconEnumValueConfig<ModObject, T>>;\n\n\t// Function for comparing two values.\n\tequals: (a: T, b: T) => boolean,\n\n\t// Value that will be considered inactive.\n\tzeroValue: T,\n\n\tbackupIconUrl?: (value: T) => ActionId,\n}\n\n// Icon-based UI for picking enum values.\n// ModObject is the object being modified (Sim, Player, or Target).\nexport class IconEnumPicker<ModObject, T> extends Input<ModObject, T> {\n\tprivate readonly config: IconEnumPickerConfig<ModObject, T>;\n\n\tprivate currentValue: T;\n\n\tprivate readonly buttonElem: HTMLAnchorElement;\n\tprivate readonly buttonText: HTMLElement;\n\n\tconstructor(parent: HTMLElement, modObj: ModObject, config: IconEnumPickerConfig<ModObject, T>) {\n\t\tsuper(parent, 'icon-enum-picker-root', modObj, config);\n\t\tthis.config = config;\n\t\tthis.currentValue = this.config.zeroValue;\n\t\tthis.rootElem.classList.add('dropdown-root');\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<a class=\"dropdown-button icon-enum-picker-button\">\n\t\t\t\t<div class='icon-enum-text'></div>\n\t\t\t</a>\n\t\t\t<div class=\"dropdown-panel icon-enum-picker-dropdown\"></div>\n    `;\n\n\t\tthis.buttonElem = this.rootElem.getElementsByClassName('icon-enum-picker-button')[0] as HTMLAnchorElement;\n\t\tconst dropdownElem = this.rootElem.getElementsByClassName('icon-enum-picker-dropdown')[0] as HTMLElement;\n\t\tthis.buttonText\t= this.rootElem.getElementsByClassName('icon-enum-text')[0] as HTMLElement;\n\n\t\tthis.buttonElem.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tthis.buttonElem.addEventListener('touchstart', event => {\n\t\t\tif (dropdownElem.style.display == \"block\") {\n\t\t\t\tdropdownElem.style.display = \"none\";\n\t\t\t} else {\n\t\t\t\tdropdownElem.style.display = \"block\";\n\t\t\t}\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tthis.buttonElem.addEventListener('touchend', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\tdropdownElem.style.gridTemplateColumns = `repeat(${this.config.numColumns}, 1fr)`;\n\n\t\tconfig.values.forEach((valueConfig, i) => {\n\t\t\tconst optionContainer = document.createElement('div');\n\t\t\toptionContainer.classList.add('dropdown-option-container');\n\t\t\tdropdownElem.appendChild(optionContainer);\n\n\t\t\tconst option = document.createElement('a');\n\t\t\toption.classList.add('dropdown-option', 'icon-enum-picker-option');\n\t\t\toptionContainer.appendChild(option);\n\t\t\tthis.setImage(option, valueConfig);\n\n\t\t\tif (valueConfig.text != undefined){\n\t\t\t\tconst optionText = document.createElement('div');\n\t\t\t\toptionText.classList.add(\"icon-enum-text\")\n\t\t\t\toptionText.textContent = valueConfig.text\n\t\t\t\toption.append(optionText)\n\t\t\t}\n\n\t\t\tif (valueConfig.tooltip) {\n\t\t\t\ttippy(option, {\n\t\t\t\t\t'content': valueConfig.tooltip,\n\t\t\t\t\t'allowHTML': true,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (valueConfig.showWhen) {\n\t\t\t\tconfig.changedEvent(this.modObject).on(eventID => {\n\t\t\t\t\tconst show = valueConfig.showWhen && valueConfig.showWhen(this.modObject);\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\toptionContainer.classList.remove('hide');\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptionContainer.classList.add('hide');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\toption.addEventListener('click', event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.currentValue = valueConfig.value;\n\t\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\n\t\t\t\t// Wowhead tooltips can't seem to detect when an element is hidden while\n\t\t\t\t// being moused over, and the tooltip doesn't disappear. Patch this by\n\t\t\t\t// dispatching our own mouseout event.\n\t\t\t\toption.dispatchEvent(new Event('mouseout'));\n\t\t\t});\n\t\t\toption.addEventListener('touchstart', event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\t\t\toption.addEventListener('touchend', event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.currentValue = valueConfig.value;\n\t\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t\t\tdropdownElem.style.display = \"none\";\n\t\t\t});\n\t\t});\n\n\t\tthis.init();\n\t}\n\n\tprivate setActionImage(elem: HTMLAnchorElement, actionId: ActionId) {\n\t\tactionId.fillAndSet(elem, true, true);\n\t}\n\n\tprivate setImage(elem: HTMLAnchorElement, valueConfig: IconEnumValueConfig<ModObject, T>) {\n\t\tif (valueConfig.actionId) {\n\t\t\tthis.setActionImage(elem, valueConfig.actionId);\n\t\t} else {\n\t\t\telem.style.backgroundImage = '';\n\t\t\telem.style.backgroundColor = valueConfig.color!;\n\t\t}\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.buttonElem;\n\t}\n\n\tgetInputValue(): T {\n\t\treturn this.currentValue;\n\t}\n\n\tsetInputValue(newValue: T) {\n\t\tthis.currentValue = newValue;\n\n\t\tif (!this.config.equals(this.currentValue, this.config.zeroValue)) {\n\t\t\tthis.rootElem.classList.add('active');\n\t\t} else {\n\t\t\tthis.rootElem.classList.remove('active');\n\t\t}\n\n\t\tthis.buttonText.textContent = ''\n\t\tthis.buttonText.style.display = 'none'\n\t\tconst valueConfig = this.config.values.find(valueConfig => this.config.equals(valueConfig.value, this.currentValue))!;\n\t\tif (valueConfig) {\n\t\t\tthis.setImage(this.buttonElem, valueConfig);\n\t\t\tif (valueConfig.text != undefined){\n\t\t\t\tthis.buttonText.style.display = 'block'\n\t\t\t\tthis.buttonText.textContent = valueConfig.text\n\t\t\t}\n\t\t} else if (this.config.backupIconUrl) {\n\t\t\tconst backupId = this.config.backupIconUrl(this.currentValue);\n\t\t\tthis.setActionImage(this.buttonElem, backupId);\n\t\t\tthis.rootElem.classList.remove('active');\n\t\t}\n\t}\n}\n","import { EventID, TypedEvent } from '../typed_event.js';\nimport { arrayEquals } from '../utils.js';\n\nimport { Input, InputConfig } from './input.js';\n\n/**\n * Data for creating a number list picker.\n */\nexport interface NumberListPickerConfig<ModObject> extends InputConfig<ModObject, Array<number>> {\n\tplaceholder?: string,\n}\n\n// UI element for picking an arbitrary number list field.\nexport class NumberListPicker<ModObject> extends Input<ModObject, Array<number>> {\n\tprivate readonly inputElem: HTMLInputElement;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: NumberListPickerConfig<ModObject>) {\n\t\tsuper(parent, 'number-list-picker-root', modObject, config);\n\n\t\tthis.inputElem = document.createElement('input');\n\t\tthis.inputElem.type = 'text';\n\t\tthis.inputElem.placeholder = config.placeholder || '';\n\t\tthis.inputElem.classList.add('number-list-picker-input');\n\t\tthis.rootElem.appendChild(this.inputElem);\n\n\t\tthis.init();\n\n\t\tthis.inputElem.addEventListener('change', event => {\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.inputElem;\n\t}\n\n\tgetInputValue(): Array<number> {\n\t\tconst str = this.inputElem.value;\n\t\tif (!str) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn str.split(',').map(parseFloat).filter(val => !isNaN(val));\n\t}\n\n\tsetInputValue(newValue: Array<number>) {\n\t\tif (arrayEquals(this.getInputValue(), newValue)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inputElem.value = newValue.map(v => String(v)).join(',');\n\t}\n}\n","import { Component } from '../components/component.js';\nimport { IconEnumPicker, IconEnumValueConfig } from '../components/icon_enum_picker.js';\nimport { Input, InputConfig } from '../components/input.js';\nimport { NumberListPicker } from '../components/number_list_picker.js';\nimport { Player } from '../player.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { ActionID as ActionIdProto } from '../proto/common.js';\nimport { Cooldowns } from '../proto/common.js';\nimport { Cooldown } from '../proto/common.js';\nimport { ActionId } from '../proto_utils/action_id.js';\nimport { Class } from '../proto/common.js';\nimport { Spec } from '../proto/common.js';\nimport { getEnumValues } from '../utils.js';\nimport { wait } from '../utils.js';\n\ndeclare var tippy: any;\n\nexport class CooldownsPicker extends Component {\n\treadonly player: Player<any>;\n\n\tprivate cooldownPickers: Array<HTMLElement>;\n\n\tconstructor(parentElem: HTMLElement, player: Player<any>) {\n\t\tsuper(parentElem, 'cooldowns-picker-root');\n\t\tthis.player = player;\n\t\tthis.cooldownPickers = [];\n\n\t\tTypedEvent.onAny([this.player.currentStatsEmitter]).on(eventID => {\n\t\t\tthis.update();\n\t\t});\n\t\tthis.update();\n\t}\n\n\tprivate update() {\n\t\tthis.rootElem.innerHTML = '';\n\t\tconst cooldowns = this.player.getCooldowns().cooldowns;\n\n\t\tthis.cooldownPickers = [];\n\t\tfor (let i = 0; i < cooldowns.length + 1; i++) {\n\t\t\tconst cooldown = cooldowns[i];\n\n\t\t\tconst row = document.createElement('div');\n\t\t\trow.classList.add('cooldown-picker');\n\t\t\tif (i == cooldowns.length) {\n\t\t\t\trow.classList.add('add-cooldown-picker');\n\t\t\t}\n\t\t\tthis.rootElem.appendChild(row);\n\n\t\t\tconst deleteButton = document.createElement('span');\n\t\t\tdeleteButton.classList.add('delete-cooldown', 'fa', 'fa-times');\n\t\t\tdeleteButton.addEventListener('click', event => {\n\t\t\t\tconst newCooldowns = this.player.getCooldowns();\n\t\t\t\tnewCooldowns.cooldowns.splice(i, 1);\n\t\t\t\tthis.player.setCooldowns(TypedEvent.nextEventID(), newCooldowns);\n\t\t\t});\n\t\t\trow.appendChild(deleteButton);\n\n\t\t\tconst actionPicker = this.makeActionPicker(row, i);\n\n\t\t\tconst label = document.createElement('span');\n\t\t\tlabel.classList.add('cooldown-picker-label');\n\t\t\tif (cooldown && cooldown.id) {\n\t\t\t\tActionId.fromProto(cooldown.id).fill(this.player.getRaidIndex()).then(filledId => label.textContent = filledId.name);\n\t\t\t}\n\t\t\trow.appendChild(label);\n\n\t\t\tconst timingsPicker = this.makeTimingsPicker(row, i);\n\n\t\t\tthis.cooldownPickers.push(row);\n\t\t}\n\t}\n\n\tprivate makeActionPicker(parentElem: HTMLElement, cooldownIndex: number): IconEnumPicker<Player<any>, ActionIdProto> {\n\t\tconst availableCooldowns = this.player.getCurrentStats().cooldowns;\n\n\t\tconst actionPicker = new IconEnumPicker<Player<any>, ActionIdProto>(parentElem, this.player, {\n\t\t\textraCssClasses: [\n\t\t\t\t'cooldown-action-picker',\n\t\t\t],\n\t\t\tnumColumns: 3,\n\t\t\tvalues: ([\n\t\t\t\t{ color: '#grey', value: ActionIdProto.create() },\n\t\t\t] as Array<IconEnumValueConfig<Player<any>, ActionIdProto>>).concat(availableCooldowns.map(cooldownAction => {\n\t\t\t\treturn { actionId: ActionId.fromProto(cooldownAction), value: cooldownAction };\n\t\t\t})),\n\t\t\tequals: (a: ActionIdProto, b: ActionIdProto) => ActionIdProto.equals(a, b),\n\t\t\tzeroValue: ActionIdProto.create(),\n\t\t\tbackupIconUrl: (value: ActionIdProto) => ActionId.fromProto(value),\n\t\t\tchangedEvent: (player: Player<any>) => player.cooldownsChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => player.getCooldowns().cooldowns[cooldownIndex]?.id || ActionIdProto.create(),\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: ActionIdProto) => {\n\t\t\t\tconst newCooldowns = player.getCooldowns();\n\n\t\t\t\twhile (newCooldowns.cooldowns.length < cooldownIndex) {\n\t\t\t\t\tnewCooldowns.cooldowns.push(Cooldown.create());\n\t\t\t\t}\n\t\t\t\tnewCooldowns.cooldowns[cooldownIndex] = Cooldown.create({\n\t\t\t\t\tid: newValue,\n\t\t\t\t\ttimings: [],\n\t\t\t\t});\n\n\t\t\t\tplayer.setCooldowns(eventID, newCooldowns);\n\t\t\t},\n\t\t});\n\t\treturn actionPicker;\n\t}\n\n\tprivate makeTimingsPicker(parentElem: HTMLElement, cooldownIndex: number): NumberListPicker<Player<any>> {\n\t\tconst actionPicker = new NumberListPicker(parentElem, this.player, {\n\t\t\textraCssClasses: [\n\t\t\t\t'cooldown-timings-picker',\n\t\t\t],\n\t\t\tplaceholder: '20, 40, ...',\n\t\t\tchangedEvent: (player: Player<any>) => player.cooldownsChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => {\n\t\t\t\treturn player.getCooldowns().cooldowns[cooldownIndex]?.timings || [];\n\t\t\t},\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: Array<number>) => {\n\t\t\t\tconst newCooldowns = player.getCooldowns();\n\t\t\t\tnewCooldowns.cooldowns[cooldownIndex].timings = newValue;\n\t\t\t\tplayer.setCooldowns(eventID, newCooldowns);\n\t\t\t},\n\t\t\tenableWhen: (player: Player<any>) => {\n\t\t\t\tconst curCooldown = player.getCooldowns().cooldowns[cooldownIndex];\n\t\t\t\treturn curCooldown && !ActionIdProto.equals(curCooldown.id, ActionIdProto.create());\n\t\t\t},\n\t\t});\n\t\treturn actionPicker;\n\t}\n}\n","import { REPO_NAME } from '../constants/other.js'\nimport { RaidSimRequest, RaidSimResult } from '../proto/api.js';\nimport { DetailedResultsUpdate, SimRun, SimRunData } from '../proto/ui.js';\nimport { SimResult } from '../proto_utils/sim_result.js';\nimport { SimUI } from '../sim_ui.js';\n\nimport { Component } from './component.js';\nimport { RaidSimResultsManager } from './raid_sim_action.js';\n\nexport class DetailedResults extends Component {\n\tprivate readonly simUI: SimUI;\n\tprivate readonly iframeElem: HTMLIFrameElement;\n\tprivate tabWindow: Window | null;\n\tprivate latestRun: SimRunData | null;\n\n\tconstructor(parent: HTMLElement, simUI: SimUI, simResultsManager: RaidSimResultsManager) {\n\t\tsuper(parent, 'detailed-results-manager-root');\n\t\tthis.simUI = simUI;\n\t\tthis.tabWindow = null;\n\t\tthis.latestRun = null;\n\n\t\tthis.simUI.sim.settingsChangeEmitter.on(() => this.updateSettings());\n\n\t\tconst computedStyles = window.getComputedStyle(this.rootElem);\n\n\t\tconst url = new URL(`${window.location.protocol}//${window.location.host}/${REPO_NAME}/detailed_results/index.html`);\n\t\turl.searchParams.append('mainTextColor', computedStyles.getPropertyValue('--main-text-color').trim());\n\t\turl.searchParams.append('themeColorPrimary', computedStyles.getPropertyValue('--theme-color-primary').trim());\n\t\turl.searchParams.append('themeColorBackground', computedStyles.getPropertyValue('--theme-color-background').trim());\n\t\turl.searchParams.append('themeColorBackgroundRaw', computedStyles.getPropertyValue('--theme-color-background-raw').trim());\n\t\turl.searchParams.append('themeBackgroundImage', computedStyles.getPropertyValue('--theme-background-image').trim());\n\t\turl.searchParams.append('themeBackgroundOpacity', computedStyles.getPropertyValue('--theme-background-opacity').trim());\n\t\tif (simUI.isIndividualSim()) {\n\t\t\turl.searchParams.append('isIndividualSim', '');\n\t\t}\n\n\t\tthis.rootElem.innerHTML = `\n\t\t<div class=\"detailed-results-controls-div\">\n\t\t\t<button class=\"detailed-results-new-tab-button sim-button\">VIEW IN SEPARATE TAB</button>\n\t\t</div>\n\t\t<iframe class=\"detailed-results-iframe\" src=\"${url.href}\" allowtransparency=\"true\"></iframe>\n\t\t`;\n\n\t\tthis.iframeElem = this.rootElem.getElementsByClassName('detailed-results-iframe')[0] as HTMLIFrameElement;\n\n\t\tconst newTabButton = this.rootElem.getElementsByClassName('detailed-results-new-tab-button')[0] as HTMLButtonElement;\n\t\tnewTabButton.addEventListener('click', event => {\n\t\t\tif (this.tabWindow == null || this.tabWindow.closed) {\n\t\t\t\tthis.tabWindow = window.open(url.href, 'Detailed Results');\n\t\t\t\tthis.tabWindow!.addEventListener('load', event => {\n\t\t\t\t\tif (this.latestRun) {\n\t\t\t\t\t\tthis.updateSettings();\n\t\t\t\t\t\tthis.setSimRunData(this.latestRun);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.tabWindow.focus();\n\t\t\t}\n\t\t});\n\n\t\tsimResultsManager.currentChangeEmitter.on(() => {\n\t\t\tconst runData = simResultsManager.getRunData();\n\t\t\tif (runData) {\n\t\t\t\tthis.setSimRunData(runData);\n\t\t\t}\n\t\t});\n\t}\n\n\t// TODO: Decide whether to continue using this or just remove it.\n\t//setPending() {\n\t//\tthis.latestRun = null;\n\t//\tthis.iframeElem.contentWindow!.postMessage(null, '*');\n\t//\tif (this.tabWindow) {\n\t//\t\tthis.tabWindow.postMessage(null, '*');\n\t//\t}\n\t//}\n\n\tprivate setSimRunData(simRunData: SimRunData) {\n\t\tthis.latestRun = simRunData;\n\t\tthis.postMessage(DetailedResultsUpdate.create({\n\t\t\tdata: {\n\t\t\t\toneofKind: 'runData',\n\t\t\t\trunData: simRunData,\n\t\t\t},\n\t\t}));\n\t}\n\n\tprivate updateSettings() {\n\t\tthis.postMessage(DetailedResultsUpdate.create({\n\t\t\tdata: {\n\t\t\t\toneofKind: 'settings',\n\t\t\t\tsettings: this.simUI.sim.toProto(),\n\t\t\t},\n\t\t}));\n\t}\n\n\tprivate postMessage(update: DetailedResultsUpdate) {\n\t\tthis.iframeElem.contentWindow!.postMessage(DetailedResultsUpdate.toJson(update), '*');\n\t\tif (this.tabWindow) {\n\t\t\tthis.tabWindow.postMessage(DetailedResultsUpdate.toJson(update), '*');\n\t\t}\n\t}\n}\n","import { EventID, TypedEvent } from '../typed_event.js';\nimport { arrayEquals, swap } from '../utils.js';\n\nimport { Input, InputConfig } from './input.js';\n\ndeclare var tippy: any;\n\nexport interface ListPickerConfig<ModObject, ItemType, ItemPicker> extends InputConfig<ModObject, Array<ItemType>> {\n\ttitle?: string,\n\ttitleTooltip?: string,\n\titemLabel: string,\n\tnewItem: () => ItemType,\n\tcopyItem: (oldItem: ItemType) => ItemType,\n\tnewItemPicker: (parent: HTMLElement, item: ItemType, listPicker: ListPicker<ModObject, ItemType, ItemPicker>) => ItemPicker,\n\tinlineMenuBar?: boolean,\n}\n\ninterface ItemPickerPair<ItemType, ItemPicker> {\n\titem: ItemType,\n\telem: HTMLElement,\n\tpicker: ItemPicker,\n}\n\nexport class ListPicker<ModObject, ItemType, ItemPicker> extends Input<ModObject, Array<ItemType>> {\n\tprivate readonly config: ListPickerConfig<ModObject, ItemType, ItemPicker>;\n\tprivate readonly itemsDiv: HTMLElement;\n\n\tprivate itemPickerPairs: Array<ItemPickerPair<ItemType, ItemPicker>>;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: ListPickerConfig<ModObject, ItemType, ItemPicker>) {\n\t\tsuper(parent, 'list-picker-root', modObject, config);\n\t\tthis.config = config;\n\t\tthis.itemPickerPairs = [];\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t${this.config.title ? `<span class=\"list-picker-title\">${this.config.title}</span>` : ''}\n\t\t\t<div class=\"list-picker-items\"></div>\n\t\t\t<button class=\"list-picker-new-button sim-button\">NEW ${config.itemLabel.toUpperCase()}</button>\n\t\t`;\n\n\t\tif (this.config.title && this.config.titleTooltip) {\n\t\t\tconst title = this.rootElem.getElementsByClassName('list-picker-title')[0] as HTMLElement;\n\t\t\ttippy(title, {\n\t\t\t\t'content': this.config.titleTooltip,\n\t\t\t\t'allowHTML': true,\n\t\t\t});\n\t\t}\n\n\t\tthis.itemsDiv = this.rootElem.getElementsByClassName('list-picker-items')[0] as HTMLElement;\n\n\t\tconst newItemButton = this.rootElem.getElementsByClassName('list-picker-new-button')[0] as HTMLElement;\n\t\tnewItemButton.addEventListener('click', event => {\n\t\t\tconst newItem = this.config.newItem();\n\t\t\tconst newList = this.config.getValue(this.modObject).concat([newItem]);\n\t\t\tthis.config.setValue(TypedEvent.nextEventID(), this.modObject, newList);\n\t\t});\n\n\t\tthis.init();\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.rootElem;\n\t}\n\n\tgetInputValue(): Array<ItemType> {\n\t\treturn this.itemPickerPairs.map(pair => pair.item);\n\t}\n\n\tsetInputValue(newValue: Array<ItemType>): void {\n\t\t// Remove items that are no longer in the list.\n\t\tconst removePairs = this.itemPickerPairs.filter(ipp => !newValue.includes(ipp.item));\n\t\tremovePairs.forEach(ipp => ipp.elem.remove());\n\t\tthis.itemPickerPairs = this.itemPickerPairs.filter(ipp => !removePairs.includes(ipp));\n\n\t\t// Add items that were missing.\n\t\tconst curItems = this.getInputValue();\n\t\tnewValue\n\t\t\t.filter(newItem => !curItems.includes(newItem))\n\t\t\t.forEach(newItem => this.addNewPicker(newItem));\n\n\t\t// Reorder to match the new list.\n\t\tthis.itemPickerPairs = newValue.map(item => this.itemPickerPairs.find(ipp => ipp.item == item)!);\n\n\t\t// Reorder item picker elements in the DOM if necessary.\n\t\tconst curPickerElems = Array.from(this.itemsDiv.children);\n\t\tif (!curPickerElems.every((elem, i) => elem == this.itemPickerPairs[i].elem)) {\n\t\t\tthis.itemPickerPairs.forEach(ipp => ipp.elem.remove());\n\t\t\tthis.itemPickerPairs.forEach(ipp => this.itemsDiv.appendChild(ipp.elem));\n\t\t}\n\t}\n\n\tgetPickerIndex(picker: ItemPicker): number {\n\t\treturn this.itemPickerPairs.findIndex(ipp => ipp.picker == picker);\n\t}\n\n\tprivate addNewPicker(item: ItemType) {\n\t\tconst itemContainer = document.createElement('div');\n\t\titemContainer.classList.add('list-picker-item-container');\n\t\tif (this.config.inlineMenuBar) {\n\t\t\titemContainer.classList.add('inline');\n\t\t}\n\n\t\tconst itemHTML = '<div class=\"list-picker-item\"></div>';\n\t\titemContainer.innerHTML = `\n\t\t\t${this.config.inlineMenuBar ? itemHTML : ''}\n\t\t\t<div class=\"list-picker-item-header\">\n\t\t\t\t<span class=\"list-picker-item-up fa fa-angle-up\"></span>\n\t\t\t\t<span class=\"list-picker-item-down fa fa-angle-down\"></span>\n\t\t\t\t<span class=\"list-picker-item-copy fa fa-copy\"></span>\n\t\t\t\t<span class=\"list-picker-item-delete fa fa-times\"></span>\n\t\t\t</div>\n\t\t\t${!this.config.inlineMenuBar ? itemHTML : ''}\n\t\t`;\n\n\t\tconst upButton = itemContainer.getElementsByClassName('list-picker-item-up')[0] as HTMLElement;\n\t\tupButton.addEventListener('click', event => {\n\t\t\tconst index = this.itemPickerPairs.findIndex(ipp => ipp.item == item);\n\t\t\tif (index == -1) {\n\t\t\t\tconsole.error('Could not find list picker item!');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (index == 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newList = this.config.getValue(this.modObject);\n\t\t\tswap(newList, index, index - 1);\n\t\t\tthis.config.setValue(TypedEvent.nextEventID(), this.modObject, newList);\n\t\t});\n\t\ttippy(upButton, {\n\t\t\t'content': `Move Up`,\n\t\t\t'allowHTML': true,\n\t\t});\n\n\t\tconst downButton = itemContainer.getElementsByClassName('list-picker-item-down')[0] as HTMLElement;\n\t\tdownButton.addEventListener('click', event => {\n\t\t\tconst index = this.itemPickerPairs.findIndex(ipp => ipp.item == item);\n\t\t\tif (index == -1) {\n\t\t\t\tconsole.error('Could not find list picker item!');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (index == this.itemPickerPairs.length - 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newList = this.config.getValue(this.modObject);\n\t\t\tswap(newList, index, index + 1);\n\t\t\tthis.config.setValue(TypedEvent.nextEventID(), this.modObject, newList);\n\t\t});\n\t\ttippy(downButton, {\n\t\t\t'content': `Move Down`,\n\t\t\t'allowHTML': true,\n\t\t});\n\n\t\tconst copyButton = itemContainer.getElementsByClassName('list-picker-item-copy')[0] as HTMLElement;\n\t\tcopyButton.addEventListener('click', event => {\n\t\t\tconst index = this.itemPickerPairs.findIndex(ipp => ipp.item == item);\n\t\t\tif (index == -1) {\n\t\t\t\tconsole.error('Could not find list picker item!');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst copiedItem = this.config.copyItem(item);\n\t\t\tconst newList = this.config.getValue(this.modObject).concat([copiedItem]);\n\t\t\tthis.config.setValue(TypedEvent.nextEventID(), this.modObject, newList);\n\t\t});\n\t\ttippy(copyButton, {\n\t\t\t'content': `Copy to New ${this.config.itemLabel}`,\n\t\t\t'allowHTML': true,\n\t\t});\n\n\t\tconst deleteButton = itemContainer.getElementsByClassName('list-picker-item-delete')[0] as HTMLElement;\n\t\tdeleteButton.addEventListener('click', event => {\n\t\t\tconst index = this.itemPickerPairs.findIndex(ipp => ipp.item == item);\n\t\t\tif (index == -1) {\n\t\t\t\tconsole.error('Could not find list picker item!');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newList = this.config.getValue(this.modObject);\n\t\t\tnewList.splice(index, 1);\n\t\t\tthis.config.setValue(TypedEvent.nextEventID(), this.modObject, newList);\n\t\t});\n\t\ttippy(deleteButton, {\n\t\t\t'content': `Delete`,\n\t\t\t'allowHTML': true,\n\t\t});\n\n\t\tconst itemElem = itemContainer.getElementsByClassName('list-picker-item')[0] as HTMLElement;\n\t\tconst itemPicker = this.config.newItemPicker(itemElem, item, this);\n\t\tthis.itemsDiv.appendChild(itemContainer);\n\n\t\tthis.itemPickerPairs.push({ item: item, elem: itemContainer, picker: itemPicker });\n\t}\n}\n","import { Spec } from '../proto/common.js';\nimport { CustomRotation, CustomSpell } from '../proto/common.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { Player } from '../player.js';\nimport { BooleanPicker } from '../components/boolean_picker.js';\nimport { IconEnumPicker, IconEnumPickerConfig, IconEnumValueConfig } from '../components/icon_enum_picker.js';\nimport { ListPicker, ListPickerConfig } from '../components/list_picker.js';\nimport { NumberPicker } from '../components/number_picker.js';\nimport { getEnumValues } from '../utils.js';\n\nimport { Component } from './component.js';\n\nexport interface CustomRotationPickerConfig<SpecType extends Spec, T> {\n\tgetValue: (player: Player<SpecType>) => CustomRotation,\n\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: CustomRotation) => void,\n\n\tnumColumns: number,\n\tvalues: Array<IconEnumValueConfig<Player<SpecType>, T>>;\n\n\tshowWhen?: (player: Player<SpecType>) => boolean,\n}\n\nexport class CustomRotationPicker<SpecType extends Spec, T> extends Component {\n\tconstructor(parent: HTMLElement, modPlayer: Player<SpecType>, config: CustomRotationPickerConfig<SpecType, T>) {\n\t\tsuper(parent, 'custom-rotation-picker-root');\n\n\t\tnew ListPicker<Player<SpecType>, CustomSpell, CustomSpellPicker<SpecType, T>>(this.rootElem, modPlayer, {\n\t\t\textraCssClasses: [\n\t\t\t\t'custom-spells-picker',\n\t\t\t],\n\t\t\ttitle: 'Spell Priority',\n\t\t\ttitleTooltip: 'Spells at the top of the list are prioritized first. Safely ignores untalented options.',\n\t\t\titemLabel: 'Spell',\n\t\t\tchangedEvent: (player: Player<SpecType>) => player.changeEmitter,\n\t\t\tgetValue: (player: Player<SpecType>) => config.getValue(player).spells,\n\t\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: Array<CustomSpell>) => {\n\t\t\t\tconfig.setValue(eventID, player, CustomRotation.create({\n\t\t\t\t\tspells: newValue,\n\t\t\t\t}));\n\t\t\t},\n\t\t\tnewItem: () => CustomSpell.create(),\n\t\t\tcopyItem: (oldItem: CustomSpell) => CustomSpell.clone(oldItem),\n\t\t\tnewItemPicker: (parent: HTMLElement, newItem: CustomSpell, listPicker: ListPicker<Player<SpecType>, CustomSpell, CustomSpellPicker<SpecType, T>>) => new CustomSpellPicker(parent, modPlayer, newItem, config, listPicker),\n\t\t\tinlineMenuBar: true,\n\t\t\tshowWhen: config.showWhen,\n\t\t});\n\t}\n}\n\nclass CustomSpellPicker<SpecType extends Spec, T> extends Component {\n\tprivate readonly player: Player<SpecType>;\n\tprivate readonly config: CustomRotationPickerConfig<SpecType, T>;\n\tprivate readonly listPicker: ListPicker<Player<SpecType>, CustomSpell, CustomSpellPicker<SpecType, T>>;\n\n\tconstructor(parent: HTMLElement, player: Player<SpecType>, modSpell: CustomSpell, config: CustomRotationPickerConfig<SpecType, T>, listPicker: ListPicker<Player<SpecType>, CustomSpell, CustomSpellPicker<SpecType, T>>) {\n\t\tsuper(parent, 'custom-spell-picker-root');\n\t\tthis.player = player;\n\t\tthis.config = config;\n\t\tthis.listPicker = listPicker;\n\n\t\tnew IconEnumPicker<CustomSpell, number>(this.rootElem, modSpell, {\n\t\t\tnumColumns: config.numColumns,\n\t\t\tvalues: config.values.map(value => {\n\t\t\t\tif (value.showWhen) {\n\t\t\t\t\tconst oldShowWhen = value.showWhen;\n\t\t\t\t\tvalue.showWhen = ((spell: CustomSpell) => oldShowWhen(player)) as unknown as ((player: Player<SpecType>) => boolean);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}) as unknown as Array<IconEnumValueConfig<CustomSpell, number>>,\n\t\t\tequals: (a: number, b: number) => a == b,\n\t\t\tzeroValue: 0,\n\t\t\tchangedEvent: (spell: CustomSpell) => player.changeEmitter,\n\t\t\tgetValue: (spell: CustomSpell) => spell.spell,\n\t\t\tsetValue: (eventID: EventID, spell: CustomSpell, newValue: number) => {\n\t\t\t\tspell.spell = newValue;\n\t\t\t\tthis.setSpell(eventID, spell);\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate setSpell(eventID: EventID, spell: CustomSpell) {\n\t\tconst index = this.listPicker.getPickerIndex(this);\n\t\tconst cr = this.config.getValue(this.player);\n\t\tcr.spells[index] = CustomSpell.clone(spell);\n\t\tthis.config.setValue(eventID, this.player, cr);\n\t}\n}\n","import { Race } from '../proto/common.js';\nimport { specToEligibleRaces } from '../proto_utils/utils.js';\nimport { raceNames } from '../proto_utils/names.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Input, InputConfig } from './input.js';\n\nexport interface EnumValueConfig {\n\tname: string,\n\tvalue: number,\n\ttooltip?: string,\n}\n\nexport interface EnumPickerConfig<ModObject> extends InputConfig<ModObject, number> {\n\tvalues: Array<EnumValueConfig>;\n}\n\nexport class EnumPicker<ModObject> extends Input<ModObject, number> {\n\tprivate readonly selectElem: HTMLSelectElement;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: EnumPickerConfig<ModObject>) {\n\t\tsuper(parent, 'enum-picker-root', modObject, config);\n\n\t\tthis.selectElem = document.createElement('select');\n\t\tthis.selectElem.classList.add('enum-picker-selector');\n\t\tthis.rootElem.appendChild(this.selectElem);\n\n\t\tconfig.values.forEach((value) => {\n\t\t\tconst option = document.createElement('option');\n\t\t\toption.value = String(value.value);\n\t\t\toption.textContent = value.name;\n\t\t\tthis.selectElem.appendChild(option);\n\n\t\t\tif (value.tooltip) {\n\t\t\t\toption.title = value.tooltip;\n\t\t\t}\n\t\t});\n\n\t\tthis.init();\n\n\t\tthis.selectElem.addEventListener('change', event => {\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.selectElem;\n\t}\n\n\tgetInputValue(): number {\n\t\treturn parseInt(this.selectElem.value);\n\t}\n\n\tsetInputValue(newValue: number) {\n\t\tthis.selectElem.value = String(newValue);\n\t}\n}\n","import { MobType } from '../proto/common.js';\nimport { SpellSchool } from '../proto/common.js';\nimport { Stat } from '../proto/common.js';\nimport { Encounter } from '../encounter.js';\nimport { Raid } from '../raid.js';\nimport { Target } from '../target.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { BooleanPicker } from '../components/boolean_picker.js';\nimport { EnumPicker, EnumPickerConfig } from '../components/enum_picker.js';\nimport { ListPicker, ListPickerConfig } from '../components/list_picker.js';\nimport { NumberPicker } from '../components/number_picker.js';\nimport { Stats } from '../proto_utils/stats.js';\nimport { isHealingSpec, isTankSpec } from '../proto_utils/utils.js';\nimport { statNames } from '../proto_utils/names.js';\nimport { getEnumValues } from '../utils.js';\n\nimport { Component } from './component.js';\nimport { Popup } from './popup.js';\n\nimport * as Mechanics from '../constants/mechanics.js';\nimport { IndividualSimUI } from '../individual_sim_ui.js';\nimport { SimUI } from '../sim_ui.js';\n\nexport interface EncounterPickerConfig {\n\tshowExecuteProportion: boolean,\n}\n\nexport class EncounterPicker extends Component {\n\tconstructor(parent: HTMLElement, modEncounter: Encounter, config: EncounterPickerConfig, simUI: SimUI) {\n\t\tsuper(parent, 'encounter-picker-root');\n\n\t\taddEncounterFieldPickers(this.rootElem, modEncounter, config.showExecuteProportion);\n\n\t\t// Need to wait so that the encounter and target presets will be loaded.\n\t\tmodEncounter.sim.waitForInit().then(() => {\n\t\t\tconst presetTargets = modEncounter.sim.getAllPresetTargets();\n\t\t\tnew EnumPicker<Encounter>(this.rootElem, modEncounter, {\n\t\t\t\textraCssClasses: ['damage-metrics', 'npc-picker'],\n\t\t\t\tlabel: 'NPC',\n\t\t\t\tlabelTooltip: 'Selects a preset NPC configuration.',\n\t\t\t\tvalues: [\n\t\t\t\t\t{ name: 'Custom', value: -1 },\n\t\t\t\t].concat(presetTargets.map((pe, i) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: pe.path,\n\t\t\t\t\t\tvalue: i,\n\t\t\t\t\t};\n\t\t\t\t})),\n\t\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t\tgetValue: (encounter: Encounter) => presetTargets.findIndex(pe => encounter.primaryTarget.matchesPreset(pe)),\n\t\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\t\tif (newValue != -1) {\n\t\t\t\t\t\tencounter.primaryTarget.applyPreset(eventID, presetTargets[newValue]);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t//new EnumPicker<Encounter>(this.rootElem, modEncounter, {\n\t\t\t//\tlabel: 'Target Level',\n\t\t\t//\tvalues: [\n\t\t\t//\t\t{ name: '83', value: 83 },\n\t\t\t//\t\t{ name: '82', value: 82 },\n\t\t\t//\t\t{ name: '81', value: 81 },\n\t\t\t//\t\t{ name: '80', value: 80 },\n\t\t\t//\t],\n\t\t\t//\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t//\tgetValue: (encounter: Encounter) => encounter.primaryTarget.getLevel(),\n\t\t\t//\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t//\t\tencounter.primaryTarget.setLevel(eventID, newValue);\n\t\t\t//\t},\n\t\t\t//});\n\n\t\t\t//new EnumPicker(this.rootElem, modEncounter, {\n\t\t\t//\tlabel: 'Mob Type',\n\t\t\t//\tvalues: mobTypeEnumValues,\n\t\t\t//\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t//\tgetValue: (encounter: Encounter) => encounter.primaryTarget.getMobType(),\n\t\t\t//\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t//\t\tencounter.primaryTarget.setMobType(eventID, newValue);\n\t\t\t//\t},\n\t\t\t//});\n\n\t\t\t// Leaving this commented in case we want it later. But it takes up a lot of\n\t\t\t// screen space and none of these fields get changed much.\n\t\t\t//if (config.simpleTargetStats) {\n\t\t\t//\tconfig.simpleTargetStats.forEach(stat => {\n\t\t\t//\t\tnew NumberPicker(this.rootElem, modEncounter, {\n\t\t\t//\t\t\tlabel: statNames[stat],\n\t\t\t//\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t//\t\t\tgetValue: (encounter: Encounter) => encounter.primaryTarget.getStats().getStat(stat),\n\t\t\t//\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t//\t\t\t\tencounter.primaryTarget.setStats(eventID, encounter.primaryTarget.getStats().withStat(stat, newValue));\n\t\t\t//\t\t\t},\n\t\t\t//\t\t});\n\t\t\t//\t});\n\t\t\t//}\n\n\t\t\tif (simUI.isIndividualSim() && isHealingSpec((simUI as IndividualSimUI<any>).player.spec)) {\n\t\t\t\tnew NumberPicker(this.rootElem, simUI.sim.raid, {\n\t\t\t\t\tlabel: 'Num Allies',\n\t\t\t\t\tlabelTooltip: 'Number of allied players in the raid.',\n\t\t\t\t\tchangedEvent: (raid: Raid) => raid.targetDummiesChangeEmitter,\n\t\t\t\t\tgetValue: (raid: Raid) => raid.getTargetDummies(),\n\t\t\t\t\tsetValue: (eventID: EventID, raid: Raid, newValue: number) => {\n\t\t\t\t\t\traid.setTargetDummies(eventID, newValue);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (simUI.isIndividualSim() && isTankSpec((simUI as IndividualSimUI<any>).player.spec)) {\n\t\t\t\tnew NumberPicker(this.rootElem, modEncounter, {\n\t\t\t\t\tlabel: 'Min Base Damage',\n\t\t\t\t\tlabelTooltip: 'Base damage for auto attacks, i.e. lowest roll with 0 AP against a 0-armor Player.',\n\t\t\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t\t\tgetValue: (encounter: Encounter) => encounter.primaryTarget.getMinBaseDamage(),\n\t\t\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\t\t\tencounter.primaryTarget.setMinBaseDamage(eventID, newValue);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst advancedButton = document.createElement('button');\n\t\t\tadvancedButton.classList.add('sim-button', 'advanced-button', 'damage-metrics');\n\t\t\tadvancedButton.textContent = 'ADVANCED';\n\t\t\tadvancedButton.addEventListener('click', () => new AdvancedEncounterPicker(this.rootElem, modEncounter, simUI));\n\t\t\tthis.rootElem.appendChild(advancedButton);\n\t\t});\n\t}\n}\n\nclass AdvancedEncounterPicker extends Popup {\n\tprivate readonly encounter: Encounter;\n\n\tconstructor(parent: HTMLElement, encounter: Encounter, simUI: SimUI) {\n\t\tsuper(parent);\n\t\tthis.encounter = encounter;\n\n\t\tthis.rootElem.classList.add('advanced-encounter-picker');\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"encounter-type\"></div>\n\t\t\t<div class=\"encounter-header\">\n\t\t\t</div>\n\t\t\t<div class=\"encounter-targets\">\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.addCloseButton();\n\n\t\tconst presetEncounters = this.encounter.sim.getAllPresetEncounters();\n\n\t\tconst encounterTypeContainer = this.rootElem.getElementsByClassName('encounter-type')[0] as HTMLElement;\n\t\tnew EnumPicker<Encounter>(encounterTypeContainer, this.encounter, {\n\t\t\tlabel: 'ENCOUNTER',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Custom', value: -1 },\n\t\t\t].concat(presetEncounters.map((pe, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: pe.path,\n\t\t\t\t\tvalue: i,\n\t\t\t\t};\n\t\t\t})),\n\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\tgetValue: (encounter: Encounter) => presetEncounters.findIndex(pe => encounter.matchesPreset(pe)),\n\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\tif (newValue != -1) {\n\t\t\t\t\tencounter.applyPreset(eventID, presetEncounters[newValue]);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tconst header = this.rootElem.getElementsByClassName('encounter-header')[0] as HTMLElement;\n\t\tconst targetsElem = this.rootElem.getElementsByClassName('encounter-targets')[0] as HTMLElement;\n\n\t\taddEncounterFieldPickers(header, this.encounter, true);\n\t\tif (!simUI.isIndividualSim()) {\n\t\t\tnew BooleanPicker<Encounter>(header, encounter, {\n\t\t\t\tlabel: 'Use Health',\n\t\t\t\tlabelTooltip: 'Uses a damage limit in place of a duration limit. Damage limit is equal to sum of all targets health.',\n\t\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t\tgetValue: (encounter: Encounter) => encounter.getUseHealth(),\n\t\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: boolean) => {\n\t\t\t\t\tencounter.setUseHealth(eventID, newValue);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tnew ListPicker<Encounter, Target, TargetPicker>(targetsElem, this.encounter, {\n\t\t\textraCssClasses: [\n\t\t\t\t'targets-picker',\n\t\t\t],\n\t\t\titemLabel: 'Target',\n\t\t\tchangedEvent: (encounter: Encounter) => encounter.targetsChangeEmitter,\n\t\t\tgetValue: (encounter: Encounter) => encounter.getTargets(),\n\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: Array<Target>) => {\n\t\t\t\tencounter.setTargets(eventID, newValue);\n\t\t\t},\n\t\t\tnewItem: () => Target.fromDefaults(TypedEvent.nextEventID(), this.encounter.sim),\n\t\t\tcopyItem: (oldItem: Target) => oldItem.clone(TypedEvent.nextEventID()),\n\t\t\tnewItemPicker: (parent: HTMLElement, target: Target) => new TargetPicker(parent, target),\n\t\t});\n\t}\n}\n\nclass TargetPicker extends Component {\n\tconstructor(parent: HTMLElement, modTarget: Target) {\n\t\tsuper(parent, 'target-picker-root');\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"target-picker-section target-picker-section1\"></div>\n\t\t\t<div class=\"target-picker-section target-picker-section2\"></div>\n\t\t\t<div class=\"target-picker-section target-picker-section3 threat-metrics\"></div>\n\t\t`;\n\n\t\tconst encounter = modTarget.sim.encounter;\n\t\tconst section1 = this.rootElem.getElementsByClassName('target-picker-section1')[0] as HTMLElement;\n\t\tconst section2 = this.rootElem.getElementsByClassName('target-picker-section2')[0] as HTMLElement;\n\t\tconst section3 = this.rootElem.getElementsByClassName('target-picker-section3')[0] as HTMLElement;\n\n\t\tconst presetTargets = modTarget.sim.getAllPresetTargets();\n\t\tnew EnumPicker<Target>(section1, modTarget, {\n\t\t\textraCssClasses: ['npc-picker'],\n\t\t\tlabel: 'NPC',\n\t\t\tlabelTooltip: 'Selects a preset NPC configuration.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Custom', value: -1 },\n\t\t\t].concat(presetTargets.map((pe, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: pe.path,\n\t\t\t\t\tvalue: i,\n\t\t\t\t};\n\t\t\t})),\n\t\t\tchangedEvent: (target: Target) => target.changeEmitter,\n\t\t\tgetValue: (target: Target) => presetTargets.findIndex(pe => target.matchesPreset(pe)),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: number) => {\n\t\t\t\tif (newValue != -1) {\n\t\t\t\t\ttarget.applyPreset(eventID, presetTargets[newValue]);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tnew EnumPicker<Target>(section1, modTarget, {\n\t\t\textraCssClasses: ['ai-picker'],\n\t\t\tlabel: 'AI',\n\t\t\tlabelTooltip: `\n\t\t\t\t<p>Determines the target\\'s ability rotation.</p>\n\t\t\t\t<p>Note that most rotations are not yet implemented.</p>\n\t\t\t`,\n\t\t\tvalues: [\n\t\t\t\t{ name: 'None', value: 0 },\n\t\t\t].concat(presetTargets.map(pe => {\n\t\t\t\treturn {\n\t\t\t\t\tname: pe.path,\n\t\t\t\t\tvalue: pe.target!.id,\n\t\t\t\t};\n\t\t\t})),\n\t\t\tchangedEvent: (target: Target) => target.changeEmitter,\n\t\t\tgetValue: (target: Target) => target.getId(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: number) => {\n\t\t\t\ttarget.setId(eventID, newValue);\n\t\t\t},\n\t\t});\n\n\t\tnew EnumPicker<Target>(section1, modTarget, {\n\t\t\tlabel: 'Level',\n\t\t\tvalues: [\n\t\t\t\t{ name: '83', value: 83 },\n\t\t\t\t{ name: '82', value: 82 },\n\t\t\t\t{ name: '81', value: 81 },\n\t\t\t\t{ name: '80', value: 80 },\n\t\t\t],\n\t\t\tchangedEvent: (target: Target) => target.levelChangeEmitter,\n\t\t\tgetValue: (target: Target) => target.getLevel(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: number) => {\n\t\t\t\ttarget.setLevel(eventID, newValue);\n\t\t\t},\n\t\t});\n\t\tnew EnumPicker(section1, modTarget, {\n\t\t\tlabel: 'Mob Type',\n\t\t\tvalues: mobTypeEnumValues,\n\t\t\tchangedEvent: (target: Target) => target.mobTypeChangeEmitter,\n\t\t\tgetValue: (target: Target) => target.getMobType(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: number) => {\n\t\t\t\ttarget.setMobType(eventID, newValue);\n\t\t\t},\n\t\t});\n\t\tnew EnumPicker<Target>(section1, modTarget, {\n\t\t\textraCssClasses: ['threat-metrics'],\n\t\t\tlabel: 'Tanked By',\n\t\t\tlabelTooltip: 'Determines which player in the raid this enemy will attack. If no player is assigned to the specified tank slot, this enemy will not attack.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'None', value: -1 },\n\t\t\t\t{ name: 'Main Tank', value: 0 },\n\t\t\t\t{ name: 'Tank 2', value: 1 },\n\t\t\t\t{ name: 'Tank 3', value: 2 },\n\t\t\t\t{ name: 'Tank 4', value: 3 },\n\t\t\t],\n\t\t\tchangedEvent: (target: Target) => target.propChangeEmitter,\n\t\t\tgetValue: (target: Target) => target.getTankIndex(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: number) => {\n\t\t\t\ttarget.setTankIndex(eventID, newValue);\n\t\t\t},\n\t\t});\n\n\t\tALL_TARGET_STATS.forEach(statData => {\n\t\t\tconst stat = statData.stat;\n\t\t\tnew NumberPicker(section2, modTarget, {\n\t\t\t\textraCssClasses: statData.extraCssClasses,\n\t\t\t\tlabel: statNames[stat],\n\t\t\t\tlabelTooltip: statData.tooltip,\n\t\t\t\tchangedEvent: (target: Target) => target.statsChangeEmitter,\n\t\t\t\tgetValue: (target: Target) => target.getStats().getStat(stat),\n\t\t\t\tsetValue: (eventID: EventID, target: Target, newValue: number) => {\n\t\t\t\t\ttarget.setStats(eventID, target.getStats().withStat(stat, newValue));\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\n\t\tnew NumberPicker(section3, modTarget, {\n\t\t\tlabel: 'Swing Speed',\n\t\t\tlabelTooltip: 'Time in seconds between auto attacks. Set to 0 to disable auto attacks.',\n\t\t\tfloat: true,\n\t\t\tchangedEvent: (target: Target) => target.propChangeEmitter,\n\t\t\tgetValue: (target: Target) => target.getSwingSpeed(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: number) => {\n\t\t\t\ttarget.setSwingSpeed(eventID, newValue);\n\t\t\t},\n\t\t});\n\t\tnew NumberPicker(section3, modTarget, {\n\t\t\tlabel: 'Min Base Damage',\n\t\t\tlabelTooltip: 'Base damage for auto attacks, i.e. lowest roll with 0 AP against a 0-armor Player.',\n\t\t\tchangedEvent: (target: Target) => target.propChangeEmitter,\n\t\t\tgetValue: (target: Target) => target.getMinBaseDamage(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: number) => {\n\t\t\t\ttarget.setMinBaseDamage(eventID, newValue);\n\t\t\t},\n\t\t});\n\t\tnew BooleanPicker(section3, modTarget, {\n\t\t\tlabel: 'Dual Wield',\n\t\t\tlabelTooltip: 'Uses 2 separate weapons to attack.',\n\t\t\tchangedEvent: (target: Target) => target.propChangeEmitter,\n\t\t\tgetValue: (target: Target) => target.getDualWield(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: boolean) => {\n\t\t\t\ttarget.setDualWield(eventID, newValue);\n\t\t\t},\n\t\t});\n\t\tnew BooleanPicker(section3, modTarget, {\n\t\t\tlabel: 'DW Miss Penalty',\n\t\t\tlabelTooltip: 'Enables the Dual Wield Miss Penalty (+19% chance to miss) if dual wielding. Bosses in Hyjal/BT/SWP usually have this disabled to stop tanks from avoidance stacking.',\n\t\t\tchangedEvent: (target: Target) => target.changeEmitter,\n\t\t\tgetValue: (target: Target) => target.getDualWieldPenalty(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: boolean) => {\n\t\t\t\ttarget.setDualWieldPenalty(eventID, newValue);\n\t\t\t},\n\t\t\tenableWhen: (target: Target) => target.getDualWield(),\n\t\t});\n\t\tnew BooleanPicker(section3, modTarget, {\n\t\t\tlabel: 'Parry Haste',\n\t\t\tlabelTooltip: 'Whether this enemy will gain parry haste when parrying attacks.',\n\t\t\tchangedEvent: (target: Target) => target.propChangeEmitter,\n\t\t\tgetValue: (target: Target) => target.getParryHaste(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: boolean) => {\n\t\t\t\ttarget.setParryHaste(eventID, newValue);\n\t\t\t},\n\t\t});\n\t\tnew EnumPicker<Target>(section3, modTarget, {\n\t\t\tlabel: 'Spell School',\n\t\t\tlabelTooltip: 'Type of damage caused by auto attacks. This is usually Physical, but some enemies have elemental attacks.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Physical', value: SpellSchool.SpellSchoolPhysical },\n\t\t\t\t{ name: 'Arcane', value: SpellSchool.SpellSchoolArcane },\n\t\t\t\t{ name: 'Fire', value: SpellSchool.SpellSchoolFire },\n\t\t\t\t{ name: 'Frost', value: SpellSchool.SpellSchoolFrost },\n\t\t\t\t{ name: 'Holy', value: SpellSchool.SpellSchoolHoly },\n\t\t\t\t{ name: 'Nature', value: SpellSchool.SpellSchoolNature },\n\t\t\t\t{ name: 'Shadow', value: SpellSchool.SpellSchoolShadow },\n\t\t\t],\n\t\t\tchangedEvent: (target: Target) => target.propChangeEmitter,\n\t\t\tgetValue: (target: Target) => target.getSpellSchool(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: number) => {\n\t\t\t\ttarget.setSpellSchool(eventID, newValue);\n\t\t\t},\n\t\t});\n\t\tnew BooleanPicker(section3, modTarget, {\n\t\t\tlabel: 'Chill of the Throne',\n\t\t\tlabelTooltip: 'Reduces the chance for this enemy\\'s attacks to be dodged by 20%. Active in Icecrown Citadel.',\n\t\t\tchangedEvent: (target: Target) => target.changeEmitter,\n\t\t\tgetValue: (target: Target) => target.getSuppressDodge(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: boolean) => {\n\t\t\t\ttarget.setSuppressDodge(eventID, newValue);\n\t\t\t},\n\t\t\tenableWhen: (target: Target) => target.getLevel() == Mechanics.BOSS_LEVEL,\n\t\t});\n\t\tnew BooleanPicker(section3, modTarget, {\n\t\t\tlabel: 'Tightened Damage Range',\n\t\t\tlabelTooltip: 'Reduces the damage range of this enemy\\'s auto-attacks. Observed behavior for Patchwerk.',\n\t\t\tchangedEvent: (target: Target) => target.changeEmitter,\n\t\t\tgetValue: (target: Target) => target.getTightEnemyDamage(),\n\t\t\tsetValue: (eventID: EventID, target: Target, newValue: boolean) => {\n\t\t\t\ttarget.setTightEnemyDamage(eventID, newValue);\n\t\t\t},\n\t\t\tenableWhen: (target: Target) => target.getLevel() == Mechanics.BOSS_LEVEL,\n\t\t});\n\t}\n}\n\nfunction addEncounterFieldPickers(rootElem: HTMLElement, encounter: Encounter, showExecuteProportion: boolean) {\n\tnew NumberPicker(rootElem, encounter, {\n\t\tlabel: 'Duration',\n\t\tlabelTooltip: 'The fight length for each sim iteration, in seconds.',\n\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\tgetValue: (encounter: Encounter) => encounter.getDuration(),\n\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\tencounter.setDuration(eventID, newValue);\n\t\t},\n\t\tenableWhen: (obj) => { return !encounter.getUseHealth() },\n\t});\n\tnew NumberPicker(rootElem, encounter, {\n\t\tlabel: 'Duration +/-',\n\t\tlabelTooltip: 'Adds a random amount of time, in seconds, between [value, -1 * value] to each sim iteration. For example, setting Duration to 180 and Duration +/- to 10 will result in random durations between 170s and 190s.',\n\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\tgetValue: (encounter: Encounter) => encounter.getDurationVariation(),\n\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\tencounter.setDurationVariation(eventID, newValue);\n\t\t},\n\t\tenableWhen: (obj) => { return !encounter.getUseHealth() },\n\t});\n\n\tif (showExecuteProportion) {\n\t\tnew NumberPicker(rootElem, encounter, {\n\t\t\tlabel: 'Execute Duration 20 (%)',\n\t\t\tlabelTooltip: 'Percentage of the total encounter duration, for which the targets will be considered to be in execute range (< 20% HP) for the purpose of effects like Warrior Execute or Mage Molten Fury.',\n\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\tgetValue: (encounter: Encounter) => encounter.getExecuteProportion20() * 100,\n\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\tencounter.setExecuteProportion20(eventID, newValue / 100);\n\t\t\t},\n\t\t\tenableWhen: (obj) => { return !encounter.getUseHealth() },\n\t\t});\n\t\tnew NumberPicker(rootElem, encounter, {\n\t\t\tlabel: 'Execute Duration 25 (%)',\n\t\t\tlabelTooltip: 'Percentage of the total encounter duration, for which the targets will be considered to be in execute range (< 25% HP) for the purpose of effects like Warlock\\'s Drain Soul.',\n\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\tgetValue: (encounter: Encounter) => encounter.getExecuteProportion25() * 100,\n\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\tencounter.setExecuteProportion25(eventID, newValue / 100);\n\t\t\t},\n\t\t\tenableWhen: (obj) => { return !encounter.getUseHealth() },\n\t\t});\n\t\tnew NumberPicker(rootElem, encounter, {\n\t\t\tlabel: 'Execute Duration 35 (%)',\n\t\t\tlabelTooltip: 'Percentage of the total encounter duration, for which the targets will be considered to be in execute range (< 35% HP) for the purpose of effects like Warrior Execute or Mage Molten Fury.',\n\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\tgetValue: (encounter: Encounter) => encounter.getExecuteProportion35() * 100,\n\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\tencounter.setExecuteProportion35(eventID, newValue / 100);\n\t\t\t},\n\t\t\tenableWhen: (obj) => { return !encounter.getUseHealth() },\n\t\t});\n\t}\n}\n\nconst ALL_TARGET_STATS: Array<{ stat: Stat, tooltip: string, extraCssClasses: Array<string> }> = [\n\t{ stat: Stat.StatHealth, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatArmor, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatArcaneResistance, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatFireResistance, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatFrostResistance, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatNatureResistance, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatShadowResistance, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatAttackPower, tooltip: '', extraCssClasses: ['threat-metrics'] },\n\t{ stat: Stat.StatBlockValue, tooltip: '', extraCssClasses: ['threat-metrics'] },\n];\n\nconst mobTypeEnumValues = [\n\t{ name: 'None', value: MobType.MobTypeUnknown },\n\t{ name: 'Beast', value: MobType.MobTypeBeast },\n\t{ name: 'Demon', value: MobType.MobTypeDemon },\n\t{ name: 'Dragonkin', value: MobType.MobTypeDragonkin },\n\t{ name: 'Elemental', value: MobType.MobTypeElemental },\n\t{ name: 'Giant', value: MobType.MobTypeGiant },\n\t{ name: 'Humanoid', value: MobType.MobTypeHumanoid },\n\t{ name: 'Mechanical', value: MobType.MobTypeMechanical },\n\t{ name: 'Undead', value: MobType.MobTypeUndead },\n];\n","import { Enchant } from '../proto/common.js';\n\nlet descriptionsPromise: Promise<Record<number, string>> | null = null;\nfunction fetchEnchantDescriptions(): Promise<Record<number, string>> {\n\tif (descriptionsPromise == null) {\n\t\tdescriptionsPromise = fetch('/wotlk/assets/enchants/descriptions.json')\n\t\t\t.then(response => response.json())\n\t\t\t.then(json => {\n\t\t\t\tconst descriptionsMap: Record<number, string> = {};\n\t\t\t\tfor (let idStr in json) {\n\t\t\t\t\tdescriptionsMap[parseInt(idStr)] = json[idStr];\n\t\t\t\t}\n\t\t\t\treturn descriptionsMap;\n\t\t\t});\n\t}\n\treturn descriptionsPromise;\n}\n\nexport async function getEnchantDescription(enchant: Enchant): Promise<string> {\n\tconst descriptionsMap = await fetchEnchantDescriptions();\n\treturn descriptionsMap[enchant.effectId] || enchant.name;\n}\n","import { BooleanPicker } from '../components/boolean_picker.js';\nimport { EnumPicker, EnumPickerConfig } from '../components/enum_picker.js';\nimport { Conjured } from '../proto/common.js';\nimport { RaidTarget } from '../proto/common.js';\nimport { TristateEffect } from '../proto/common.js';\nimport { Party } from '../party.js';\nimport { Player } from '../player.js';\nimport { Sim } from '../sim.js';\nimport { Target } from '../target.js';\nimport { Encounter } from '../encounter.js';\nimport { Raid } from '../raid.js';\nimport { SimUI } from '../sim_ui.js';\nimport { IndividualSimUI } from '../individual_sim_ui.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { emptyRaidTarget } from '../proto_utils/utils.js';\n\nexport function makeShow1hWeaponsSelector(parent: HTMLElement, sim: Sim): BooleanPicker<Sim> {\n\treturn new BooleanPicker<Sim>(parent, sim, {\n\t\textraCssClasses: [\n\t\t\t'show-1h-weapons-selector',\n\t\t],\n\t\tlabel: '1H',\n\t\tchangedEvent: (sim: Sim) => sim.show1hWeaponsChangeEmitter,\n\t\tgetValue: (sim: Sim) => sim.getShow1hWeapons(),\n\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\tsim.setShow1hWeapons(eventID, newValue);\n\t\t},\n\t});\n}\n\nexport function makeShow2hWeaponsSelector(parent: HTMLElement, sim: Sim): BooleanPicker<Sim> {\n\treturn new BooleanPicker<Sim>(parent, sim, {\n\t\textraCssClasses: [\n\t\t\t'show-2h-weapons-selector',\n\t\t],\n\t\tlabel: '2H',\n\t\tchangedEvent: (sim: Sim) => sim.show2hWeaponsChangeEmitter,\n\t\tgetValue: (sim: Sim) => sim.getShow2hWeapons(),\n\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\tsim.setShow2hWeapons(eventID, newValue);\n\t\t},\n\t});\n}\n\nexport function makeShowMatchingGemsSelector(parent: HTMLElement, sim: Sim): BooleanPicker<Sim> {\n\treturn new BooleanPicker<Sim>(parent, sim, {\n\t\textraCssClasses: [\n\t\t\t'show-matching-gems-selector',\n\t\t],\n\t\tlabel: 'Match Socket',\n\t\tchangedEvent: (sim: Sim) => sim.showMatchingGemsChangeEmitter,\n\t\tgetValue: (sim: Sim) => sim.getShowMatchingGems(),\n\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\tsim.setShowMatchingGems(eventID, newValue);\n\t\t},\n\t});\n}\n\nexport function makePhaseSelector(parent: HTMLElement, sim: Sim): EnumPicker<Sim> {\n\treturn new EnumPicker<Sim>(parent, sim, {\n\t\textraCssClasses: [\n\t\t\t'phase-selector',\n\t\t],\n\t\tvalues: [\n\t\t\t{ name: 'Phase 1', value: 1 },\n\t\t\t{ name: 'Phase 2', value: 2 },\n\t\t\t{ name: 'Phase 3', value: 3 },\n\t\t\t{ name: 'Phase 4', value: 4 },\n\t\t\t{ name: 'Phase 5', value: 5 },\n\t\t],\n\t\tchangedEvent: (sim: Sim) => sim.phaseChangeEmitter,\n\t\tgetValue: (sim: Sim) => sim.getPhase(),\n\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\tsim.setPhase(eventID, newValue);\n\t\t},\n\t});\n}\n\nexport const StartingConjured = {\n\ttype: 'enum' as const,\n\tlabel: 'Starting Conjured',\n\tlabelTooltip: 'If set, this conjured will be used instead of the default conjured for the first few uses.',\n\tvalues: [\n\t\t{ name: 'None', value: Conjured.ConjuredUnknown },\n\t\t{ name: 'Dark Rune', value: Conjured.ConjuredDarkRune },\n\t\t{ name: 'Flame Cap', value: Conjured.ConjuredFlameCap },\n\t\t{ name: 'Thistle Tea', value: Conjured.ConjuredRogueThistleTea },\n\t],\n\tchangedEvent: (player: Player<any>) => player.consumesChangeEmitter,\n\tgetValue: (player: Player<any>) => player.getConsumes().startingConjured,\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tconst newConsumes = player.getConsumes();\n\t\tnewConsumes.startingConjured = newValue;\n\t\tplayer.setConsumes(eventID, newConsumes);\n\t},\n};\n\nexport const NumStartingConjured = {\n\ttype: 'number' as const,\n\tlabel: '# to use',\n\tlabelTooltip: 'The number of starting conjured items to use before going back to the default conjured.',\n\tchangedEvent: (player: Player<any>) => player.consumesChangeEmitter,\n\tgetValue: (player: Player<any>) => player.getConsumes().numStartingConjured,\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tconst newConsumes = player.getConsumes();\n\t\tnewConsumes.numStartingConjured = newValue;\n\t\tplayer.setConsumes(eventID, newConsumes);\n\t},\n\tenableWhen: (player: Player<any>) => player.getConsumes().startingConjured != Conjured.ConjuredUnknown,\n};\n\nexport const InFrontOfTarget = {\n\ttype: 'boolean' as const,\n\tlabel: 'In Front of Target',\n\tlabelTooltip: 'Stand in front of the target, causing Blocks and Parries to be included in the attack table.',\n\tchangedEvent: (player: Player<any>) => player.inFrontOfTargetChangeEmitter,\n\tgetValue: (player: Player<any>) => player.getInFrontOfTarget(),\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: boolean) => {\n\t\tplayer.setInFrontOfTarget(eventID, newValue);\n\t},\n};\n\nexport const DistanceFromTarget = {\n\ttype: 'number' as const,\n\tlabel: 'Distance From Target',\n\tlabelTooltip: 'Distance from targets, in yards. Used to calculate travel time for certain spells.',\n\tchangedEvent: (player: Player<any>) => player.distanceFromTargetChangeEmitter,\n\tgetValue: (player: Player<any>) => player.getDistanceFromTarget(),\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tplayer.setDistanceFromTarget(eventID, newValue);\n\t},\n};\n\nexport const TankAssignment = {\n\ttype: 'enum' as const,\n\textraCssClasses: [\n\t\t'tank-selector',\n\t\t'threat-metrics',\n\t\t'within-raid-sim-hide',\n\t],\n\tlabel: 'Tank Assignment',\n\tlabelTooltip: 'Determines which mobs will be tanked. Most mobs default to targeting the Main Tank, but in preset multi-target encounters this is not always true.',\n\tvalues: [\n\t\t{ name: 'None', value: -1 },\n\t\t{ name: 'Main Tank', value: 0 },\n\t\t{ name: 'Tank 2', value: 1 },\n\t\t{ name: 'Tank 3', value: 2 },\n\t\t{ name: 'Tank 4', value: 3 },\n\t],\n\tchangedEvent: (player: Player<any>) => player.getRaid()!.tanksChangeEmitter,\n\tgetValue: (player: Player<any>) => player.getRaid()!.getTanks().findIndex(tank => RaidTarget.equals(tank, player.makeRaidTarget())),\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tconst newTanks = [];\n\t\tif (newValue != -1) {\n\t\t\tfor (let i = 0; i < newValue; i++) {\n\t\t\t\tnewTanks.push(emptyRaidTarget());\n\t\t\t}\n\t\t\tnewTanks.push(player.makeRaidTarget());\n\t\t}\n\t\tplayer.getRaid()!.setTanks(eventID, newTanks);\n\t},\n};\n\nexport const IncomingHps = {\n\ttype: 'number' as const,\n\tlabel: 'Incoming HPS',\n\tlabelTooltip: `\n\t\t<p>Average amount of healing received per second. Used for calculating chance of death.</p>\n\t\t<p>If set to 0, defaults to 150% of DTPS.</p>\n\t`,\n\tchangedEvent: (player: Player<any>) => player.getRaid()!.changeEmitter,\n\tgetValue: (player: Player<any>) => player.getHealingModel().hps,\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tconst healingModel = player.getHealingModel();\n\t\thealingModel.hps = newValue;\n\t\tplayer.setHealingModel(eventID, healingModel);\n\t},\n\tenableWhen: (player: Player<any>) => player.getRaid()!.getTanks().find(tank => RaidTarget.equals(tank, player.makeRaidTarget())) != null,\n};\n\nexport const HealingCadence = {\n\ttype: 'number' as const,\n\tfloat: true,\n\tlabel: 'Healing Cadence',\n\tlabelTooltip: `\n\t\t<p>How often the incoming heal 'ticks', in seconds. Generally, longer durations favor Effective Hit Points (EHP) for minimizing Chance of Death, while shorter durations favor avoidance.</p>\n\t\t<p>Example: if Incoming HPS is set to 1000 and this is set to 1s, then every 1s a heal will be received for 1000. If this is instead set to 2s, then every 2s a heal will be recieved for 2000.</p>\n\t\t<p>If set to 0, defaults to 2.0 seconds.</p>\n\t`,\n\tchangedEvent: (player: Player<any>) => player.getRaid()!.changeEmitter,\n\tgetValue: (player: Player<any>) => player.getHealingModel().cadenceSeconds,\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tconst healingModel = player.getHealingModel();\n\t\thealingModel.cadenceSeconds = newValue;\n\t\tplayer.setHealingModel(eventID, healingModel);\n\t},\n\tenableWhen: (player: Player<any>) => player.getRaid()!.getTanks().find(tank => RaidTarget.equals(tank, player.makeRaidTarget())) != null,\n};\n\nexport const HpPercentForDefensives = {\n\ttype: 'number' as const,\n\tfloat: true,\n\tlabel: 'HP % for Defensive CDs',\n\tlabelTooltip: `\n\t\t<p>% of Maximum Health, below which defensive cooldowns are allowed to be used.</p>\n\t\t<p>If set to 0, this restriction is disabled.</p>\n\t`,\n\tchangedEvent: (player: Player<any>) => player.cooldownsChangeEmitter,\n\tgetValue: (player: Player<any>) => player.getCooldowns().hpPercentForDefensives * 100,\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tconst cooldowns = player.getCooldowns();\n\t\tcooldowns.hpPercentForDefensives = newValue / 100;\n\t\tplayer.setCooldowns(eventID, cooldowns);\n\t},\n};\n\nexport const InspirationUptime = {\n    type: 'number' as const,\n    float: true,\n    label: 'Inspiration % Uptime',\n    labelTooltip: `\n\t\t<p>% average of Encounter Duration, during which you have the Inspiration buff.</p>\n\t\t<p>If set to 0, the buff isn't applied.</p>\n\t`,\n    changedEvent: (player: Player<any>) => player.healingModelChangeEmitter,\n    getValue: (player: Player<any>) => player.getHealingModel().inspirationUptime * 100,\n    setValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n        const healingModel = player.getHealingModel();\n        healingModel.inspirationUptime = newValue / 100;\n        player.setHealingModel(eventID, healingModel);\n    },\n};\n","import { getWowheadItemId } from '../proto_utils/equipped_item.js';\nimport { EquippedItem } from '../proto_utils/equipped_item.js';\nimport { getEmptyGemSocketIconUrl, gemMatchesSocket } from '../proto_utils/gems.js';\nimport { setGemSocketCssClass } from '../proto_utils/gems.js';\nimport { Stats } from '../proto_utils/stats.js';\nimport { enchantAppliesToItem } from '../proto_utils/utils.js';\nimport { Class, Enchant, Gem, GemColor } from '../proto/common.js';\nimport { HandType } from '../proto/common.js';\nimport { WeaponType } from '../proto/common.js';\nimport { Item } from '../proto/common.js';\nimport { ItemQuality } from '../proto/common.js';\nimport { ItemSlot } from '../proto/common.js';\nimport { ItemType } from '../proto/common.js';\nimport { Profession } from '../proto/common.js';\nimport { getEnchantDescription } from '../proto_utils/enchants.js';\nimport { ActionId } from '../proto_utils/action_id.js';\nimport { slotNames } from '../proto_utils/names.js';\nimport { setItemQualityCssClass } from '../css_utils.js';\nimport { Player } from '../player.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { formatDeltaTextElem } from '../utils.js';\nimport { getEnumValues } from '../utils.js';\n\nimport { Component } from './component.js';\nimport { Popup } from './popup.js';\nimport { makePhaseSelector } from './other_inputs.js';\nimport { makeShow1hWeaponsSelector } from './other_inputs.js';\nimport { makeShow2hWeaponsSelector } from './other_inputs.js';\nimport { makeShowMatchingGemsSelector } from './other_inputs.js';\n\ndeclare var $: any;\ndeclare var tippy: any;\n\nexport class GearPicker extends Component {\n\t// ItemSlot is used as the index\n\treadonly itemPickers: Array<ItemPicker>;\n\n\tconstructor(parent: HTMLElement, player: Player<any>) {\n\t\tsuper(parent, 'gear-picker-root');\n\n\t\tconst leftSide = document.createElement('div');\n\t\tleftSide.classList.add('gear-picker-left');\n\t\tthis.rootElem.appendChild(leftSide);\n\n\t\tconst rightSide = document.createElement('div');\n\t\trightSide.classList.add('gear-picker-right');\n\t\tthis.rootElem.appendChild(rightSide);\n\n\t\tconst leftItemPickers = [\n\t\t\tItemSlot.ItemSlotHead,\n\t\t\tItemSlot.ItemSlotNeck,\n\t\t\tItemSlot.ItemSlotShoulder,\n\t\t\tItemSlot.ItemSlotBack,\n\t\t\tItemSlot.ItemSlotChest,\n\t\t\tItemSlot.ItemSlotWrist,\n\t\t\tItemSlot.ItemSlotMainHand,\n\t\t\tItemSlot.ItemSlotOffHand,\n\t\t].map(slot => new ItemPicker(leftSide, player, slot));\n\n\t\tconst rightItemPickers = [\n\t\t\tItemSlot.ItemSlotHands,\n\t\t\tItemSlot.ItemSlotWaist,\n\t\t\tItemSlot.ItemSlotLegs,\n\t\t\tItemSlot.ItemSlotFeet,\n\t\t\tItemSlot.ItemSlotFinger1,\n\t\t\tItemSlot.ItemSlotFinger2,\n\t\t\tItemSlot.ItemSlotTrinket1,\n\t\t\tItemSlot.ItemSlotTrinket2,\n\t\t\tItemSlot.ItemSlotRanged,\n\t\t].map(slot => new ItemPicker(rightSide, player, slot));\n\n\t\tthis.itemPickers = leftItemPickers.concat(rightItemPickers).sort((a, b) => a.slot - b.slot);\n\t}\n}\n\nclass ItemPicker extends Component {\n\treadonly slot: ItemSlot;\n\n\tprivate readonly player: Player<any>;\n\tprivate readonly iconElem: HTMLAnchorElement;\n\tprivate readonly nameElem: HTMLAnchorElement;\n\tprivate readonly enchantElem: HTMLAnchorElement;\n\tprivate readonly socketsContainerElem: HTMLElement;\n\n\t// All items and enchants that are eligible for this slot\n\tprivate _items: Array<Item> = [];\n\tprivate _enchants: Array<Enchant> = [];\n\n\tprivate _equippedItem: EquippedItem | null = null;\n\n\n\tconstructor(parent: HTMLElement, player: Player<any>, slot: ItemSlot) {\n\t\tsuper(parent, 'item-picker-root');\n\t\tthis.slot = slot;\n\t\tthis.player = player;\n\n\t\tthis.rootElem.innerHTML = `\n      <a class=\"item-picker-icon\">\n        <div class=\"item-picker-sockets-container\">\n        </div>\n      </a>\n      <div class=\"item-picker-labels-container\">\n        <a class=\"item-picker-name\"></a><br>\n        <a class=\"item-picker-enchant\"></a>\n      </div>\n    `;\n\n\t\tthis.iconElem = this.rootElem.getElementsByClassName('item-picker-icon')[0] as HTMLAnchorElement;\n\t\tthis.nameElem = this.rootElem.getElementsByClassName('item-picker-name')[0] as HTMLAnchorElement;\n\t\tthis.enchantElem = this.rootElem.getElementsByClassName('item-picker-enchant')[0] as HTMLAnchorElement;\n\t\tthis.socketsContainerElem = this.rootElem.getElementsByClassName('item-picker-sockets-container')[0] as HTMLElement;\n\n\t\tthis.item = player.getEquippedItem(slot);\n\t\tplayer.sim.waitForInit().then(() => {\n\t\t\tthis._items = this.player.getItems(this.slot);\n\t\t\tthis._enchants = this.player.getEnchants(this.slot);\n\n\t\t\tconst onClickStart = (event: Event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tconst selectorModal = new SelectorModal(this.rootElem.closest('.individual-sim-ui')!, this.player, this.slot, this._equippedItem, this._items, this._enchants);\n\t\t\t};\n\t\t\tconst onClickEnd = (event: Event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t};\n\t\t\tthis.iconElem.addEventListener('click', onClickStart);\n\t\t\tthis.iconElem.addEventListener('touchstart', onClickStart);\n\t\t\tthis.iconElem.addEventListener('touchend', onClickEnd);\n\t\t\tthis.nameElem.addEventListener('click', onClickStart);\n\t\t\tthis.nameElem.addEventListener('touchstart', onClickStart);\n\t\t\tthis.nameElem.addEventListener('touchend', onClickEnd);\n\n\t\t\t// Make enchant name open enchant tab.\n\t\t\tthis.enchantElem.addEventListener('click', (ev: Event) => {\n\t\t\t\tev.preventDefault();\n\t\t\t\tconst selectorModal = new SelectorModal(this.rootElem.closest('.individual-sim-ui')!, this.player, this.slot, this._equippedItem, this._items, this._enchants);\n\t\t\t\tselectorModal.openTab(1);\n\t\t\t});\n\t\t\tthis.enchantElem.addEventListener('touchstart', (ev: Event) => {\n\t\t\t\tev.preventDefault();\n\t\t\t\tconst selectorModal = new SelectorModal(this.rootElem.closest('.individual-sim-ui')!, this.player, this.slot, this._equippedItem, this._items, this._enchants);\n\t\t\t\tselectorModal.openTab(1);\n\t\t\t});\n\t\t\tthis.enchantElem.addEventListener('touchend', onClickEnd);\n\t\t});\n\t\tplayer.gearChangeEmitter.on(() => {\n\t\t\tthis.item = player.getEquippedItem(slot);\n\t\t});\n\t\tplayer.professionChangeEmitter.on(() => {\n\t\t\tif (this._equippedItem != null) {\n\t\t\t\tthis.player.setWowheadData(this._equippedItem, this.iconElem);\n\t\t\t}\n\t\t});\n\t}\n\n\tset item(newItem: EquippedItem | null) {\n\t\t// Clear everything first\n\t\tthis.nameElem.removeAttribute('data-wowhead');\n\t\tthis.nameElem.removeAttribute('href');\n\t\tthis.iconElem.style.backgroundImage = `url('${getEmptySlotIconUrl(this.slot)}')`;\n\t\tthis.iconElem.removeAttribute('data-wowhead');\n\t\tthis.iconElem.removeAttribute('href');\n\t\tthis.enchantElem.removeAttribute('data-wowhead');\n\n\t\tthis.nameElem.textContent = slotNames[this.slot];\n\t\tsetItemQualityCssClass(this.nameElem, null);\n\n\t\tthis.enchantElem.innerHTML = '';\n\t\tthis.socketsContainerElem.innerHTML = '';\n\n\t\tif (newItem != null) {\n\t\t\tthis.nameElem.textContent = newItem.item.name;\n\t\t\tif (newItem.item.heroic) {\n\t\t\t\tvar heroic_span = document.createElement('span');\n\t\t\t\theroic_span.style.color = \"green\";\n\t\t\t\theroic_span.style.marginLeft = \"3px\";\n\t\t\t\theroic_span.innerText = \"[H]\";\n\t\t\t\tthis.nameElem.appendChild(heroic_span);\n\t\t\t}\n\n\t\t\tsetItemQualityCssClass(this.nameElem, newItem.item.quality);\n\n\t\t\tthis.player.setWowheadData(newItem, this.iconElem);\n\t\t\tthis.player.setWowheadData(newItem, this.nameElem);\n\t\t\tnewItem.asActionId().fill().then(filledId => {\n\t\t\t\tfilledId.setBackgroundAndHref(this.iconElem);\n\t\t\t\tfilledId.setWowheadHref(this.nameElem);\n\t\t\t});\n\n\t\t\tif (newItem.enchant) {\n\t\t\t\tgetEnchantDescription(newItem.enchant).then(description => {\n\t\t\t\t\tthis.enchantElem.textContent = description;\n\t\t\t\t});\n\t\t\t\t// Make enchant text hover have a tooltip.\n\t\t\t\tif (newItem.enchant.isSpellId) {\n\t\t\t\t\tthis.enchantElem.setAttribute('data-wowhead', `domain=wotlk&spell=${newItem.enchant.id}`);\n\t\t\t\t} else {\n\t\t\t\t\tthis.enchantElem.setAttribute('data-wowhead', `domain=wotlk&item=${newItem.enchant.id}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnewItem.allSocketColors().forEach((socketColor, gemIdx) => {\n\t\t\t\tconst gemIconElem = document.createElement('img');\n\t\t\t\tgemIconElem.classList.add('item-picker-gem-icon');\n\t\t\t\tsetGemSocketCssClass(gemIconElem, socketColor);\n\t\t\t\tif (newItem.gems[gemIdx] == null) {\n\t\t\t\t\tgemIconElem.src = getEmptyGemSocketIconUrl(socketColor);\n\t\t\t\t} else {\n\t\t\t\t\tActionId.fromItemId(newItem.gems[gemIdx]!.id).fill().then(filledId => {\n\t\t\t\t\t\tgemIconElem.src = filledId.iconUrl;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.socketsContainerElem.appendChild(gemIconElem);\n\n\t\t\t\tif (gemIdx == newItem.numPossibleSockets - 1 && [ItemType.ItemTypeWrist, ItemType.ItemTypeHands].includes(newItem.item.type)) {\n\t\t\t\t\tconst updateProfession = () => {\n\t\t\t\t\t\tif (this.player.isBlacksmithing()) {\n\t\t\t\t\t\t\tgemIconElem.style.removeProperty('display');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgemIconElem.style.display = 'none';\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tthis.player.professionChangeEmitter.on(updateProfession);\n\t\t\t\t\tupdateProfession();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis._equippedItem = newItem;\n\t}\n}\n\nclass SelectorModal extends Popup {\n\tprivate player: Player<any>;\n\tprivate readonly tabsElem: HTMLElement;\n\tprivate readonly contentElem: HTMLElement;\n\n\tconstructor(parent: HTMLElement, player: Player<any>, slot: ItemSlot, equippedItem: EquippedItem | null, eligibleItems: Array<Item>, eligibleEnchants: Array<Enchant>) {\n\t\tsuper(parent);\n\t\tthis.player = player;\n\n\t\tthis.rootElem.classList.add('selector-modal');\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<ul class=\"nav nav-tabs selector-modal-tabs\">\n\t\t\t</ul>\n\t\t\t<div class=\"tab-content selector-modal-tab-content\">\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.addCloseButton();\n\t\tthis.tabsElem = this.rootElem.getElementsByClassName('selector-modal-tabs')[0] as HTMLElement;\n\t\tthis.contentElem = this.rootElem.getElementsByClassName('selector-modal-tab-content')[0] as HTMLElement;\n\n\t\tthis.setData(slot, equippedItem, eligibleItems, eligibleEnchants);\n\t}\n\n\topenTab(idx: number) {\n\t\tconst elems = this.tabsElem.getElementsByClassName(\"selector-modal-item-tab\");\n\t\t(elems[idx] as HTMLElement).click();\n\t}\n\n\tsetData(slot: ItemSlot, equippedItem: EquippedItem | null, eligibleItems: Array<Item>, eligibleEnchants: Array<Enchant>) {\n\t\tthis.tabsElem.innerHTML = '';\n\t\tthis.contentElem.innerHTML = '';\n\n\t\tthis.addTab(\n\t\t\t'Items',\n\t\t\tslot,\n\t\t\tequippedItem,\n\t\t\teligibleItems.map(item => {\n\t\t\t\treturn {\n\t\t\t\t\titem: item,\n\t\t\t\t\tid: item.id,\n\t\t\t\t\tactionId: ActionId.fromItem(item),\n\t\t\t\t\tname: item.name,\n\t\t\t\t\tquality: item.quality,\n\t\t\t\t\theroic: item.heroic,\n\t\t\t\t\tphase: item.phase,\n\t\t\t\t\tbaseEP: this.player.computeItemEP(item),\n\t\t\t\t\tignoreEPFilter: false,\n\t\t\t\t\tonEquip: (eventID, item: Item) => {\n\t\t\t\t\t\tconst equippedItem = this.player.getEquippedItem(slot);\n\t\t\t\t\t\tif (equippedItem) {\n\t\t\t\t\t\t\tthis.player.equipItem(eventID, slot, equippedItem.withItem(item));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.player.equipItem(eventID, slot, new EquippedItem(item));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}),\n\t\t\titem => this.player.computeItemEP(item),\n\t\t\tequippedItem => equippedItem?.item,\n\t\t\tGemColor.GemColorUnknown,\n\t\t\teventID => {\n\t\t\t\tthis.player.equipItem(eventID, slot, null);\n\t\t\t});\n\n\t\tthis.addTab(\n\t\t\t'Enchants',\n\t\t\tslot,\n\t\t\tequippedItem,\n\t\t\teligibleEnchants.map(enchant => {\n\t\t\t\treturn {\n\t\t\t\t\titem: enchant,\n\t\t\t\t\tid: enchant.id,\n\t\t\t\t\tactionId: enchant.isSpellId ? ActionId.fromSpellId(enchant.id) : ActionId.fromItemId(enchant.id),\n\t\t\t\t\tname: enchant.name,\n\t\t\t\t\tquality: enchant.quality,\n\t\t\t\t\tphase: enchant.phase || 1,\n\t\t\t\t\tbaseEP: this.player.computeStatsEP(new Stats(enchant.stats)),\n\t\t\t\t\tignoreEPFilter: true,\n\t\t\t\t\theroic: false,\n\t\t\t\t\tonEquip: (eventID, enchant: Enchant) => {\n\t\t\t\t\t\tconst equippedItem = this.player.getEquippedItem(slot);\n\t\t\t\t\t\tif (equippedItem)\n\t\t\t\t\t\t\tthis.player.equipItem(eventID, slot, equippedItem.withEnchant(enchant));\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}),\n\t\t\tenchant => this.player.computeEnchantEP(enchant),\n\t\t\tequippedItem => equippedItem?.enchant,\n\t\t\tGemColor.GemColorUnknown,\n\t\t\teventID => {\n\t\t\t\tconst equippedItem = this.player.getEquippedItem(slot);\n\t\t\t\tif (equippedItem)\n\t\t\t\t\tthis.player.equipItem(eventID, slot, equippedItem.withEnchant(null));\n\t\t\t});\n\n\t\tthis.addGemTabs(slot, equippedItem);\n\t}\n\n\tprivate addGemTabs(slot: ItemSlot, equippedItem: EquippedItem | null) {\n\t\tif (equippedItem == undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst socketBonusEP = this.player.computeStatsEP(new Stats(equippedItem.item.socketBonus)) / (equippedItem.item.gemSockets.length || 1);\n\t\tequippedItem.curSocketColors(this.player.isBlacksmithing()).forEach((socketColor, socketIdx) => {\n\t\t\tthis.addTab(\n\t\t\t\t'Gem ' + (socketIdx + 1),\n\t\t\t\tslot,\n\t\t\t\tequippedItem,\n\t\t\t\tthis.player.getGems(socketColor).map((gem: Gem) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\titem: gem,\n\t\t\t\t\t\tid: gem.id,\n\t\t\t\t\t\tactionId: ActionId.fromItemId(gem.id),\n\t\t\t\t\t\tname: gem.name,\n\t\t\t\t\t\tquality: gem.quality,\n\t\t\t\t\t\tphase: gem.phase,\n\t\t\t\t\t\theroic: false,\n\t\t\t\t\t\tbaseEP: this.player.computeStatsEP(new Stats(gem.stats)),\n\t\t\t\t\t\tignoreEPFilter: true,\n\t\t\t\t\t\tonEquip: (eventID, gem: Gem) => {\n\t\t\t\t\t\t\tconst equippedItem = this.player.getEquippedItem(slot);\n\t\t\t\t\t\t\tif (equippedItem)\n\t\t\t\t\t\t\t\tthis.player.equipItem(eventID, slot, equippedItem.withGem(gem, socketIdx));\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t\tgem => {\n\t\t\t\t\tlet gemEP = this.player.computeGemEP(gem);\n\t\t\t\t\tif (gemMatchesSocket(gem, socketColor)) {\n\t\t\t\t\t\tgemEP += socketBonusEP;\n\t\t\t\t\t}\n\t\t\t\t\treturn gemEP;\n\t\t\t\t},\n\t\t\t\tequippedItem => equippedItem?.gems[socketIdx],\n\t\t\t\tsocketColor,\n\t\t\t\teventID => {\n\t\t\t\t\tconst equippedItem = this.player.getEquippedItem(slot);\n\t\t\t\t\tif (equippedItem)\n\t\t\t\t\t\tthis.player.equipItem(eventID, slot, equippedItem.withGem(null, socketIdx));\n\t\t\t\t},\n\t\t\t\ttabAnchor => {\n\t\t\t\t\ttabAnchor.classList.add('selector-modal-tab-gem-icon');\n\t\t\t\t\tsetGemSocketCssClass(tabAnchor, socketColor);\n\n\t\t\t\t\tconst updateGemIcon = () => {\n\t\t\t\t\t\tconst equippedItem = this.player.getEquippedItem(slot);\n\t\t\t\t\t\tconst gem = equippedItem?.gems[socketIdx];\n\n\t\t\t\t\t\tif (gem) {\n\t\t\t\t\t\t\tActionId.fromItemId(gem.id).fill().then(filledId => {\n\t\t\t\t\t\t\t\ttabAnchor.style.backgroundImage = `url('${filledId.iconUrl}')`;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst url = getEmptyGemSocketIconUrl(socketColor);\n\t\t\t\t\t\t\ttabAnchor.style.backgroundImage = `url('${url}')`;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.player.gearChangeEmitter.on(updateGemIcon);\n\t\t\t\t\tupdateGemIcon();\n\t\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Adds one of the tabs for the item selector menu.\n\t *\n\t * T is expected to be Item, Enchant, or Gem. Tab menus for all 3 looks extremely\n\t * similar so this function uses extra functions to do it generically.\n\t */\n\tprivate addTab<T>(\n\t\tlabel: string,\n\t\tslot: ItemSlot,\n\t\tequippedItem: EquippedItem | null,\n\t\titemData: Array<ItemData<T>>,\n\t\tcomputeEP: (item: T) => number,\n\t\tequippedToItemFn: (equippedItem: EquippedItem | null) => (T | null | undefined),\n\t\tsocketColor: GemColor,\n\t\tonRemove: (eventID: EventID) => void,\n\t\tsetTabContent?: (tabElem: HTMLAnchorElement) => void) {\n\t\tif (itemData.length == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (slot == ItemSlot.ItemSlotTrinket1 || slot == ItemSlot.ItemSlotTrinket2) {\n\t\t\t// Trinket EP is weird so just sort by ilvl instead.\n\t\t\titemData.sort((dataA, dataB) => (dataB.item as unknown as Item).ilvl - (dataA.item as unknown as Item).ilvl);\n\t\t} else {\n\t\t\titemData.sort((dataA, dataB) => {\n\t\t\t\tconst diff = computeEP(dataB.item) - computeEP(dataA.item);\n\t\t\t\t// if EP is same, sort by ilvl\n\t\t\t\tif (Math.abs(diff) < 0.01) {\n\t\t\t\t\treturn (dataB.item as unknown as Item).ilvl - (dataA.item as unknown as Item).ilvl;\n\t\t\t\t}\n\t\t\t\treturn diff;\n\t\t\t});\n\t\t}\n\n\t\tconst tabElem = document.createElement('li');\n\t\tthis.tabsElem.appendChild(tabElem);\n\t\tconst tabContentId = (label + '-tab').split(' ').join('');\n\t\ttabElem.innerHTML = `<a class=\"selector-modal-item-tab\" data-toggle=\"tab\" href=\"#${tabContentId}\"></a>`;\n\n\t\tconst tabAnchor = tabElem.getElementsByClassName('selector-modal-item-tab')[0] as HTMLAnchorElement;\n\t\ttabAnchor.dataset.label = label;\n\t\tif (setTabContent) {\n\t\t\tsetTabContent(tabAnchor);\n\t\t} else {\n\t\t\ttabAnchor.textContent = label;\n\t\t}\n\n\t\tconst tabContent = document.createElement('div');\n\t\ttabContent.id = tabContentId;\n\t\ttabContent.classList.add('tab-pane', 'fade', 'selector-modal-tab-content');\n\t\tthis.contentElem.appendChild(tabContent);\n\t\ttabContent.innerHTML = `\n    <div class=\"selector-modal-tab-content-header\">\n      <button class=\"selector-modal-remove-button sim-button\">Remove</button>\n      <input class=\"selector-modal-search\" type=\"text\" placeholder=\"Search...\">\n      <div class=\"selector-modal-filter-bar-filler\"></div>\n      <div class=\"sim-input selector-modal-boolean-option selector-modal-show-1h-weapons\"></div>\n      <div class=\"sim-input selector-modal-boolean-option selector-modal-show-2h-weapons\"></div>\n      <div class=\"sim-input selector-modal-boolean-option selector-modal-show-matching-gems\"></div>\n      <div class=\"selector-modal-phase-selector\"></div>\n    </div>\n\t<div style=\"width: 100%;height: 30px;font-size: 18px;\">\n\t\t<span style=\"float:left\">Item</span>\n\t\t<span style=\"float:right\">EP(+/-)<span class=\"ep-help fas fa-search\" style=\"font-size:10px\"></span></span>\n\t</div>\n    <ul class=\"selector-modal-list\"></ul>\n    `;\n\n\t\tconst helpIcon = tabContent.getElementsByClassName(\"ep-help\").item(0);\n\t\ttippy(helpIcon, {'content': 'These values are computed using stat weights which can be edited using the \"Stat Weights\" button.'});\n\t\tconst show1hWeaponsSelector = makeShow1hWeaponsSelector(tabContent.getElementsByClassName('selector-modal-show-1h-weapons')[0] as HTMLElement, this.player.sim);\n\t\tconst show2hWeaponsSelector = makeShow2hWeaponsSelector(tabContent.getElementsByClassName('selector-modal-show-2h-weapons')[0] as HTMLElement, this.player.sim);\n\t\tif (label != 'Items' || slot != ItemSlot.ItemSlotMainHand && this.player.getClass() != Class.ClassWarrior) {\n\t\t\t(tabContent.getElementsByClassName('selector-modal-show-1h-weapons')[0] as HTMLElement).style.display = 'none';\n\t\t\t(tabContent.getElementsByClassName('selector-modal-show-2h-weapons')[0] as HTMLElement).style.display = 'none';\n\t\t}\n\n\t\tconst showMatchingGemsSelector = makeShowMatchingGemsSelector(tabContent.getElementsByClassName('selector-modal-show-matching-gems')[0] as HTMLElement, this.player.sim);\n\t\tif (!label.startsWith('Gem')) {\n\t\t\t(tabContent.getElementsByClassName('selector-modal-show-matching-gems')[0] as HTMLElement).style.display = 'none';\n\t\t}\n\n\t\tconst phaseSelector = makePhaseSelector(tabContent.getElementsByClassName('selector-modal-phase-selector')[0] as HTMLElement, this.player.sim);\n\n\t\tif (label == 'Items') {\n\t\t\ttabElem.classList.add('active', 'in');\n\t\t\ttabContent.classList.add('active', 'in');\n\t\t}\n\n\t\tconst listElem = tabContent.getElementsByClassName('selector-modal-list')[0] as HTMLElement;\n\n\t\tconst listItemElems = itemData.map((itemData, itemIdx) => {\n\t\t\tconst item = itemData.item;\n\t\t\tconst itemEP = computeEP(item);\n\n\t\t\tconst listItemElem = document.createElement('li');\n\t\t\tlistItemElem.classList.add('selector-modal-list-item');\n\t\t\tlistElem.appendChild(listItemElem);\n\n\t\t\tlistItemElem.dataset.idx = String(itemIdx);\n\n\t\t\tlistItemElem.innerHTML = `\n        <a class=\"selector-modal-list-item-icon\"></a>\n        <a class=\"selector-modal-list-item-name\">${itemData.heroic ? itemData.name + \"<span style=\\\"color:green\\\">[H]</span>\" : itemData.name}</a>\n        <div class=\"selector-modal-list-item-padding\"></div>\n        <div class=\"selector-modal-list-item-ep\">\n\t\t\t\t\t<span class=\"selector-modal-list-item-ep-value\">${itemEP < 9.95 ? itemEP.toFixed(1) : Math.round(itemEP)}</span>\n\t\t\t\t\t<span class=\"selector-modal-list-item-ep-delta\"></span>\n\t\t\t\t</div>\n      `;\n\n\t\t\tif (slot == ItemSlot.ItemSlotTrinket1 || slot == ItemSlot.ItemSlotTrinket2) {\n\t\t\t\tconst epElem = listItemElem.getElementsByClassName('selector-modal-list-item-ep')[0] as HTMLElement;\n\t\t\t\tepElem.style.display = 'none';\n\t\t\t}\n\n\t\t\tconst iconElem = listItemElem.getElementsByClassName('selector-modal-list-item-icon')[0] as HTMLImageElement;\n\t\t\titemData.actionId.fill().then(filledId => {\n\t\t\t\tfilledId.setWowheadHref(listItemElem.children[0] as HTMLAnchorElement);\n\t\t\t\tfilledId.setWowheadHref(listItemElem.children[1] as HTMLAnchorElement);\n\t\t\t\ticonElem.style.backgroundImage = `url('${filledId.iconUrl}')`;\n\t\t\t});\n\n\t\t\tconst nameElem = listItemElem.getElementsByClassName('selector-modal-list-item-name')[0] as HTMLImageElement;\n\t\t\tsetItemQualityCssClass(nameElem, itemData.quality);\n\n\t\t\tconst onclick = (event: Event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\titemData.onEquip(TypedEvent.nextEventID(), item);\n\n\t\t\t\t// If the item changes, the gem slots might change, so remove and recreate the gem tabs\n\t\t\t\tif (Item.is(item)) {\n\t\t\t\t\tthis.removeTabs('Gem');\n\t\t\t\t\tthis.addGemTabs(slot, this.player.getEquippedItem(slot));\n\t\t\t\t}\n\t\t\t};\n\t\t\tnameElem.addEventListener('click', onclick);\n\t\t\ticonElem.addEventListener('click', onclick);\n\n\t\t\treturn listItemElem;\n\t\t});\n\n\t\tconst removeButton = tabContent.getElementsByClassName('selector-modal-remove-button')[0] as HTMLButtonElement;\n\t\tremoveButton.addEventListener('click', event => {\n\t\t\tlistItemElems.forEach(elem => elem.classList.remove('active'));\n\t\t\tonRemove(TypedEvent.nextEventID());\n\t\t});\n\n\t\tconst updateSelected = () => {\n\t\t\tconst newEquippedItem = this.player.getEquippedItem(slot);\n\t\t\tconst newItem = equippedToItemFn(newEquippedItem);\n\n\t\t\tconst newItemId = (newItem as any)?.id || null;\n\t\t\tconst newEP = newItem ? computeEP(newItem) : 0;\n\n\t\t\tlistItemElems.forEach(elem => {\n\t\t\t\tconst listItemIdx = parseInt(elem.dataset.idx!);\n\t\t\t\tconst listItemData = itemData[listItemIdx];\n\t\t\t\tconst listItem = listItemData.item;\n\n\t\t\t\telem.classList.remove('active');\n\t\t\t\tif (listItemData.id == newItemId) {\n\t\t\t\t\telem.classList.add('active');\n\t\t\t\t}\n\n\t\t\t\tconst epDeltaElem = elem.getElementsByClassName('selector-modal-list-item-ep-delta')[0] as HTMLSpanElement;\n\t\t\t\tepDeltaElem.textContent = '';\n\t\t\t\tif (listItem) {\n\t\t\t\t\tconst listItemEP = computeEP(listItem);\n\t\t\t\t\tformatDeltaTextElem(epDeltaElem, newEP, listItemEP, 0);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\tupdateSelected();\n\t\tthis.player.gearChangeEmitter.on(updateSelected);\n\n\t\tconst applyFilters = () => {\n\t\t\tlet validItemElems = listItemElems;\n\t\t\tconst currentEquippedItem = this.player.getEquippedItem(slot);\n\n\t\t\tvalidItemElems = validItemElems.filter(elem => {\n\t\t\t\tconst listItemIdx = parseInt(elem.dataset.idx!);\n\t\t\t\tconst listItemData = itemData[listItemIdx];\n\n\t\t\t\tif (label == 'Items') {\n\t\t\t\t\tconst listItem = listItemData.item as unknown as Item;\n\t\t\t\t\tif (!this.player.sim.getShow1hWeapons() && listItem.weaponType != WeaponType.WeaponTypeUnknown && listItem.handType != HandType.HandTypeTwoHand) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (!this.player.sim.getShow2hWeapons() && listItem.weaponType != WeaponType.WeaponTypeUnknown && listItem.handType == HandType.HandTypeTwoHand) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else if (label == 'Enchants') {\n\t\t\t\t\tconst listItem = listItemData.item as unknown as Enchant;\n\t\t\t\t\tif (currentEquippedItem && !enchantAppliesToItem(listItem, currentEquippedItem.item)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else if (label.startsWith('Gem')) {\n\t\t\t\t\tconst listItem = listItemData.item as unknown as Gem;\n\t\t\t\t\tif (this.player.sim.getShowMatchingGems() && !gemMatchesSocket(listItem, socketColor)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (listItemData.phase > this.player.sim.getPhase()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (searchInput.value.length > 0) {\n\t\t\t\t\tconst searchQuery = searchInput.value.toLowerCase().split(\" \");\n\t\t\t\t\tconst name = listItemData.name.toLowerCase();\n\n\t\t\t\t\tvar include = true;\n\t\t\t\t\tsearchQuery.forEach(v => {\n\t\t\t\t\t\tif (!name.includes(v))\n\t\t\t\t\t\t\tinclude = false;\n\t\t\t\t\t});\n\t\t\t\t\tif (!include) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\n\t\t\tlet numShown = 0;\n\t\t\tlistItemElems.forEach(elem => {\n\t\t\t\tif (validItemElems.includes(elem)) {\n\t\t\t\t\telem.classList.remove('hidden');\n\t\t\t\t\tnumShown++;\n\t\t\t\t\tif (numShown % 2 == 0) {\n\t\t\t\t\t\telem.classList.remove('odd');\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem.classList.add('odd');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\telem.classList.add('hidden');\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tconst searchInput = tabContent.getElementsByClassName('selector-modal-search')[0] as HTMLInputElement;\n\t\tsearchInput.addEventListener('input', applyFilters);\n\t\tsearchInput.addEventListener(\"keyup\", ev => {\n\t\t\tif (ev.key == \"Enter\") {\n\t\t\t\tlistItemElems.find(ele => {\n\t\t\t\t\tif (ele.classList.contains(\"hidden\")) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tconst nameElem = ele.getElementsByClassName('selector-modal-list-item-name')[0] as HTMLElement;\n\t\t\t\t\tnameElem.click();\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tthis.player.sim.phaseChangeEmitter.on(() => {\n\t\t\tapplyFilters();\n\t\t});\n\t\tTypedEvent.onAny([\n\t\t\tthis.player.sim.show1hWeaponsChangeEmitter,\n\t\t\tthis.player.sim.show2hWeaponsChangeEmitter,\n\t\t\tthis.player.sim.showMatchingGemsChangeEmitter,\n\t\t]).on(() => {\n\t\t\tapplyFilters();\n\t\t});\n\t\tthis.player.gearChangeEmitter.on(() => {\n\t\t\tapplyFilters();\n\t\t\tupdateSelected();\n\t\t});\n\n\t\tapplyFilters();\n\t}\n\n\tprivate removeTabs(labelSubstring: string) {\n\t\tconst tabElems = Array.prototype.slice.call(this.tabsElem.getElementsByClassName('selector-modal-item-tab'))\n\t\t\t.filter(tab => tab.dataset.label.includes(labelSubstring));\n\n\t\tconst contentElems = tabElems\n\t\t\t.map(tabElem => document.getElementById(tabElem.getAttribute('href').substring(1)))\n\t\t\t.filter(tabElem => Boolean(tabElem));\n\n\t\ttabElems.forEach(elem => elem.parentElement.remove());\n\t\tcontentElems.forEach(elem => elem!.remove());\n\t}\n}\n\ninterface ItemData<T> {\n\titem: T,\n\tname: string,\n\tid: number,\n\tactionId: ActionId,\n\tquality: ItemQuality,\n\tphase: number,\n\tbaseEP: number,\n\tignoreEPFilter: boolean,\n\theroic: boolean,\n\tonEquip: (eventID: EventID, item: T) => void,\n}\n\nconst emptySlotIcons: Record<ItemSlot, string> = {\n\t[ItemSlot.ItemSlotHead]: 'https://cdn.seventyupgrades.com/item-slots/Head.jpg',\n\t[ItemSlot.ItemSlotNeck]: 'https://cdn.seventyupgrades.com/item-slots/Neck.jpg',\n\t[ItemSlot.ItemSlotShoulder]: 'https://cdn.seventyupgrades.com/item-slots/Shoulders.jpg',\n\t[ItemSlot.ItemSlotBack]: 'https://cdn.seventyupgrades.com/item-slots/Back.jpg',\n\t[ItemSlot.ItemSlotChest]: 'https://cdn.seventyupgrades.com/item-slots/Chest.jpg',\n\t[ItemSlot.ItemSlotWrist]: 'https://cdn.seventyupgrades.com/item-slots/Wrists.jpg',\n\t[ItemSlot.ItemSlotHands]: 'https://cdn.seventyupgrades.com/item-slots/Hands.jpg',\n\t[ItemSlot.ItemSlotWaist]: 'https://cdn.seventyupgrades.com/item-slots/Waist.jpg',\n\t[ItemSlot.ItemSlotLegs]: 'https://cdn.seventyupgrades.com/item-slots/Legs.jpg',\n\t[ItemSlot.ItemSlotFeet]: 'https://cdn.seventyupgrades.com/item-slots/Feet.jpg',\n\t[ItemSlot.ItemSlotFinger1]: 'https://cdn.seventyupgrades.com/item-slots/Finger.jpg',\n\t[ItemSlot.ItemSlotFinger2]: 'https://cdn.seventyupgrades.com/item-slots/Finger.jpg',\n\t[ItemSlot.ItemSlotTrinket1]: 'https://cdn.seventyupgrades.com/item-slots/Trinket.jpg',\n\t[ItemSlot.ItemSlotTrinket2]: 'https://cdn.seventyupgrades.com/item-slots/Trinket.jpg',\n\t[ItemSlot.ItemSlotMainHand]: 'https://cdn.seventyupgrades.com/item-slots/MainHand.jpg',\n\t[ItemSlot.ItemSlotOffHand]: 'https://cdn.seventyupgrades.com/item-slots/OffHand.jpg',\n\t[ItemSlot.ItemSlotRanged]: 'https://cdn.seventyupgrades.com/item-slots/Ranged.jpg',\n};\nexport function getEmptySlotIconUrl(slot: ItemSlot): string {\n\treturn emptySlotIcons[slot];\n}\n","import { Spec } from '../proto/common.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Component } from '../components/component.js';\n\ndeclare var tippy: any;\n\nexport type SavedDataManagerConfig<ModObject, T> = {\n\tlabel: string;\n\tpresetsOnly?: boolean;\n\tstorageKey: string;\n\tchangeEmitters: Array<TypedEvent<any>>,\n\tequals: (a: T, b: T) => boolean;\n\tgetData: (modObject: ModObject) => T;\n\tsetData: (eventID: EventID, modObject: ModObject, data: T) => void;\n\ttoJson: (a: T) => any;\n\tfromJson: (obj: any) => T;\n};\n\nexport type SavedDataConfig<ModObject, T> = {\n\tname: string;\n\tdata: T;\n\ttooltip?: string;\n\tisPreset?: boolean;\n\n\t// If set, will automatically hide the saved data when this evaluates to false.\n\tenableWhen?: (obj: ModObject) => boolean;\n};\n\ntype SavedData<ModObject, T> = {\n\tname: string;\n\tdata: T;\n\telem: HTMLElement;\n\tenableWhen?: (obj: ModObject) => boolean;\n};\n\nexport class SavedDataManager<ModObject, T> extends Component {\n\tprivate readonly modObject: ModObject;\n\tprivate readonly config: SavedDataManagerConfig<ModObject, T>;\n\n\tprivate readonly userData: Array<SavedData<ModObject, T>>;\n\tprivate readonly presets: Array<SavedData<ModObject, T>>;\n\n\tprivate readonly savedDataDiv: HTMLElement;\n\tprivate readonly saveInput: HTMLInputElement;\n\tprivate frozen: boolean;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: SavedDataManagerConfig<ModObject, T>) {\n\t\tsuper(parent, 'saved-data-manager-root');\n\t\tthis.modObject = modObject;\n\t\tthis.config = config;\n\n\t\tthis.userData = [];\n\t\tthis.presets = [];\n\t\tthis.frozen = false;\n\n\t\tthis.rootElem.innerHTML = `\n    <div class=\"saved-data-container\">\n    </div>\n    <div class=\"saved-data-create-container presets-only-hide\">\n      <input class=\"saved-data-save-input\" type=\"text\" placeholder=\"Label\">\n      <button class=\"saved-data-save-button sim-button\">SAVE CURRENT ${config.label.toUpperCase()}</button>\n    </div>\n    `;\n\n\t\tif (config.presetsOnly) {\n\t\t\tthis.rootElem.classList.add('presets-only');\n\t\t}\n\n\t\tthis.savedDataDiv = this.rootElem.getElementsByClassName('saved-data-container')[0] as HTMLElement;\n\n\t\tthis.saveInput = this.rootElem.getElementsByClassName('saved-data-save-input')[0] as HTMLInputElement;\n\t\tconst saveButton = this.rootElem.getElementsByClassName('saved-data-save-button')[0] as HTMLButtonElement;\n\t\tsaveButton.addEventListener('click', event => {\n\t\t\tif (this.frozen)\n\t\t\t\treturn;\n\n\t\t\tconst newName = this.saveInput.value;\n\t\t\tif (!newName) {\n\t\t\t\talert(`Choose a label for your saved ${config.label}!`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (newName in this.presets) {\n\t\t\t\talert(`${config.label} with name ${newName} already exists.`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.addSavedData({\n\t\t\t\tname: newName,\n\t\t\t\tdata: config.getData(this.modObject),\n\t\t\t});\n\t\t\tthis.saveUserData();\n\t\t});\n\t}\n\n\taddSavedData(config: SavedDataConfig<ModObject, T>) {\n\t\tconst newData = this.makeSavedData(config);\n\n\t\tconst dataArr = config.isPreset ? this.presets : this.userData;\n\n\t\tconst oldIdx = dataArr.findIndex(data => data.name == config.name);\n\t\tif (oldIdx == -1) {\n\t\t\tif (config.isPreset || this.presets.length == 0) {\n\t\t\t\tthis.savedDataDiv.appendChild(newData.elem);\n\t\t\t} else {\n\t\t\t\tthis.savedDataDiv.insertBefore(newData.elem, this.presets[0].elem);\n\t\t\t}\n\t\t\tdataArr.push(newData);\n\t\t} else {\n\t\t\tthis.savedDataDiv.replaceChild(newData.elem, dataArr[oldIdx].elem);\n\t\t\tdataArr[oldIdx] = newData;\n\t\t}\n\t}\n\n\tprivate makeSavedData(config: SavedDataConfig<ModObject, T>): SavedData<ModObject, T> {\n\t\tconst dataElem = document.createElement('div');\n\t\tdataElem.classList.add('saved-data-set-chip');\n\t\tdataElem.innerHTML = `\n    <span class=\"saved-data-set-name\">${config.name}</span>\n    <span class=\"saved-data-set-tooltip fa fa-info-circle\"></span>\n    <span class=\"saved-data-set-delete fa fa-times\"></span>\n    `;\n\n\t\tdataElem.addEventListener('click', event => {\n\t\t\tthis.config.setData(TypedEvent.nextEventID(), this.modObject, config.data);\n\t\t\tthis.saveInput.value = config.name;\n\t\t});\n\n\t\tif (config.isPreset) {\n\t\t\tdataElem.classList.add('saved-data-preset');\n\t\t} else {\n\t\t\tconst deleteButton = dataElem.getElementsByClassName('saved-data-set-delete')[0] as HTMLElement;\n\t\t\tdeleteButton.addEventListener('click', event => {\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tconst shouldDelete = confirm(`Delete saved ${this.config.label} '${config.name}'?`);\n\t\t\t\tif (!shouldDelete)\n\t\t\t\t\treturn;\n\n\t\t\t\tconst idx = this.userData.findIndex(data => data.name == config.name);\n\t\t\t\tthis.userData[idx].elem.remove();\n\t\t\t\tthis.userData.splice(idx, 1);\n\t\t\t\tthis.saveUserData();\n\t\t\t});\n\t\t}\n\n\t\tif (config.tooltip) {\n\t\t\tdataElem.classList.add('saved-data-has-tooltip');\n\t\t\ttippy(dataElem.getElementsByClassName('saved-data-set-tooltip')[0], {\n\t\t\t\t'content': config.tooltip,\n\t\t\t\t'allowHTML': true,\n\t\t\t});\n\t\t}\n\n\t\tconst checkActive = () => {\n\t\t\tif (this.config.equals(config.data, this.config.getData(this.modObject))) {\n\t\t\t\tdataElem.classList.add('active');\n\t\t\t} else {\n\t\t\t\tdataElem.classList.remove('active');\n\t\t\t}\n\n\t\t\tif (config.enableWhen && !config.enableWhen(this.modObject)) {\n\t\t\t\tdataElem.classList.add('disabled');\n\t\t\t} else {\n\t\t\t\tdataElem.classList.remove('disabled');\n\t\t\t}\n\t\t};\n\n\t\tcheckActive();\n\t\tthis.config.changeEmitters.forEach(emitter => emitter.on(checkActive));\n\n\t\treturn {\n\t\t\tname: config.name,\n\t\t\tdata: config.data,\n\t\t\telem: dataElem,\n\t\t\tenableWhen: config.enableWhen,\n\t\t};\n\t}\n\n\t// Save data to window.localStorage.\n\tprivate saveUserData() {\n\t\tconst userData: Record<string, Object> = {};\n\t\tthis.userData.forEach(savedData => {\n\t\t\tuserData[savedData.name] = this.config.toJson(savedData.data);\n\t\t});\n\n\t\twindow.localStorage.setItem(this.config.storageKey, JSON.stringify(userData));\n\t}\n\n\t// Load data from window.localStorage.\n\tloadUserData() {\n\t\tconst dataStr = window.localStorage.getItem(this.config.storageKey);\n\t\tif (!dataStr)\n\t\t\treturn;\n\n\t\tlet jsonData;\n\t\ttry {\n\t\t\tjsonData = JSON.parse(dataStr);\n\t\t} catch (e) {\n\t\t\tconsole.warn('Invalid json for local storage value: ' + dataStr);\n\t\t}\n\n\t\tfor (let name in jsonData) {\n\t\t\ttry {\n\t\t\t\tthis.addSavedData({\n\t\t\t\t\tname: name,\n\t\t\t\t\tdata: this.config.fromJson(jsonData[name]),\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tconsole.warn('Failed parsing saved data: ' + jsonData[name]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Prevent user input from creating / deleting saved data.\n\tfreeze() {\n\t\tthis.frozen = true;\n\t\tthis.rootElem.classList.add('frozen');\n\t}\n}\n","import { ActionId } from '../proto_utils/action_id.js';\nimport { CustomRotation } from '../proto/common.js';\nimport { Spec } from '../proto/common.js';\nimport { TristateEffect } from '../proto/common.js';\nimport { Party } from '../party.js';\nimport { Player } from '../player.js';\nimport { Raid } from '../raid.js';\nimport { Sim } from '../sim.js';\nimport { Target } from '../target.js';\nimport { Encounter } from '../encounter.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { SpecOptions, SpecRotation } from '../proto_utils/utils.js';\n\nimport { CustomRotationPickerConfig } from './custom_rotation_picker.js';\nimport { IconPickerConfig } from './icon_picker.js';\nimport { IconEnumPicker, IconEnumPickerConfig, IconEnumValueConfig } from './icon_enum_picker.js';\nimport { EnumPickerConfig, EnumValueConfig } from './enum_picker.js';\nimport { BooleanPickerConfig } from './boolean_picker.js';\nimport { NumberPickerConfig } from './number_picker.js';\nimport { MultiIconPickerConfig } from './multi_icon_picker.js';\n\nexport function makeMultiIconInput<ModObject>(inputs: Array<IconPickerConfig<ModObject, any>>, label: string, numColumns?: number): MultiIconPickerConfig<ModObject> {\n\treturn {\n\t\tinputs: inputs,\n\t\tnumColumns: numColumns || 1,\n\t\temptyColor: 'grey',\n\t\tlabel: label,\n\t};\n}\n\n// Extend this to add player callbacks as optional config fields.\ninterface BasePlayerConfig<SpecType extends Spec, T> {\n\tgetValue?: (player: Player<SpecType>) => T,\n\tsetValue?: (eventID: EventID, player: Player<SpecType>, newVal: T) => void,\n\tchangeEmitter?: (player: Player<SpecType>) => TypedEvent<any>,\n\textraCssClasses?: Array<string>,\n}\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                    BOOLEAN\n/////////////////////////////////////////////////////////////////////////////////\nexport interface TypedBooleanPickerConfig<ModObject> extends BooleanPickerConfig<ModObject> {\n\ttype: 'boolean',\n}\n\ninterface WrappedBooleanInputConfig<SpecType extends Spec, ModObject> extends BooleanPickerConfig<ModObject> {\n\tgetModObject: (player: Player<SpecType>) => ModObject,\n}\nfunction makeWrappedBooleanInput<SpecType extends Spec, ModObject>(config: WrappedBooleanInputConfig<SpecType, ModObject>): TypedBooleanPickerConfig<Player<SpecType>> {\n\tconst getModObject = config.getModObject;\n\treturn {\n\t\ttype: 'boolean',\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tchangedEvent: (player: Player<SpecType>) => config.changedEvent(getModObject(player)),\n\t\tgetValue: (player: Player<SpecType>) => config.getValue(getModObject(player)),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: boolean) => config.setValue(eventID, getModObject(player), newValue),\n\t\tenableWhen: config.enableWhen ? (player: Player<SpecType>) => config.enableWhen!(getModObject(player)) : undefined,\n\t\tshowWhen: config.showWhen ? (player: Player<SpecType>) => config.showWhen!(getModObject(player)) : undefined,\n\t}\n}\nexport interface PlayerBooleanInputConfig<SpecType extends Spec, Message> extends BasePlayerConfig<SpecType, boolean> {\n\tfieldName: keyof Message,\n\tlabel: string,\n\tlabelTooltip?: string,\n\tenableWhen?: (player: Player<SpecType>) => boolean,\n\tshowWhen?: (player: Player<SpecType>) => boolean,\n}\nexport function makeSpecOptionsBooleanInput<SpecType extends Spec>(config: PlayerBooleanInputConfig<SpecType, SpecOptions<SpecType>>): TypedBooleanPickerConfig<Player<SpecType>> {\n\treturn makeWrappedBooleanInput<SpecType, Player<SpecType>>({\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getSpecOptions()[config.fieldName] as unknown as boolean),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: boolean) => {\n\t\t\tconst newMessage = player.getSpecOptions();\n\t\t\t(newMessage[config.fieldName] as unknown as boolean) = newVal;\n\t\t\tplayer.setSpecOptions(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.specOptionsChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t\textraCssClasses: config.extraCssClasses,\n\t});\n}\nexport function makeRotationBooleanInput<SpecType extends Spec>(config: PlayerBooleanInputConfig<SpecType, SpecRotation<SpecType>>): TypedBooleanPickerConfig<Player<SpecType>> {\n\treturn makeWrappedBooleanInput<SpecType, Player<SpecType>>({\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getRotation()[config.fieldName] as unknown as boolean),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: boolean) => {\n\t\t\tconst newMessage = player.getRotation();\n\t\t\t(newMessage[config.fieldName] as unknown as boolean) = newVal;\n\t\t\tplayer.setRotation(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.rotationChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t\textraCssClasses: config.extraCssClasses,\n\t});\n}\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                    NUMBER\n/////////////////////////////////////////////////////////////////////////////////\nexport interface TypedNumberPickerConfig<ModObject> extends NumberPickerConfig<ModObject> {\n\ttype: 'number',\n}\n\ninterface WrappedNumberInputConfig<SpecType extends Spec, ModObject> extends NumberPickerConfig<ModObject> {\n\tgetModObject: (player: Player<SpecType>) => ModObject,\n}\nfunction makeWrappedNumberInput<SpecType extends Spec, ModObject>(config: WrappedNumberInputConfig<SpecType, ModObject>): TypedNumberPickerConfig<Player<SpecType>> {\n\tconst getModObject = config.getModObject;\n\treturn {\n\t\ttype: 'number',\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tfloat: config.float,\n\t\tpositive: config.positive,\n\t\tchangedEvent: (player: Player<SpecType>) => config.changedEvent(getModObject(player)),\n\t\tgetValue: (player: Player<SpecType>) => config.getValue(getModObject(player)),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: number) => config.setValue(eventID, getModObject(player), newValue),\n\t\tenableWhen: config.enableWhen ? (player: Player<SpecType>) => config.enableWhen!(getModObject(player)) : undefined,\n\t\tshowWhen: config.showWhen ? (player: Player<SpecType>) => config.showWhen!(getModObject(player)) : undefined,\n\t}\n}\nexport interface PlayerNumberInputConfig<SpecType extends Spec, Message> extends BasePlayerConfig<SpecType, number> {\n\tfieldName: keyof Message,\n\tlabel: string,\n\tlabelTooltip?: string,\n\tpercent?: boolean,\n\tfloat?: boolean,\n\tpositive?: boolean,\n\tenableWhen?: (player: Player<SpecType>) => boolean,\n\tshowWhen?: (player: Player<SpecType>) => boolean,\n\tchangeEmitter?: (player: Player<SpecType>) => TypedEvent<any>,\n}\nexport function makeSpecOptionsNumberInput<SpecType extends Spec>(config: PlayerNumberInputConfig<SpecType, SpecOptions<SpecType>>): TypedNumberPickerConfig<Player<SpecType>> {\n\tconst internalConfig = {\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tfloat: config.float,\n\t\tpositive: config.positive,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getSpecOptions()[config.fieldName] as unknown as number),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: number) => {\n\t\t\tconst newMessage = player.getSpecOptions();\n\t\t\t(newMessage[config.fieldName] as unknown as number) = newVal;\n\t\t\tplayer.setSpecOptions(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.specOptionsChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t\textraCssClasses: config.extraCssClasses,\n\t};\n\tif (config.percent) {\n\t\tconst getValue = internalConfig.getValue;\n\t\tinternalConfig.getValue = (player: Player<SpecType>) => getValue(player) * 100;\n\t\tconst setValue = internalConfig.setValue;\n\t\tinternalConfig.setValue = (eventID: EventID, player: Player<SpecType>, newVal: number) => setValue(eventID, player, newVal / 100);\n\t}\n\treturn makeWrappedNumberInput<SpecType, Player<SpecType>>(internalConfig);\n}\nexport function makeRotationNumberInput<SpecType extends Spec>(config: PlayerNumberInputConfig<SpecType, SpecRotation<SpecType>>): TypedNumberPickerConfig<Player<SpecType>> {\n\tconst internalConfig = {\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tfloat: config.float,\n\t\tpositive: config.positive,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getRotation()[config.fieldName] as unknown as number),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: number) => {\n\t\t\tconst newMessage = player.getRotation();\n\t\t\t(newMessage[config.fieldName] as unknown as number) = newVal;\n\t\t\tplayer.setRotation(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.rotationChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t\textraCssClasses: config.extraCssClasses,\n\t};\n\tif (config.percent) {\n\t\tconst getValue = internalConfig.getValue;\n\t\tinternalConfig.getValue = (player: Player<SpecType>) => getValue(player) * 100;\n\t\tconst setValue = internalConfig.setValue;\n\t\tinternalConfig.setValue = (eventID: EventID, player: Player<SpecType>, newVal: number) => setValue(eventID, player, newVal / 100);\n\t}\n\treturn makeWrappedNumberInput<SpecType, Player<SpecType>>(internalConfig);\n}\n\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                    ENUM\n/////////////////////////////////////////////////////////////////////////////////\nexport interface TypedEnumPickerConfig<ModObject> extends EnumPickerConfig<ModObject> {\n\ttype: 'enum',\n}\n\ninterface WrappedEnumInputConfig<SpecType extends Spec, ModObject> extends EnumPickerConfig<ModObject> {\n\tgetModObject: (player: Player<SpecType>) => ModObject,\n}\nfunction makeWrappedEnumInput<SpecType extends Spec, ModObject>(config: WrappedEnumInputConfig<SpecType, ModObject>): TypedEnumPickerConfig<Player<SpecType>> {\n\tconst getModObject = config.getModObject;\n\treturn {\n\t\ttype: 'enum',\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tvalues: config.values,\n\t\tchangedEvent: (player: Player<SpecType>) => config.changedEvent(getModObject(player)),\n\t\tgetValue: (player: Player<SpecType>) => config.getValue(getModObject(player)),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: number) => config.setValue(eventID, getModObject(player), newValue),\n\t\tenableWhen: config.enableWhen ? (player: Player<SpecType>) => config.enableWhen!(getModObject(player)) : undefined,\n\t\tshowWhen: config.showWhen ? (player: Player<SpecType>) => config.showWhen!(getModObject(player)) : undefined,\n\t}\n}\n\nexport interface PlayerEnumInputConfig<SpecType extends Spec, Message> {\n\tfieldName: keyof Message,\n\tlabel: string,\n\tlabelTooltip?: string,\n\tvalues: Array<EnumValueConfig>;\n\tgetValue?: (player: Player<SpecType>) => number,\n\tsetValue?: (eventID: EventID, player: Player<SpecType>, newValue: number) => void,\n\tenableWhen?: (player: Player<SpecType>) => boolean,\n\tshowWhen?: (player: Player<SpecType>) => boolean,\n\tchangeEmitter?: (player: Player<SpecType>) => TypedEvent<any>,\n}\n// T is unused, but kept to have the same interface as the icon enum inputs.\nexport function makeSpecOptionsEnumInput<SpecType extends Spec, T>(config: PlayerEnumInputConfig<SpecType, SpecOptions<SpecType>>): TypedEnumPickerConfig<Player<SpecType>> {\n\treturn makeWrappedEnumInput<SpecType, Player<SpecType>>({\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tvalues: config.values,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getSpecOptions()[config.fieldName] as unknown as number),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: number) => {\n\t\t\tconst newMessage = player.getSpecOptions();\n\t\t\t(newMessage[config.fieldName] as unknown as number) = newVal;\n\t\t\tplayer.setSpecOptions(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.specOptionsChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t});\n}\n// T is unused, but kept to have the same interface as the icon enum inputs.\nexport function makeRotationEnumInput<SpecType extends Spec, T>(config: PlayerEnumInputConfig<SpecType, SpecRotation<SpecType>>): TypedEnumPickerConfig<Player<SpecType>> {\n\treturn makeWrappedEnumInput<SpecType, Player<SpecType>>({\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tvalues: config.values,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getRotation()[config.fieldName] as unknown as number),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: number) => {\n\t\t\tconst newMessage = player.getRotation();\n\t\t\t(newMessage[config.fieldName] as unknown as number) = newVal;\n\t\t\tplayer.setRotation(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.rotationChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t});\n}\n\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                  ICON\n/////////////////////////////////////////////////////////////////////////////////\nexport interface TypedIconPickerConfig<ModObject, T> extends IconPickerConfig<ModObject, T> {\n\ttype: 'icon',\n}\n\ninterface WrappedIconInputConfig<SpecType extends Spec, ModObject, T> extends IconPickerConfig<ModObject, T> {\n\tgetModObject: (player: Player<SpecType>) => ModObject,\n}\nfunction makeWrappedIconInput<SpecType extends Spec, ModObject, T>(config: WrappedIconInputConfig<SpecType, ModObject, T>): TypedIconPickerConfig<Player<SpecType>, T> {\n\tconst getModObject = config.getModObject;\n\treturn {\n\t\ttype: 'icon',\n\t\tid: config.id,\n\t\tstates: config.states,\n\t\tchangedEvent: (player: Player<SpecType>) => config.changedEvent(getModObject(player)),\n\t\tgetValue: (player: Player<SpecType>) => config.getValue(getModObject(player)),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: T) => config.setValue(eventID, getModObject(player), newValue),\n\t\textraCssClasses: config.extraCssClasses,\n\t}\n}\n\ninterface WrappedTypedInputConfig<Message, ModObject, T> {\n\tgetModObject: (player: Player<any>) => ModObject,\n\tgetValue: (modObj: ModObject) => Message,\n\tsetValue: (eventID: EventID, modObj: ModObject, messageVal: Message) => void,\n\tchangeEmitter: (modObj: ModObject) => TypedEvent<any>,\n\textraCssClasses?: Array<string>,\n\n\tgetFieldValue?: (modObj: ModObject) => T,\n\tsetFieldValue?: (eventID: EventID, modObj: ModObject, newValue: T) => void,\n}\n\nexport function makeBooleanIconInput<SpecType extends Spec, Message, ModObject>(config: WrappedTypedInputConfig<Message, ModObject, boolean>, id: ActionId, fieldName: keyof Message, value?: number): TypedIconPickerConfig<Player<SpecType>, boolean> {\n\treturn makeWrappedIconInput<SpecType, ModObject, boolean>({\n\t\tgetModObject: config.getModObject,\n\t\tid: id,\n\t\tstates: 2,\n\t\tchangedEvent: config.changeEmitter,\n\t\tgetValue: config.getFieldValue || ((modObj: ModObject) => value ? (config.getValue(modObj)[fieldName] as unknown as number) == value : (config.getValue(modObj)[fieldName] as unknown as boolean)),\n\t\tsetValue: config.setFieldValue || ((eventID: EventID, modObj: ModObject, newValue: boolean) => {\n\t\t\tconst newMessage = config.getValue(modObj);\n\t\t\tif (value) {\n\t\t\t\tif (newValue) {\n\t\t\t\t\t(newMessage[fieldName] as unknown as number) = value;\n\t\t\t\t} else if ((newMessage[fieldName] as unknown as number) == value) {\n\t\t\t\t\t(newMessage[fieldName] as unknown as number) = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t(newMessage[fieldName] as unknown as boolean) = newValue;\n\t\t\t}\n\t\t\tconfig.setValue(eventID, modObj, newMessage);\n\t\t}),\n\t\textraCssClasses: config.extraCssClasses,\n\t});\n}\n\nexport interface PlayerBooleanIconInputConfig<SpecType extends Spec, Message, T> extends BasePlayerConfig<SpecType, T> {\n\tfieldName: keyof Message,\n\tid: ActionId,\n\tvalue?: number,\n}\nexport function makeSpecOptionsBooleanIconInput<SpecType extends Spec>(config: PlayerBooleanIconInputConfig<SpecType, SpecOptions<SpecType>, boolean>): TypedIconPickerConfig<Player<SpecType>, boolean> {\n\treturn makeBooleanIconInput<SpecType, SpecOptions<SpecType>, Player<SpecType>>({\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: (player: Player<SpecType>) => player.getSpecOptions(),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newVal: SpecOptions<SpecType>) => player.setSpecOptions(eventID, newVal),\n\t\tchangeEmitter: config.changeEmitter || ((player: Player<SpecType>) => player.specOptionsChangeEmitter),\n\t\textraCssClasses: config.extraCssClasses,\n\t\tgetFieldValue: config.getValue,\n\t\tsetFieldValue: config.setValue,\n\t}, config.id, config.fieldName, config.value);\n}\n\nfunction makeNumberIconInput<SpecType extends Spec, Message, ModObject>(config: WrappedTypedInputConfig<Message, ModObject, number>, id: ActionId, fieldName: keyof Message, multiplier?: number): TypedIconPickerConfig<Player<SpecType>, number> {\n\treturn makeWrappedIconInput<SpecType, ModObject, number>({\n\t\tgetModObject: config.getModObject,\n\t\tid: id,\n\t\tstates: 0, // Must be assigned externally.\n\t\tchangedEvent: config.changeEmitter,\n\t\tgetValue: (modObj: ModObject) => config.getValue(modObj)[fieldName] as unknown as number,\n\t\tsetValue: (eventID: EventID, modObj: ModObject, newValue: number) => {\n\t\t\tconst newMessage = config.getValue(modObj);\n\t\t\tif (multiplier) {\n\t\t\t\tconst sign = newValue - (newMessage[fieldName] as unknown as number)\n\t\t\t\tnewValue += (multiplier - 1) * sign\n\t\t\t}\n\t\t\tif (newValue < 0) {\n\t\t\t\tnewValue = 0\n\t\t\t}\n\t\t\t(newMessage[fieldName] as unknown as number) = newValue;\n\t\t\tconfig.setValue(eventID, modObj, newMessage);\n\t\t},\n\t});\n}\nexport function makeTristateIconInput<SpecType extends Spec, Message, ModObject>(config: WrappedTypedInputConfig<Message, ModObject, number>, id: ActionId, impId: ActionId, fieldName: keyof Message): TypedIconPickerConfig<Player<SpecType>, number> {\n\tconst input = makeNumberIconInput(config, id, fieldName);\n\tinput.states = 3;\n\tinput.improvedId = impId;\n\treturn input;\n}\nexport function makeQuadstateIconInput<SpecType extends Spec, Message, ModObject>(config: WrappedTypedInputConfig<Message, ModObject, number>, id: ActionId, impId: ActionId, impId2: ActionId, fieldName: keyof Message): TypedIconPickerConfig<Player<SpecType>, number> {\n\tconst input = makeNumberIconInput(config, id, fieldName);\n\tinput.states = 4;\n\tinput.improvedId = impId;\n\tinput.improvedId2 = impId2;\n\treturn input;\n}\nexport function makeMultistateIconInput<SpecType extends Spec, Message, ModObject>(config: WrappedTypedInputConfig<Message, ModObject, number>, id: ActionId, numStates: number, fieldName: keyof Message, multiplier?: number): TypedIconPickerConfig<Player<SpecType>, number> {\n\tconst input = makeNumberIconInput(config, id, fieldName, multiplier);\n\tinput.states = numStates;\n\treturn input;\n}\n\n\nexport interface TypedIconEnumPickerConfig<ModObject, T> extends IconEnumPickerConfig<ModObject, T> {\n\ttype: 'iconEnum',\n}\n\ninterface WrappedEnumIconInputConfig<SpecType extends Spec, ModObject, T> extends IconEnumPickerConfig<ModObject, T> {\n\tgetModObject: (player: Player<SpecType>) => ModObject,\n}\nfunction makeWrappedEnumIconInput<SpecType extends Spec, ModObject, T>(config: WrappedEnumIconInputConfig<SpecType, ModObject, T>): TypedIconEnumPickerConfig<Player<SpecType>, T> {\n\tconst getModObject = config.getModObject;\n\treturn {\n\t\ttype: 'iconEnum',\n\t\tnumColumns: config.numColumns,\n\t\tvalues: config.values.map(value => {\n\t\t\tif (value.showWhen) {\n\t\t\t\tconst showWhen = value.showWhen;\n\t\t\t\tvalue.showWhen = ((player: Player<SpecType>) => showWhen(getModObject(player))) as any;\n\t\t\t}\n\t\t\treturn value as unknown as IconEnumValueConfig<Player<SpecType>, T>;\n\t\t}),\n\t\tequals: config.equals,\n\t\tzeroValue: config.zeroValue,\n\t\tchangedEvent: (player: Player<SpecType>) => config.changedEvent(getModObject(player)),\n\t\tgetValue: (player: Player<SpecType>) => config.getValue(getModObject(player)),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: T) => config.setValue(eventID, getModObject(player), newValue),\n\t\textraCssClasses: config.extraCssClasses,\n\t}\n}\n\nexport interface PlayerEnumIconInputConfig<SpecType extends Spec, Message, T> extends BasePlayerConfig<SpecType, T> {\n\tfieldName: keyof Message,\n\tvalues: Array<IconEnumValueConfig<Player<SpecType>, T>>;\n\tnumColumns?: number,\n}\nexport function makeSpecOptionsEnumIconInput<SpecType extends Spec, T>(config: PlayerEnumIconInputConfig<SpecType, SpecOptions<SpecType>, T>): TypedIconEnumPickerConfig<Player<SpecType>, T> {\n\treturn makeWrappedEnumIconInput<SpecType, Player<SpecType>, T>({\n\t\tnumColumns: config.numColumns || 1,\n\t\tvalues: config.values,\n\t\tequals: (a: T, b: T) => a == b,\n\t\tzeroValue: 0 as unknown as T,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getSpecOptions()[config.fieldName] as unknown as T),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: T) => {\n\t\t\tconst newMessage = player.getSpecOptions();\n\t\t\t(newMessage[config.fieldName] as unknown as T) = newVal;\n\t\t\tplayer.setSpecOptions(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.specOptionsChangeEmitter),\n\t\textraCssClasses: config.extraCssClasses,\n\t});\n}\nexport function makeRotationEnumIconInput<SpecType extends Spec, T>(config: PlayerEnumIconInputConfig<SpecType, SpecRotation<SpecType>, T>): TypedIconEnumPickerConfig<Player<SpecType>, T> {\n\treturn makeWrappedEnumIconInput<SpecType, Player<SpecType>, T>({\n\t\tnumColumns: config.numColumns || 1,\n\t\tvalues: config.values,\n\t\tequals: (a: T, b: T) => a == b,\n\t\tzeroValue: 0 as unknown as T,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getRotation()[config.fieldName] as unknown as T),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: T) => {\n\t\t\tconst newMessage = player.getRotation();\n\t\t\t(newMessage[config.fieldName] as unknown as T) = newVal;\n\t\t\tplayer.setRotation(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.rotationChangeEmitter),\n\t\textraCssClasses: config.extraCssClasses,\n\t});\n}\n\nexport interface TypedCustomRotationPickerConfig<SpecType extends Spec, T> extends CustomRotationPickerConfig<SpecType, T> {\n\ttype: 'customRotation',\n}\n\ninterface WrappedCustomRotationInputConfig<SpecType extends Spec, T> {\n\tfieldName: keyof SpecRotation<SpecType>,\n\tgetValue?: (player: Player<SpecType>) => CustomRotation,\n\tsetValue?: (eventID: EventID, player: Player<SpecType>, newValue: CustomRotation) => void,\n\n\tnumColumns: number,\n\tvalues: Array<IconEnumValueConfig<Player<SpecType>, T>>;\n\n\tshowWhen?: (player: Player<SpecType>) => boolean,\n}\nexport function makeCustomRotationInput<SpecType extends Spec, T>(config: WrappedCustomRotationInputConfig<SpecType, T>): TypedCustomRotationPickerConfig<SpecType, T> {\n\treturn {\n\t\ttype: 'customRotation',\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => (player.getRotation()[config.fieldName] as unknown as CustomRotation) || CustomRotation.create()),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newValue: CustomRotation) => {\n\t\t\tconst rotation = player.getRotation();\n\t\t\t(rotation[config.fieldName] as unknown as CustomRotation) = newValue;\n\t\t\tplayer.setRotation(eventID, rotation);\n\t\t}),\n\t\tshowWhen: config.showWhen,\n\t\tnumColumns: config.numColumns,\n\t\tvalues: config.values,\n\t}\n}\n","import { Spec } from '../proto/common.js';\nimport { HunterPetTalents, Hunter_Options_PetType as PetType } from '../proto/hunter.js';\nimport { Player } from '../player.js';\nimport { Component } from '../components/component.js';\nimport { EnumPicker, EnumPickerConfig } from '../components/enum_picker.js';\nimport { SavedDataManager } from '../components/saved_data_manager.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { ActionId } from '../proto_utils/action_id.js';\n\nimport { TalentsConfig, TalentsPicker, newTalentsConfig } from './talents_picker.js';\nimport { protoToTalentString, talentStringToProto } from './factory.js';\n\nimport * as InputHelpers from '../components/input_helpers.js';\n\nexport function makePetTypeInputConfig(includeLabel: boolean): InputHelpers.TypedIconEnumPickerConfig<Player<Spec.SpecHunter>, PetType> {\n\treturn InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecHunter, PetType>({\n\t\tfieldName: 'petType',\n\t\tnumColumns: 5,\n\t\t//label: includeLabel ? 'Pet' : '',\n\t\tvalues: [\n\t\t\t{ color: 'grey', value: PetType.PetNone },\n\t\t\t{ actionId: ActionId.fromPetName('Bat'), tooltip: 'Bat', value: PetType.Bat },\n\t\t\t{ actionId: ActionId.fromPetName('Bear'), tooltip: 'Bear', value: PetType.Bear },\n\t\t\t{ actionId: ActionId.fromPetName('Bird of Prey'), tooltip: 'Bird of Prey', value: PetType.BirdOfPrey },\n\t\t\t{ actionId: ActionId.fromPetName('Boar'), tooltip: 'Boar', value: PetType.Boar },\n\t\t\t{ actionId: ActionId.fromPetName('Carrion Bird'), tooltip: 'Carrion Bird', value: PetType.CarrionBird },\n\t\t\t{ actionId: ActionId.fromPetName('Cat'), tooltip: 'Cat', value: PetType.Cat },\n\t\t\t{ actionId: ActionId.fromPetName('Chimaera'), tooltip: 'Chimaera (Exotic)', value: PetType.Chimaera },\n\t\t\t{ actionId: ActionId.fromPetName('Core Hound'), tooltip: 'Core Hound (Exotic)', value: PetType.CoreHound },\n\t\t\t{ actionId: ActionId.fromPetName('Crab'), tooltip: 'Crab', value: PetType.Crab },\n\t\t\t{ actionId: ActionId.fromPetName('Crocolisk'), tooltip: 'Crocolisk', value: PetType.Crocolisk },\n\t\t\t{ actionId: ActionId.fromPetName('Devilsaur'), tooltip: 'Devilsaur (Exotic)', value: PetType.Devilsaur },\n\t\t\t{ actionId: ActionId.fromPetName('Dragonhawk'), tooltip: 'Dragonhawk', value: PetType.Dragonhawk },\n\t\t\t{ actionId: ActionId.fromPetName('Gorilla'), tooltip: 'Gorilla', value: PetType.Gorilla },\n\t\t\t{ actionId: ActionId.fromPetName('Hyena'), tooltip: 'Hyena', value: PetType.Hyena },\n\t\t\t{ actionId: ActionId.fromPetName('Moth'), tooltip: 'Moth', value: PetType.Moth },\n\t\t\t{ actionId: ActionId.fromPetName('Nether Ray'), tooltip: 'Nether Ray', value: PetType.NetherRay },\n\t\t\t{ actionId: ActionId.fromPetName('Raptor'), tooltip: 'Raptor', value: PetType.Raptor },\n\t\t\t{ actionId: ActionId.fromPetName('Ravager'), tooltip: 'Ravager', value: PetType.Ravager },\n\t\t\t{ actionId: ActionId.fromPetName('Rhino'), tooltip: 'Rhino', value: PetType.Rhino },\n\t\t\t{ actionId: ActionId.fromPetName('Scorpid'), tooltip: 'Scorpid', value: PetType.Scorpid },\n\t\t\t{ actionId: ActionId.fromPetName('Serpent'), tooltip: 'Serpent', value: PetType.Serpent },\n\t\t\t{ actionId: ActionId.fromPetName('Silithid'), tooltip: 'Silithid (Exotic)', value: PetType.Silithid },\n\t\t\t{ actionId: ActionId.fromPetName('Spider'), tooltip: 'Spider', value: PetType.Spider },\n\t\t\t{ actionId: ActionId.fromPetName('Spirit Beast'), tooltip: 'Spirit Beast (Exotic)', value: PetType.SpiritBeast },\n\t\t\t{ actionId: ActionId.fromPetName('Spore Bat'), tooltip: 'Spore Bat', value: PetType.SporeBat },\n\t\t\t{ actionId: ActionId.fromPetName('Tallstrider'), tooltip: 'Tallstrider', value: PetType.Tallstrider },\n\t\t\t{ actionId: ActionId.fromPetName('Turtle'), tooltip: 'Turtle', value: PetType.Turtle },\n\t\t\t{ actionId: ActionId.fromPetName('Warp Stalker'), tooltip: 'Warp Stalker', value: PetType.WarpStalker },\n\t\t\t{ actionId: ActionId.fromPetName('Wasp'), tooltip: 'Wasp', value: PetType.Wasp },\n\t\t\t{ actionId: ActionId.fromPetName('Wind Serpent'), tooltip: 'Wind Serpent', value: PetType.WindSerpent },\n\t\t\t{ actionId: ActionId.fromPetName('Wolf'), tooltip: 'Wolf', value: PetType.Wolf },\n\t\t\t{ actionId: ActionId.fromPetName('Worm'), tooltip: 'Worm (Exotic)', value: PetType.Worm },\n\t\t],\n\t});\n}\n\nenum PetCategory {\n\tCunning,\n\tFerocity,\n\tTenacity,\n}\n\nconst petCategories: Record<PetType, PetCategory> = {\n\t[PetType.PetNone]: PetCategory.Ferocity,\n\t[PetType.Bat]: PetCategory.Cunning,\n\t[PetType.Bear]: PetCategory.Tenacity,\n\t[PetType.BirdOfPrey]: PetCategory.Cunning,\n\t[PetType.Boar]: PetCategory.Tenacity,\n\t[PetType.CarrionBird]: PetCategory.Ferocity,\n\t[PetType.Cat]: PetCategory.Ferocity,\n\t[PetType.Chimaera]: PetCategory.Cunning,\n\t[PetType.CoreHound]: PetCategory.Ferocity,\n\t[PetType.Crab]: PetCategory.Tenacity,\n\t[PetType.Crocolisk]: PetCategory.Tenacity,\n\t[PetType.Devilsaur]: PetCategory.Ferocity,\n\t[PetType.Dragonhawk]: PetCategory.Cunning,\n\t[PetType.Gorilla]: PetCategory.Tenacity,\n\t[PetType.Hyena]: PetCategory.Ferocity,\n\t[PetType.Moth]: PetCategory.Ferocity,\n\t[PetType.NetherRay]: PetCategory.Cunning,\n\t[PetType.Raptor]: PetCategory.Ferocity,\n\t[PetType.Ravager]: PetCategory.Cunning,\n\t[PetType.Rhino]: PetCategory.Tenacity,\n\t[PetType.Scorpid]: PetCategory.Tenacity,\n\t[PetType.Serpent]: PetCategory.Cunning,\n\t[PetType.Silithid]: PetCategory.Cunning,\n\t[PetType.Spider]: PetCategory.Cunning,\n\t[PetType.SpiritBeast]: PetCategory.Ferocity,\n\t[PetType.SporeBat]: PetCategory.Cunning,\n\t[PetType.Tallstrider]: PetCategory.Ferocity,\n\t[PetType.Turtle]: PetCategory.Tenacity,\n\t[PetType.WarpStalker]: PetCategory.Tenacity,\n\t[PetType.Wasp]: PetCategory.Ferocity,\n\t[PetType.WindSerpent]: PetCategory.Cunning,\n\t[PetType.Wolf]: PetCategory.Ferocity,\n\t[PetType.Worm]: PetCategory.Tenacity,\n};\n\nconst categoryOrder = [PetCategory.Cunning, PetCategory.Ferocity, PetCategory.Tenacity];\nconst categoryClasses = ['cunning', 'ferocity', 'tenacity'];\n\nexport class HunterPetTalentsPicker extends Component {\n\tprivate readonly player: Player<Spec.SpecHunter>;\n\tprivate curCategory: PetCategory | null;\n\tprivate curTalents: HunterPetTalents;\n\n\t// Not saved to storage, just holds last-used values for this session.\n\tprivate savedSets: Array<HunterPetTalents>;\n\n\tconstructor(parent: HTMLElement, player: Player<Spec.SpecHunter>) {\n\t\tsuper(parent, 'hunter-pet-talents-picker');\n\t\tthis.player = player;\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"pet-talents-container\"></div>\n\t\t`;\n\n\t\tthis.curCategory = this.getCategoryFromPlayer();\n\t\tthis.curTalents = this.getPetTalentsFromPlayer();\n\t\tthis.savedSets = defaultTalents.slice();\n\t\tthis.savedSets[this.curCategory] = this.curTalents;\n\t\tthis.rootElem.classList.add(categoryClasses[this.curCategory]);\n\n\t\tconst talentsContainer = this.rootElem.getElementsByClassName('pet-talents-container')[0] as HTMLElement;\n\n\t\tconst pickers = categoryOrder.map((category, i) => {\n\t\t\tconst talentsConfig = petTalentsConfig[i];\n\n\t\t\tconst pickerContainer = document.createElement('div');\n\t\t\tpickerContainer.classList.add('hunter-pet-talents-' + categoryClasses[i]);\n\t\t\ttalentsContainer.appendChild(pickerContainer);\n\n\t\t\tconst picker = new TalentsPicker(pickerContainer, player, {\n\t\t\t\ttrees: talentsConfig,\n\t\t\t\tchangedEvent: (player: Player<Spec.SpecHunter>) => player.specOptionsChangeEmitter,\n\t\t\t\tgetValue: (player: Player<Spec.SpecHunter>) => protoToTalentString(this.getPetTalentsFromPlayer(), talentsConfig),\n\t\t\t\tsetValue: (eventID: EventID, player: Player<Spec.SpecHunter>, newValue: string) => {\n\t\t\t\t\tconst options = player.getSpecOptions();\n\t\t\t\t\toptions.petTalents = talentStringToProto(HunterPetTalents.create(), newValue, talentsConfig);\n\t\t\t\t\tplayer.setSpecOptions(eventID, options);\n\n\t\t\t\t\tthis.savedSets[i] = options.petTalents;\n\t\t\t\t\tthis.curTalents = options.petTalents;\n\t\t\t\t},\n\t\t\t\tpointsPerRow: 3,\n\t\t\t\tmaxPoints: 16,\n\t\t\t});\n\n\t\t\tconst savedTalentsManager = new SavedDataManager<Player<Spec.SpecHunter>, string>(pickerContainer, this.player, {\n\t\t\t\tpresetsOnly: true,\n\t\t\t\tlabel: 'Pet Talents',\n\t\t\t\tstorageKey: '__NEVER_USED__',\n\t\t\t\tgetData: (player: Player<Spec.SpecHunter>) => protoToTalentString(this.getPetTalentsFromPlayer(), talentsConfig),\n\t\t\t\tsetData: (eventID: EventID, player: Player<Spec.SpecHunter>, newValue: string) => {\n\t\t\t\t\tconst options = player.getSpecOptions();\n\t\t\t\t\toptions.petTalents = talentStringToProto(HunterPetTalents.create(), newValue, talentsConfig);\n\t\t\t\t\tplayer.setSpecOptions(eventID, options);\n\n\t\t\t\t\tthis.savedSets[i] = options.petTalents;\n\t\t\t\t\tthis.curTalents = options.petTalents;\n\t\t\t\t},\n\t\t\t\tchangeEmitters: [this.player.specOptionsChangeEmitter],\n\t\t\t\tequals: (a: string, b: string) => a == b,\n\t\t\t\ttoJson: (a: string) => a,\n\t\t\t\tfromJson: (obj: any) => '',\n\t\t\t});\n\t\t\tsavedTalentsManager.addSavedData({\n\t\t\t\tname: 'Default',\n\t\t\t\tisPreset: true,\n\t\t\t\tdata: protoToTalentString(defaultTalents[i], talentsConfig),\n\t\t\t});\n\t\t\tsavedTalentsManager.addSavedData({\n\t\t\t\tname: 'BM',\n\t\t\t\tisPreset: true,\n\t\t\t\tdata: protoToTalentString(defaultBMTalents[i], talentsConfig),\n\t\t\t});\n\n\t\t\treturn picker;\n\t\t});\n\n\t\tplayer.specOptionsChangeEmitter.on(() => {\n\t\t\tconst petCategory = this.getCategoryFromPlayer();\n\t\t\tconst categoryIdx = categoryOrder.indexOf(petCategory);\n\n\t\t\tif (petCategory != this.curCategory) {\n\t\t\t\tthis.curCategory = petCategory;\n\t\t\t\tthis.rootElem.classList.remove(...categoryClasses);\n\t\t\t\tthis.rootElem.classList.add(categoryClasses[categoryIdx]);\n\n\t\t\t\tconst curTalents = this.getPetTalentsFromPlayer();\n\t\t\t\tif (!HunterPetTalents.equals(curTalents, this.curTalents)) {\n\t\t\t\t\t// If the current talents have also changed, this was probably a load so we shouldn't switch sets.\n\t\t\t\t\tthis.curTalents = curTalents;\n\t\t\t\t\tthis.savedSets[this.curCategory] = this.curTalents;\n\t\t\t\t} else {\n\t\t\t\t\t// Revert to the talents from last time the user was editing this category.\n\t\t\t\t\tconst options = this.player.getSpecOptions();\n\t\t\t\t\toptions.petTalents = this.savedSets[this.curCategory];\n\t\t\t\t\tthis.player.setSpecOptions(TypedEvent.nextEventID(), options);\n\t\t\t\t\tthis.curTalents = options.petTalents;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst updateIsBM = () => {\n\t\t\tconst maxPoints = this.player.getTalents().beastMastery ? 20 : 16;\n\t\t\tpickers.forEach(picker => picker.setMaxPoints(maxPoints));\n\t\t};\n\t\tplayer.talentsChangeEmitter.on(updateIsBM);\n\t\tupdateIsBM();\n\t}\n\n\tgetPetTalentsFromPlayer(): HunterPetTalents {\n\t\treturn this.player.getSpecOptions().petTalents || HunterPetTalents.create();\n\t}\n\n\tgetCategoryFromPlayer(): PetCategory {\n\t\tconst petType = this.player.getSpecOptions().petType;\n\t\treturn petCategories[petType];\n\t}\n}\n\nexport function getPetTalentsConfig(petType: PetType): TalentsConfig<HunterPetTalents> {\n\tconst petCategory = petCategories[petType];\n\tconst categoryIdx = categoryOrder.indexOf(petCategory);\n\treturn petTalentsConfig[categoryIdx];\n}\n\nexport const cunningDefault: HunterPetTalents = HunterPetTalents.create({\n\tcobraReflexes: 2,\n\tdive: true,\n\tboarsSpeed: true,\n\tmobility: 2,\n\tspikedCollar: 3,\n\tcornered: 2,\n\tfeedingFrenzy: 2,\n\twolverineBite: true,\n\tbullheaded: true,\n\twildHunt: 1,\n});\nexport const ferocityDefault: HunterPetTalents = HunterPetTalents.create({\n\tcobraReflexes: 2,\n\tdive: true,\n\tspikedCollar: 3,\n\tboarsSpeed: true,\n\tcullingTheHerd: 3,\n\tspidersBite: 3,\n\trabid: true,\n\tcallOfTheWild: true,\n\twildHunt: 1,\n});\nexport const tenacityDefault: HunterPetTalents = HunterPetTalents.create({\n\tcobraReflexes: 2,\n\tcharge: true,\n\tgreatStamina: 3,\n\tbloodOfTheRhino: 2,\n\tguardDog: 2,\n\tthunderstomp: true,\n\tgraceOfTheMantis: 2,\n\ttaunt: true,\n\troarOfSacrifice: true,\n\twildHunt: 1,\n});\nconst defaultTalents = [cunningDefault, ferocityDefault, tenacityDefault];\n\nexport const cunningBMDefault: HunterPetTalents = HunterPetTalents.create({\n\tcobraReflexes: 2,\n\tdive: true,\n\tboarsSpeed: true,\n\tmobility: 2,\n\tspikedCollar: 3,\n\tcornered: 2,\n\tfeedingFrenzy: 2,\n\twolverineBite: true,\n\tbullheaded: true,\n\tgraceOfTheMantis: 2,\n\twildHunt: 2,\n\troarOfSacrifice: true,\n});\nexport const ferocityBMDefault: HunterPetTalents = HunterPetTalents.create({\n\tcobraReflexes: 2,\n\tdive: true,\n\tbloodthirsty: 1,\n\tspikedCollar: 3,\n\tboarsSpeed: true,\n\tcullingTheHerd: 3,\n\tspidersBite: 3,\n\trabid: true,\n\tcallOfTheWild: true,\n\tsharkAttack: 2,\n\twildHunt: 2,\n});\nexport const tenacityBMDefault: HunterPetTalents = HunterPetTalents.create({\n\tcobraReflexes: 2,\n\tcharge: true,\n\tgreatStamina: 3,\n\tspikedCollar: 3,\n\tbloodOfTheRhino: 2,\n\tguardDog: 2,\n\tthunderstomp: true,\n\tgraceOfTheMantis: 2,\n\ttaunt: true,\n\troarOfSacrifice: true,\n\twildHunt: 2,\n});\nconst defaultBMTalents = [cunningBMDefault, ferocityBMDefault, tenacityBMDefault];\n\nconst cunningPetTalentsConfig: TalentsConfig<HunterPetTalents> = newTalentsConfig([\n\t{\n\t\tname: 'Cunning',\n\t\tbackgroundUrl: 'https://wotlkdb.com/static/images/wow/hunterpettalents/bg_3.jpg?85',\n\t\ttalents: [\n\t\t\t{\n\t\t\t\tfieldName: 'cobraReflexes',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 0,\n\t\t\t\t\tcolIdx: 0,\n\t\t\t\t},\n\t\t\t\tspellIds: [61682],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'dive',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 0,\n\t\t\t\t\tcolIdx: 1,\n\t\t\t\t},\n\t\t\t\tspellIds: [23145],\n\t\t\t\tmaxPoints: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'greatStamina',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 0,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tspellIds: [61686],\n\t\t\t\tmaxPoints: 3,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'naturalArmor',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 0,\n\t\t\t\t\tcolIdx: 3,\n\t\t\t\t},\n\t\t\t\tspellIds: [61689],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'boarsSpeed',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 1,\n\t\t\t\t\tcolIdx: 0,\n\t\t\t\t},\n\t\t\t\tspellIds: [19596],\n\t\t\t\tmaxPoints: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'mobility',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 1,\n\t\t\t\t\tcolIdx: 1,\n\t\t\t\t},\n\t\t\t\tprereqLocation: {\n\t\t\t\t\trowIdx: 0,\n\t\t\t\t\tcolIdx: 1,\n\t\t\t\t},\n\t\t\t\tspellIds: [53554],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'owlsFocus',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 1,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tspellIds: [53514, 53516],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'spikedCollar',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 1,\n\t\t\t\t\tcolIdx: 3,\n\t\t\t\t},\n\t\t\t\tspellIds: [53182],\n\t\t\t\tmaxPoints: 3,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'cullingTheHerd',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 2,\n\t\t\t\t\tcolIdx: 0,\n\t\t\t\t},\n\t\t\t\tspellIds: [61680, 61681, 52858],\n\t\t\t\tmaxPoints: 3,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'lionhearted',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 2,\n\t\t\t\t\tcolIdx: 1,\n\t\t\t\t},\n\t\t\t\tspellIds: [53409, 53411],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'carrionFeeder',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 2,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tspellIds: [54044],\n\t\t\t\tmaxPoints: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'greatResistance',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 3,\n\t\t\t\t\tcolIdx: 1,\n\t\t\t\t},\n\t\t\t\tspellIds: [53427, 53429],\n\t\t\t\tmaxPoints: 3,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'cornered',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 3,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tspellIds: [52234, 53497],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'feedingFrenzy',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 3,\n\t\t\t\t\tcolIdx: 3,\n\t\t\t\t},\n\t\t\t\tprereqLocation: {\n\t\t\t\t\trowIdx: 1,\n\t\t\t\t\tcolIdx: 3,\n\t\t\t\t},\n\t\t\t\tspellIds: [53511],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'wolverineBite',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 4,\n\t\t\t\t\tcolIdx: 0,\n\t\t\t\t},\n\t\t\t\tspellIds: [53508],\n\t\t\t\tmaxPoints: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'roarOfRecovery',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 4,\n\t\t\t\t\tcolIdx: 1,\n\t\t\t\t},\n\t\t\t\tspellIds: [53517],\n\t\t\t\tmaxPoints: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'bullheaded',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 4,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tprereqLocation: {\n\t\t\t\t\trowIdx: 3,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tspellIds: [53490],\n\t\t\t\tmaxPoints: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'graceOfTheMantis',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 4,\n\t\t\t\t\tcolIdx: 3,\n\t\t\t\t},\n\t\t\t\tspellIds: [53450],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'wildHunt',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 5,\n\t\t\t\t\tcolIdx: 0,\n\t\t\t\t},\n\t\t\t\tprereqLocation: {\n\t\t\t\t\trowIdx: 4,\n\t\t\t\t\tcolIdx: 0,\n\t\t\t\t},\n\t\t\t\tspellIds: [62758, 62762],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'roarOfSacrifice',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 5,\n\t\t\t\t\tcolIdx: 3,\n\t\t\t\t},\n\t\t\t\tprereqLocation: {\n\t\t\t\t\trowIdx: 4,\n\t\t\t\t\tcolIdx: 3,\n\t\t\t\t},\n\t\t\t\tspellIds: [53480],\n\t\t\t\tmaxPoints: 1,\n\t\t\t},\n\t\t],\n\t},\n]);\nconst ferocityPetTalentsConfig: TalentsConfig<HunterPetTalents> = newTalentsConfig([\n\t{\n\t\tname: 'Ferocity',\n\t\tbackgroundUrl: 'https://wotlkdb.com/static/images/wow/hunterpettalents/bg_1.jpg?85',\n\t\ttalents: [\n\t\t\t{\n\t\t\t\tfieldName: 'cobraReflexes',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 0,\n\t\t\t\t\tcolIdx: 0,\n\t\t\t\t},\n\t\t\t\tspellIds: [61682],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'dive',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 0,\n\t\t\t\t\tcolIdx: 1,\n\t\t\t\t},\n\t\t\t\tspellIds: [23145],\n\t\t\t\tmaxPoints: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'greatStamina',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 0,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tspellIds: [61686],\n\t\t\t\tmaxPoints: 3,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'naturalArmor',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 0,\n\t\t\t\t\tcolIdx: 3,\n\t\t\t\t},\n\t\t\t\tspellIds: [61689],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'improvedCower',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 1,\n\t\t\t\t\tcolIdx: 0,\n\t\t\t\t},\n\t\t\t\tspellIds: [53180],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'bloodthirsty',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 1,\n\t\t\t\t\tcolIdx: 1,\n\t\t\t\t},\n\t\t\t\tspellIds: [53186],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'spikedCollar',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 1,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tspellIds: [53182],\n\t\t\t\tmaxPoints: 3,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'boarsSpeed',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 1,\n\t\t\t\t\tcolIdx: 3,\n\t\t\t\t},\n\t\t\t\tspellIds: [19596],\n\t\t\t\tmaxPoints: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'cullingTheHerd',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 2,\n\t\t\t\t\tcolIdx: 0,\n\t\t\t\t},\n\t\t\t\tspellIds: [61680, 61681, 52858],\n\t\t\t\tmaxPoints: 3,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'lionhearted',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 2,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tspellIds: [53409, 53411],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'charge',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 2,\n\t\t\t\t\tcolIdx: 3,\n\t\t\t\t},\n\t\t\t\tspellIds: [61685],\n\t\t\t\tmaxPoints: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'heartOfThePheonix',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 3,\n\t\t\t\t\tcolIdx: 1,\n\t\t\t\t},\n\t\t\t\tprereqLocation: {\n\t\t\t\t\trowIdx: 1,\n\t\t\t\t\tcolIdx: 1,\n\t\t\t\t},\n\t\t\t\tspellIds: [55709],\n\t\t\t\tmaxPoints: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'spidersBite',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 3,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tspellIds: [53203],\n\t\t\t\tmaxPoints: 3,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'greatResistance',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 3,\n\t\t\t\t\tcolIdx: 3,\n\t\t\t\t},\n\t\t\t\tspellIds: [53427, 53429],\n\t\t\t\tmaxPoints: 3,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'rabid',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 4,\n\t\t\t\t\tcolIdx: 0,\n\t\t\t\t},\n\t\t\t\tspellIds: [53401],\n\t\t\t\tmaxPoints: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'lickYourWounds',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 4,\n\t\t\t\t\tcolIdx: 1,\n\t\t\t\t},\n\t\t\t\tprereqLocation: {\n\t\t\t\t\trowIdx: 3,\n\t\t\t\t\tcolIdx: 1,\n\t\t\t\t},\n\t\t\t\tspellIds: [53426],\n\t\t\t\tmaxPoints: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'callOfTheWild',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 4,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tprereqLocation: {\n\t\t\t\t\trowIdx: 3,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tspellIds: [53434],\n\t\t\t\tmaxPoints: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'sharkAttack',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 5,\n\t\t\t\t\tcolIdx: 0,\n\t\t\t\t},\n\t\t\t\tspellIds: [62759],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'wildHunt',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 5,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tprereqLocation: {\n\t\t\t\t\trowIdx: 4,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tspellIds: [62758, 62762],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t],\n\t},\n]);\nconst tenacityPetTalentsConfig: TalentsConfig<HunterPetTalents> = newTalentsConfig([\n\t{\n\t\tname: 'Tenacity',\n\t\tbackgroundUrl: 'https://wotlkdb.com/static/images/wow/hunterpettalents/bg_2.jpg?85',\n\t\ttalents: [\n\t\t\t{\n\t\t\t\tfieldName: 'cobraReflexes',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 0,\n\t\t\t\t\tcolIdx: 0,\n\t\t\t\t},\n\t\t\t\tspellIds: [61682],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'charge',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 0,\n\t\t\t\t\tcolIdx: 1,\n\t\t\t\t},\n\t\t\t\tspellIds: [61685],\n\t\t\t\tmaxPoints: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'greatStamina',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 0,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tspellIds: [61686],\n\t\t\t\tmaxPoints: 3,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'naturalArmor',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 0,\n\t\t\t\t\tcolIdx: 3,\n\t\t\t\t},\n\t\t\t\tspellIds: [61689],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'spikedCollar',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 1,\n\t\t\t\t\tcolIdx: 0,\n\t\t\t\t},\n\t\t\t\tspellIds: [53182],\n\t\t\t\tmaxPoints: 3,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'boarsSpeed',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 1,\n\t\t\t\t\tcolIdx: 1,\n\t\t\t\t},\n\t\t\t\tspellIds: [19596],\n\t\t\t\tmaxPoints: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'bloodOfTheRhino',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 1,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tprereqLocation: {\n\t\t\t\t\trowIdx: 0,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tspellIds: [53481],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'petBarding',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 1,\n\t\t\t\t\tcolIdx: 3,\n\t\t\t\t},\n\t\t\t\tprereqLocation: {\n\t\t\t\t\trowIdx: 0,\n\t\t\t\t\tcolIdx: 3,\n\t\t\t\t},\n\t\t\t\tspellIds: [53175],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'cullingTheHerd',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 2,\n\t\t\t\t\tcolIdx: 0,\n\t\t\t\t},\n\t\t\t\tspellIds: [61680, 61681, 52858],\n\t\t\t\tmaxPoints: 3,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'guardDog',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 2,\n\t\t\t\t\tcolIdx: 1,\n\t\t\t\t},\n\t\t\t\tspellIds: [53178],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'lionhearted',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 2,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tspellIds: [53409, 53411],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'thunderstomp',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 2,\n\t\t\t\t\tcolIdx: 3,\n\t\t\t\t},\n\t\t\t\tspellIds: [63900],\n\t\t\t\tmaxPoints: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'graceOfTheMantis',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 3,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tspellIds: [53450],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'greatResistance',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 3,\n\t\t\t\t\tcolIdx: 3,\n\t\t\t\t},\n\t\t\t\tspellIds: [53427, 53429],\n\t\t\t\tmaxPoints: 3,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'lastStand',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 4,\n\t\t\t\t\tcolIdx: 0,\n\t\t\t\t},\n\t\t\t\tspellIds: [53478],\n\t\t\t\tmaxPoints: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'taunt',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 4,\n\t\t\t\t\tcolIdx: 1,\n\t\t\t\t},\n\t\t\t\tprereqLocation: {\n\t\t\t\t\trowIdx: 2,\n\t\t\t\t\tcolIdx: 1,\n\t\t\t\t},\n\t\t\t\tspellIds: [53477],\n\t\t\t\tmaxPoints: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'roarOfSacrifice',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 4,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tprereqLocation: {\n\t\t\t\t\trowIdx: 3,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tspellIds: [53480],\n\t\t\t\tmaxPoints: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'intervene',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 4,\n\t\t\t\t\tcolIdx: 3,\n\t\t\t\t},\n\t\t\t\tspellIds: [53476],\n\t\t\t\tmaxPoints: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'silverback',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 5,\n\t\t\t\t\tcolIdx: 1,\n\t\t\t\t},\n\t\t\t\tspellIds: [62764],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldName: 'wildHunt',\n\t\t\t\tlocation: {\n\t\t\t\t\trowIdx: 5,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tprereqLocation: {\n\t\t\t\t\trowIdx: 4,\n\t\t\t\t\tcolIdx: 2,\n\t\t\t\t},\n\t\t\t\tspellIds: [62758, 62762],\n\t\t\t\tmaxPoints: 2,\n\t\t\t},\n\t\t],\n\t},\n]);\n\nconst petTalentsConfig = [\n\tcunningPetTalentsConfig,\n\tferocityPetTalentsConfig,\n\ttenacityPetTalentsConfig,\n];\n","import { ActionId } from '../proto_utils/action_id.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { isRightClick } from '../utils.js';\n\nimport { Component } from './component.js';\nimport { Input, InputConfig } from './input.js';\n\n// Data for creating an icon-based input component.\n// \n// E.g. one of these for arcane brilliance, another for kings, etc.\n// ModObject is the object being modified (Sim, Player, or Target).\n// ValueType is either number or boolean.\nexport interface IconPickerConfig<ModObject, ValueType> extends InputConfig<ModObject, ValueType> {\n\tid: ActionId;\n\n\t// The number of possible 'states' this icon can have. Most inputs will use 2\n\t// for a bi-state icon (on or off). 0 indicates an unlimited number of states.\n\tstates: number;\n\n\t// Only used if states >= 3.\n\timprovedId?: ActionId;\n\n\t// Only used if states >= 4.\n\timprovedId2?: ActionId;\n};\n\n// Icon-based UI for picking buffs / consumes / etc\n// ModObject is the object being modified (Sim, Player, or Target).\nexport class IconPicker<ModObject, ValueType> extends Input<ModObject, ValueType> {\n\tprivate readonly config: IconPickerConfig<ModObject, ValueType>;\n\n\tprivate readonly rootAnchor: HTMLAnchorElement;\n\tprivate readonly improvedAnchor: HTMLAnchorElement;\n\tprivate readonly improvedAnchor2: HTMLAnchorElement;\n\tprivate readonly counterElem: HTMLElement;\n\n\tprivate currentValue: number;\n\n\tconstructor(parent: HTMLElement, modObj: ModObject, config: IconPickerConfig<ModObject, ValueType>) {\n\t\tsuper(parent, 'icon-input-root', modObj, config);\n\t\tthis.config = config;\n\t\tthis.currentValue = 0;\n\n\t\tthis.rootAnchor = document.createElement('a');\n\t\tthis.rootAnchor.classList.add('icon-input');\n\t\tthis.rootAnchor.target = '_blank';\n\t\tthis.rootElem.appendChild(this.rootAnchor);\n\n\t\tconst useImprovedIcons = Boolean(this.config.improvedId);\n\t\tif (useImprovedIcons) {\n\t\t\tthis.rootAnchor.classList.add('use-improved-icons');\n\t\t}\n\t\tif (this.config.improvedId2) {\n\t\t\tthis.rootAnchor.classList.add('use-improved-icons2');\n\t\t}\n\t\tif (!useImprovedIcons && this.config.states > 2) {\n\t\t\tthis.rootAnchor.classList.add('use-counter');\n\t\t}\n\n\t\tconst levelContainer = document.createElement('div');\n\t\tlevelContainer.classList.add('icon-input-level-container');\n\t\tthis.rootAnchor.appendChild(levelContainer);\n\t\tlevelContainer.innerHTML = `\n      <a class=\"icon-input-improved icon-input-improved1\"></a>\n      <a class=\"icon-input-improved icon-input-improved2\"></a>\n      <span class=\"icon-input-counter\"></span>\n    `;\n\n\t\tthis.improvedAnchor = this.rootAnchor.getElementsByClassName('icon-input-improved1')[0] as HTMLAnchorElement;\n\t\tthis.improvedAnchor2 = this.rootAnchor.getElementsByClassName('icon-input-improved2')[0] as HTMLAnchorElement;\n\t\tthis.counterElem = this.rootAnchor.getElementsByClassName('icon-input-counter')[0] as HTMLElement;\n\n\t\tthis.config.id.fillAndSet(this.rootAnchor, true, true);\n\n\t\tif (this.config.states >= 3 && this.config.improvedId) {\n\t\t\tthis.config.improvedId.fillAndSet(this.improvedAnchor, true, true);\n\t\t}\n\t\tif (this.config.states >= 4 && this.config.improvedId2) {\n\t\t\tthis.config.improvedId2.fillAndSet(this.improvedAnchor2, true, true);\n\t\t}\n\n\t\tthis.init();\n\n\t\tthis.rootAnchor.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tthis.rootAnchor.addEventListener('contextmenu', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tthis.rootAnchor.addEventListener('mousedown', event => {\n\t\t\tconst rightClick = isRightClick(event);\n\n\t\t\tif (rightClick) {\n\t\t\t\tif (this.currentValue > 0) {\n\t\t\t\t\tthis.currentValue--;\n\t\t\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.config.states == 0 || (this.currentValue + 1) < this.config.states) {\n\t\t\t\t\tthis.currentValue++;\n\t\t\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.rootAnchor.addEventListener('touchstart', event => {\n\t\t\tif (this.config.states == 0 || (this.currentValue + 1) < this.config.states) {\n\t\t\t\tthis.currentValue++;\n\t\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t\t} else if (this.currentValue > 0) { // roll over\n\t\t\t\tthis.currentValue = 0;\n\t\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t\t}\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tthis.rootAnchor.addEventListener('touchend', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.rootAnchor;\n\t}\n\n\tgetInputValue(): ValueType {\n\t\tif (this.config.states == 2) {\n\t\t\treturn Boolean(this.currentValue) as unknown as ValueType;\n\t\t} else {\n\t\t\treturn this.currentValue as unknown as ValueType;\n\t\t}\n\t}\n\n\t// Returns the ActionId of the currently selected value, or null if none selected.\n\tgetActionId(): ActionId | null {\n\n\t\t// Go directly to source because during event propogation \n\t\t//  the internal `this.currentValue` may not yet have been updated.\n\t\tconst v = Number(this.config.getValue(this.modObject));\n\t\tif (v == 0) {\n\t\t\treturn null;\n\t\t} else if (v == 1) {\n\t\t\treturn this.config.id;\n\t\t} else if (v == 2 && this.config.improvedId) {\n\t\t\treturn this.config.improvedId;\n\t\t} else if (v == 3 && this.config.improvedId2) {\n\t\t\treturn this.config.improvedId2;\n\t\t} else {\n\t\t\treturn this.config.id;\n\t\t}\n\t}\n\n\tsetInputValue(newValue: ValueType) {\n\t\tthis.currentValue = Number(newValue);\n\n\t\tif (this.currentValue > 0) {\n\t\t\tthis.rootAnchor.classList.add('active');\n\t\t\tthis.counterElem.classList.add('active');\n\t\t} else {\n\t\t\tthis.rootAnchor.classList.remove('active');\n\t\t\tthis.counterElem.classList.remove('active');\n\t\t}\n\n\t\tif (this.config.states >= 3 && this.config.improvedId) {\n\t\t\tif (this.currentValue > 1) {\n\t\t\t\tthis.improvedAnchor.classList.add('active');\n\t\t\t} else {\n\t\t\t\tthis.improvedAnchor.classList.remove('active');\n\t\t\t}\n\t\t}\n\t\tif (this.config.states >= 4 && this.config.improvedId2) {\n\t\t\tif (this.currentValue > 2) {\n\t\t\t\tthis.improvedAnchor2.classList.add('active');\n\t\t\t} else {\n\t\t\t\tthis.improvedAnchor2.classList.remove('active');\n\t\t\t}\n\t\t}\n\n\t\tif (!this.config.improvedId && (this.config.states > 3 || this.config.states == 0)) {\n\t\t\tthis.counterElem.textContent = String(this.currentValue);\n\t\t}\n\t}\n}\n","import { SimUI } from '../sim_ui.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Component } from './component.js';\n\nexport class LogRunner extends Component {\n\tconstructor(parent: HTMLElement, simUI: SimUI) {\n\t\tsuper(parent, 'log-runner-root');\n\n\t\tconst controlBar = document.createElement('div');\n\t\tcontrolBar.classList.add('log-runner-control-bar');\n\t\tthis.rootElem.appendChild(controlBar);\n\n\t\tconst simButton = document.createElement('button');\n\t\tsimButton.classList.add('log-runner-button', 'sim-button');\n\t\tsimButton.textContent = 'SIM 1 ITERATION';\n\t\tcontrolBar.appendChild(simButton);\n\n\t\tconst logsDiv = document.createElement('div');\n\t\tlogsDiv.classList.add('log-runner-logs');\n\t\tthis.rootElem.appendChild(logsDiv);\n\n\t\tsimButton.addEventListener('click', async () => simUI.runSimOnce());\n\n\t\tsimUI.sim.simResultEmitter.on((eventID, simResult) => {\n\t\t\tconst logs = simResult.logs;\n\t\t\tlogsDiv.textContent = '';\n\t\t\tlogs\n\t\t\t\t.filter(log => {\n\t\t\t\t\treturn !log.isCastCompleted();\n\t\t\t\t})\n\t\t\t\t.forEach(log => {\n\t\t\t\t\tconst lineElem = document.createElement('span');\n\t\t\t\t\tlineElem.textContent = log.toString();\n\t\t\t\t\tlogsDiv.appendChild(lineElem);\n\t\t\t\t});\n\t\t});\n\t}\n}\n","import { ActionId } from '../proto_utils/action_id.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { SimUI } from '../sim_ui.js';\n\nimport { Component } from './component.js';\nimport { IconPicker, IconPickerConfig } from './icon_picker.js';\nimport { Input, InputConfig } from './input.js';\n\nexport interface MultiIconPickerItemConfig<ModObject> extends IconPickerConfig<ModObject, any> {\n}\n\nexport interface MultiIconPickerConfig<ModObject> {\n\tinputs: Array<MultiIconPickerItemConfig<ModObject>>,\n\temptyColor: string,\n\tnumColumns: number,\n\tlabel?: string,\n\tcategoryId?: ActionId,\n}\n\n// Icon-based UI for a dropdown with multiple icon pickers.\n// ModObject is the object being modified (Sim, Player, or Target).\nexport class MultiIconPicker<ModObject> extends Component {\n\tprivate readonly config: MultiIconPickerConfig<ModObject>;\n\n\tprivate currentValue: ActionId | null;\n\n\tprivate readonly dropdownRootElem: HTMLElement;\n\tprivate readonly buttonElem: HTMLAnchorElement;\n\tprivate readonly pickers: Array<IconPicker<ModObject, any>>;\n\n\tconstructor(parent: HTMLElement, modObj: ModObject, config: MultiIconPickerConfig<ModObject>, simUI: SimUI) {\n\t\tsuper(parent, 'multi-icon-picker-root');\n\t\tthis.config = config;\n\t\tthis.currentValue = null;\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<span class=\"multi-icon-picker-label\"></span>\n\t\t\t<div class=\"dropdown-root multi-icon-picker-dropdown-root\">\n\t\t\t\t<a class=\"dropdown-button multi-icon-picker-button\"></a>\n\t\t\t\t<div class=\"dropdown-panel multi-icon-picker-dropdown\"></div>\n\t\t\t</div>\n    `;\n\t\tthis.dropdownRootElem = this.rootElem.getElementsByClassName('multi-icon-picker-dropdown-root')[0] as HTMLElement;\n\n\t\tconst labelElem = this.rootElem.getElementsByClassName('multi-icon-picker-label')[0] as HTMLElement;\n\t\tif (config.label) {\n\t\t\tlabelElem.textContent = config.label;\n\t\t} else {\n\t\t\tlabelElem.remove();\n\t\t}\n\n\t\tthis.buttonElem = this.rootElem.getElementsByClassName('multi-icon-picker-button')[0] as HTMLAnchorElement;\n\t\tconst dropdownElem = this.rootElem.getElementsByClassName('multi-icon-picker-dropdown')[0] as HTMLElement;\n\n\t\tthis.buttonElem.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tthis.buttonElem.addEventListener('touchstart', event => {\n\t\t\tif (dropdownElem.style.display == \"block\") {\n\t\t\t\tdropdownElem.style.display = \"none\";\n\t\t\t} else {\n\t\t\t\tdropdownElem.style.display = \"block\";\n\t\t\t}\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tthis.buttonElem.addEventListener('touchend', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\tdropdownElem.style.gridTemplateColumns = `repeat(${this.config.numColumns}, 1fr)`;\n\n\t\tthis.pickers = config.inputs.map((pickerConfig, i) => {\n\t\t\tconst optionContainer = document.createElement('div');\n\t\t\toptionContainer.classList.add('dropdown-option-container');\n\t\t\toptionContainer.classList.add('multi-icon-dropdown-container');\n\t\t\tdropdownElem.appendChild(optionContainer);\n\n\t\t\tconst option = document.createElement('a');\n\t\t\toption.classList.add('dropdown-option', 'multi-icon-picker-option');\n\t\t\toptionContainer.appendChild(option);\n\t\t\treturn new IconPicker(option, modObj, pickerConfig);\n\t\t});\n\t\tsimUI.sim.waitForInit().then(() => this.updateButtonImage());\n\t\tsimUI.changeEmitter.on(() => this.updateButtonImage());\n\t}\n\n\tprivate updateButtonImage() {\n\t\tthis.currentValue = this.getMaxValue();\n\n\t\tif (this.currentValue) {\n\t\t\tthis.dropdownRootElem.classList.add('active');\n\t\t\tif (this.config.categoryId != null) {\n\t\t\t\tthis.config.categoryId.fillAndSet(this.buttonElem, false, true);\n\t\t\t} else {\n\t\t\t\tthis.currentValue.fillAndSet(this.buttonElem, false, true);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.dropdownRootElem.classList.remove('active');\n\t\t\tif (this.config.categoryId != null) {\n\t\t\t\tthis.config.categoryId.fillAndSet(this.buttonElem, false, true);\n\t\t\t} else {\n\t\t\t\tthis.buttonElem.style.backgroundImage = '';\n\t\t\t}\n\t\t\tthis.buttonElem.style.backgroundColor = this.config.emptyColor;\n\t\t\tthis.buttonElem.removeAttribute(\"href\");\n\t\t}\n\t}\n\n\tprivate getMaxValue(): ActionId | null {\n\t\treturn this.pickers.map(picker => picker.getActionId()).filter(id => id != null)[0] || null;\n\t}\n}\n","import { Class } from '../proto/common.js';\nimport { EquipmentSpec } from '../proto/common.js';\nimport { ItemSpec } from '../proto/common.js';\nimport { Race } from '../proto/common.js';\nimport { Spec } from '../proto/common.js';\nimport { Stat } from '../proto/common.js';\nimport { SimUI } from '../sim_ui.js';\nimport { IndividualSimUI } from '../individual_sim_ui.js';\nimport { Sim } from '../sim.js';\nimport { Player } from '../player.js';\nimport { classNames, nameToClass, nameToRace, statNames } from '../proto_utils/names.js';\nimport { talentSpellIdsToTalentString } from '../talents/factory.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { BooleanPicker } from '../components/boolean_picker.js';\nimport { NumberPicker } from '../components/number_picker.js';\nimport { getEnumValues } from '../utils.js';\n\nimport { Popup } from './popup.js';\n\ndeclare var $: any;\ndeclare var tippy: any;\n\nexport class SettingsMenu extends Popup {\n\tprivate readonly simUI: SimUI;\n\n\tconstructor(parent: HTMLElement, simUI: SimUI) {\n\t\tsuper(parent);\n\t\tthis.rootElem.classList.add('settings-menu');\n\t\tthis.simUI = simUI;\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"settings-menu-title\">\n\t\t\t\t<span>OPTIONS</span>\n\t\t\t</div>\n\t\t\t<div class=\"settings-menu-content\">\n\t\t\t\t<div class=\"settings-menu-content-left\">\n\t\t\t\t\t<button class=\"restore-defaults-button sim-button\">RESTORE DEFAULTS</button>\n\t\t\t\t\t<div class=\"settings-menu-section\">\n\t\t\t\t\t\t<div class=\"fixed-rng-seed\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"last-used-rng-seed-container\">\n\t\t\t\t\t\t\t<span>Last used RNG seed:</span><span class=\"last-used-rng-seed\">0</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"show-threat-metrics-picker\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"show-experimental-picker\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"settings-menu-content-right\">\n\t\t\t\t\t<div class=\"settings-menu-section settings-menu-ep-weights within-raid-sim-hide\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t\tthis.addCloseButton();\n\n\t\tconst restoreDefaultsButton = this.rootElem.getElementsByClassName('restore-defaults-button')[0] as HTMLElement;\n\t\trestoreDefaultsButton.addEventListener('click', event => {\n\t\t\tthis.simUI.applyDefaults(TypedEvent.nextEventID());\n\t\t});\n\t\ttippy(restoreDefaultsButton, {\n\t\t\t'content': 'Restores all default settings (gear, consumes, buffs, talents, EP weights, etc).',\n\t\t\t'allowHTML': true,\n\t\t});\n\n\t\tconst fixedRngSeed = this.rootElem.getElementsByClassName('fixed-rng-seed')[0] as HTMLElement;\n\t\tnew NumberPicker(fixedRngSeed, this.simUI.sim, {\n\t\t\tlabel: 'Fixed RNG Seed',\n\t\t\tlabelTooltip: 'Seed value for the random number generator used during sims, or 0 to use different randomness each run. Use this to share exact sim results or for debugging.',\n\t\t\tchangedEvent: (sim: Sim) => sim.fixedRngSeedChangeEmitter,\n\t\t\tgetValue: (sim: Sim) => sim.getFixedRngSeed(),\n\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\t\tsim.setFixedRngSeed(eventID, newValue);\n\t\t\t},\n\t\t});\n\n\t\tconst lastUsedRngSeed = this.rootElem.getElementsByClassName('last-used-rng-seed')[0] as HTMLElement;\n\t\tlastUsedRngSeed.textContent = String(this.simUI.sim.getLastUsedRngSeed());\n\t\tthis.simUI.sim.lastUsedRngSeedChangeEmitter.on(() => lastUsedRngSeed.textContent = String(this.simUI.sim.getLastUsedRngSeed()));\n\n\t\tconst showThreatMetrics = this.rootElem.getElementsByClassName('show-threat-metrics-picker')[0] as HTMLElement;\n\t\tnew BooleanPicker(showThreatMetrics, this.simUI.sim, {\n\t\t\tlabel: 'Show Threat/Tank Options',\n\t\t\tlabelTooltip: 'Shows all options and metrics relevant to tanks, like TPS/DTPS.',\n\t\t\tchangedEvent: (sim: Sim) => sim.showThreatMetricsChangeEmitter,\n\t\t\tgetValue: (sim: Sim) => sim.getShowThreatMetrics(),\n\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\t\tsim.setShowThreatMetrics(eventID, newValue);\n\t\t\t},\n\t\t});\n\n\t\t// Comment this out when there are no experiments to show.\n\t\tconst showExperimental = this.rootElem.getElementsByClassName('show-experimental-picker')[0] as HTMLElement;\n\t\tnew BooleanPicker(showExperimental, this.simUI.sim, {\n\t\t\tlabel: 'Show Experimental',\n\t\t\tchangedEvent: (sim: Sim) => sim.showExperimentalChangeEmitter,\n\t\t\tgetValue: (sim: Sim) => sim.getShowExperimental(),\n\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\t\tsim.setShowExperimental(eventID, newValue);\n\t\t\t},\n\t\t});\n\t}\n}\n","import { Component } from '../components/component.js';\n\nexport class ResultsViewer extends Component {\n\treadonly pendingElem: HTMLElement;\n\treadonly contentElem: HTMLElement;\n\n\tconstructor(parentElem: HTMLElement) {\n\t\tsuper(parentElem, 'results-viewer');\n\t\tthis.rootElem.innerHTML = `\n      <div class=\"results-pending\">\n        <div class=\"loader\"></div>\n      </div>\n      <div class=\"results-content\">\n      </div>\n\t\t`;\n\n\t\tthis.pendingElem = this.rootElem.getElementsByClassName('results-pending')[0] as HTMLElement;\n\t\tthis.contentElem = this.rootElem.getElementsByClassName('results-content')[0] as HTMLElement;\n\t\tthis.hideAll();\n\t}\n\n\thideAll() {\n\t\tthis.contentElem.style.display = 'none';\n\t\tthis.pendingElem.style.display = 'none';\n\t}\n\n\tsetPending() {\n\t\tthis.contentElem.style.display = 'none';\n\t\tthis.pendingElem.style.display = 'initial';\n\t}\n\n\tsetContent(innerHTML: string) {\n\t\tthis.contentElem.innerHTML = innerHTML;\n\t\tthis.contentElem.style.display = 'initial';\n\t\tthis.pendingElem.style.display = 'none';\n\t}\n}\n","import { Spec } from './proto/common.js';\n\n// This file is for anything related to launching a new sim. DO NOT touch this\n// file until your sim is ready to launch!\n\nexport enum LaunchStatus {\n\tUnlaunched,\n\tAlpha,\n\tBeta,\n\tLaunched,\n}\n\nexport const raidSimLaunched = false;\n\n// This list controls which links are shown in the top-left dropdown menu.\nexport const simLaunchStatuses: Record<Spec, LaunchStatus> = {\n\t[Spec.SpecBalanceDruid]: LaunchStatus.Alpha,\n\t[Spec.SpecElementalShaman]: LaunchStatus.Alpha,\n\t[Spec.SpecEnhancementShaman]: LaunchStatus.Alpha,\n\t[Spec.SpecFeralDruid]: LaunchStatus.Alpha,\n\t[Spec.SpecFeralTankDruid]: LaunchStatus.Unlaunched,\n\t[Spec.SpecHunter]: LaunchStatus.Beta,\n\t[Spec.SpecMage]: LaunchStatus.Alpha,\n\t[Spec.SpecRogue]: LaunchStatus.Alpha,\n\t[Spec.SpecRetributionPaladin]: LaunchStatus.Alpha,\n\t[Spec.SpecProtectionPaladin]: LaunchStatus.Alpha,\n\t[Spec.SpecHealingPriest]: LaunchStatus.Unlaunched,\n\t[Spec.SpecShadowPriest]: LaunchStatus.Alpha,\n\t[Spec.SpecSmitePriest]: LaunchStatus.Alpha,\n\t[Spec.SpecWarlock]: LaunchStatus.Alpha,\n\t[Spec.SpecWarrior]: LaunchStatus.Alpha,\n\t[Spec.SpecProtectionWarrior]: LaunchStatus.Alpha,\n\t[Spec.SpecDeathknight]: LaunchStatus.Alpha,\n\t[Spec.SpecTankDeathknight]: LaunchStatus.Unlaunched,\n};\n\n// Meme specs are excluded from title drop-down menu.\nexport const memeSpecs: Array<Spec> = [\n\tSpec.SpecSmitePriest,\n];\n\nexport function getLaunchedSims(): Array<Spec> {\n\treturn Object.keys(simLaunchStatuses)\n\t\t.map(specStr => parseInt(specStr) as Spec)\n\t\t.filter(spec => simLaunchStatuses[spec] > LaunchStatus.Unlaunched);\n}\n","import { Component } from '../components/component.js';\nimport { getLaunchedSims, raidSimLaunched, memeSpecs } from '../launched_sims.js';\nimport { Spec } from '../proto/common.js';\nimport {\n\tclassColors,\n\tgetSpecSiteUrl,\n\tnaturalSpecOrder,\n\traidSimSiteUrl,\n\tspecNames,\n\tspecToClass,\n\ttitleIcons,\n\traidSimIcon,\n} from '../proto_utils/utils.js';\n\ndeclare var tippy: any;\n\nexport interface SimLinkOption {\n\ticonUrl: string,\n\thref: string,\n\ttext: string,\n\tcolor: string,\n};\n\n// Dropdown menu for selecting a player.\nexport class Title extends Component {\n\tprivate readonly buttonElem: HTMLElement;\n\n\tconstructor(parent: HTMLElement, currentSpec: Spec | null) {\n\t\tsuper(parent, 'sim-title-root');\n\t\tthis.rootElem.classList.add('dropdown-root');\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"dropdown-button sim-title-button\"></div>\n\t\t\t<div class=\"dropdown-panel sim-title-dropdown within-raid-sim-hide\"></div>\n    `;\n\n\t\tthis.buttonElem = this.rootElem.getElementsByClassName('sim-title-button')[0] as HTMLElement;\n\t\tconst dropdownPanel = this.rootElem.getElementsByClassName('dropdown-panel')[0] as HTMLElement;\n\n\t\tthis.buttonElem.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\tconst orderedLaunchedSpecs: Array<Spec | null> = (naturalSpecOrder\n\t\t\t.filter(spec => getLaunchedSims().includes(spec)) as Array<Spec | null>)\n\t\t\t.filter(spec => !spec || !memeSpecs.includes(spec))\n\t\t\t.concat(raidSimLaunched ? [null] : []); // Null represents the raid sim.\n\n\t\tdropdownPanel.style.gridTemplateRows = `repeat(${Math.ceil(orderedLaunchedSpecs.length / 2)}, 1fr)`;\n\n\t\tconst currentOption = this.makeOptionData(currentSpec, true);\n\t\tconst otherOptions = orderedLaunchedSpecs.map(spec => this.makeOptionData(spec, false));\n\n\t\tthis.buttonElem.appendChild(Title.makeOptionElem(currentOption));\n\n\t\tconst isWithinRaidSim = this.rootElem.closest('.within-raid-sim') != null;\n\t\tif (!isWithinRaidSim) {\n\t\t\totherOptions.forEach((option, i) => dropdownPanel.appendChild(this.makeOption(option)));\n\t\t}\n\t}\n\n\tprivate makeOptionData(spec: Spec | null, isButton: boolean) {\n\t\tif (spec == null) {\n\t\t\treturn {\n\t\t\t\ticonUrl: raidSimIcon,\n\t\t\t\thref: raidSimSiteUrl,\n\t\t\t\ttext: 'RAID',\n\t\t\t\tcolor: isButton ? '' : 'black',\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\ticonUrl: titleIcons[spec],\n\t\t\t\thref: getSpecSiteUrl(spec),\n\t\t\t\ttext: specNames[spec].toUpperCase(),\n\t\t\t\tcolor: isButton ? '' : classColors[specToClass[spec]],\n\t\t\t};\n\t\t}\n\t}\n\n\tprivate makeOption(data: SimLinkOption): HTMLElement {\n\t\tconst option = Title.makeOptionElem(data);\n\n\t\toption.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t\twindow.location.href = data.href;\n\t\t});\n\n\t\treturn option;\n\t}\n\n\tstatic makeOptionElem(data: SimLinkOption): HTMLElement {\n\t\tconst optionContainer = document.createElement('a');\n\t\toptionContainer.href = data.href;\n\t\toptionContainer.classList.add('sim-title-dropdown-option-container', 'dropdown-option-container');\n\n\t\tconst option = document.createElement('div');\n\t\toption.classList.add('sim-title-option', 'dropdown-option');\n\t\toptionContainer.appendChild(option);\n\n\t\tif (data.color) {\n\t\t\toption.style.backgroundColor = data.color;\n\t\t}\n\n\t\tconst icon = document.createElement('img');\n\t\ticon.src = data.iconUrl;\n\t\ticon.classList.add('sim-title-icon');\n\t\toption.appendChild(icon);\n\n\t\tconst labelDiv = document.createElement('div');\n\t\tlabelDiv.classList.add('sim-title-label-container');\n\t\toption.appendChild(labelDiv);\n\n\t\tif (!data.color) { // Hacky check for 'isButton'\n\t\t\tconst simLabel = document.createElement('span');\n\t\t\tsimLabel.textContent = 'WotLK Simulator';\n\t\t\tsimLabel.classList.add('sim-title-sim-label', 'sim-title-label');\n\t\t\tlabelDiv.appendChild(simLabel);\n\t\t}\n\n\t\tconst label = document.createElement('span');\n\t\tlabel.textContent = data.text;\n\t\tlabel.classList.add('sim-title-spec-label', 'sim-title-label');\n\t\tlabelDiv.appendChild(label);\n\n\t\treturn optionContainer;\n\t}\n}\n","import { Component } from './components/component.js';\nimport { NumberPicker } from './components/number_picker.js';\nimport { ResultsViewer } from './components/results_viewer.js';\nimport { Title } from './components/title.js';\nimport { Spec } from './proto/common.js';\nimport { SimOptions } from './proto/api.js';\nimport { LaunchStatus } from './launched_sims.js';\nimport { specToLocalStorageKey } from './proto_utils/utils.js';\n\nimport { Sim, SimError } from './sim.js';\nimport { Target } from './target.js';\nimport { EventID, TypedEvent } from './typed_event.js';\n\ndeclare var tippy: any;\ndeclare var pako: any;\n\nconst URLMAXLEN = 2048;\nconst noticeText = '';\n//const noticeText = 'We are looking for help migrating our sims to Wrath of the Lich King. If you\\'d like to participate in a fun side project working with an open-source community please <a href=\"https://discord.gg/jJMPr9JWwx\" target=\"_blank\">join our discord!</a>';\n\n// Config for displaying a warning to the user whenever a condition is met.\nexport interface SimWarning {\n\tupdateOn: TypedEvent<any>,\n\tgetContent: () => string | Array<string>,\n}\n\nexport interface SimUIConfig {\n\t// The spec, if an individual sim, or null if the raid sim.\n\tspec: Spec | null,\n\tlaunchStatus: LaunchStatus,\n\tknownIssues?: Array<string>,\n}\n\n// Shared UI for all individual sims and the raid sim.\nexport abstract class SimUI extends Component {\n\treadonly sim: Sim;\n\treadonly isWithinRaidSim: boolean;\n\n\t// Emits when anything from the sim, raid, or encounter changes.\n\treadonly changeEmitter;\n\n\treadonly resultsViewer: ResultsViewer\n\n\tprivate warnings: Array<SimWarning>;\n\tprivate warningsTippy: any;\n\n\tconstructor(parentElem: HTMLElement, sim: Sim, config: SimUIConfig) {\n\t\tsuper(parentElem, 'sim-ui');\n\t\tthis.sim = sim;\n\t\tthis.rootElem.innerHTML = simHTML;\n\t\tthis.isWithinRaidSim = this.rootElem.closest('.within-raid-sim') != null;\n\t\tif (!this.isWithinRaidSim) {\n\t\t\tthis.rootElem.classList.add('not-within-raid-sim');\n\t\t}\n\n\t\tthis.changeEmitter = TypedEvent.onAny([\n\t\t\tthis.sim.changeEmitter,\n\t\t], 'SimUIChange');\n\n\t\tthis.sim.crashEmitter.on((eventID: EventID, error: SimError) => this.handleCrash(error));\n\n\t\tconst updateShowDamageMetrics = () => {\n\t\t\tif (this.sim.getShowDamageMetrics()) {\n\t\t\t\tthis.rootElem.classList.remove('hide-damage-metrics');\n\t\t\t} else {\n\t\t\t\tthis.rootElem.classList.add('hide-damage-metrics');\n\t\t\t}\n\t\t};\n\t\tupdateShowDamageMetrics();\n\t\tthis.sim.showDamageMetricsChangeEmitter.on(updateShowDamageMetrics);\n\n\t\tconst updateShowThreatMetrics = () => {\n\t\t\tif (this.sim.getShowThreatMetrics()) {\n\t\t\t\tthis.rootElem.classList.remove('hide-threat-metrics');\n\t\t\t} else {\n\t\t\t\tthis.rootElem.classList.add('hide-threat-metrics');\n\t\t\t}\n\t\t};\n\t\tupdateShowThreatMetrics();\n\t\tthis.sim.showThreatMetricsChangeEmitter.on(updateShowThreatMetrics);\n\n\t\tconst updateShowHealingMetrics = () => {\n\t\t\tif (this.sim.getShowHealingMetrics()) {\n\t\t\t\tthis.rootElem.classList.remove('hide-healing-metrics');\n\t\t\t} else {\n\t\t\t\tthis.rootElem.classList.add('hide-healing-metrics');\n\t\t\t}\n\t\t};\n\t\tupdateShowHealingMetrics();\n\t\tthis.sim.showHealingMetricsChangeEmitter.on(updateShowHealingMetrics);\n\n\t\tconst updateShowExperimental = () => {\n\t\t\tif (this.sim.getShowExperimental()) {\n\t\t\t\tthis.rootElem.classList.remove('hide-experimental');\n\t\t\t} else {\n\t\t\t\tthis.rootElem.classList.add('hide-experimental');\n\t\t\t}\n\t\t};\n\t\tupdateShowExperimental();\n\t\tthis.sim.showExperimentalChangeEmitter.on(updateShowExperimental);\n\n\t\tconst noticesElem = document.getElementsByClassName('notices')[0] as HTMLElement;\n\t\tif (noticeText) {\n\t\t\ttippy(noticesElem, {\n\t\t\t\tcontent: noticeText,\n\t\t\t\tallowHTML: true,\n\t\t\t\tinteractive: true,\n\t\t\t});\n\t\t} else {\n\t\t\tnoticesElem.remove();\n\t\t}\n\n\t\tthis.warnings = [];\n\t\tconst warningsElem = document.getElementsByClassName('warnings')[0] as HTMLElement;\n\t\tthis.warningsTippy = tippy(warningsElem, {\n\t\t\tcontent: '',\n\t\t\tallowHTML: true,\n\t\t});\n\t\tthis.updateWarnings();\n\n\t\tlet statusStr = '';\n\t\tif (config.launchStatus == LaunchStatus.Unlaunched) {\n\t\t\tstatusStr = 'This sim is a WORK IN PROGRESS. It is not fully developed and should not be used for general purposes.';\n\t\t} else if (config.launchStatus == LaunchStatus.Alpha) {\n\t\t\tstatusStr = 'This sim is in ALPHA. Bugs are expected; please let us know if you find one!';\n\t\t} else if (config.launchStatus == LaunchStatus.Beta) {\n\t\t\tstatusStr = 'This sim is in BETA. There may still be a few bugs; please let us know if you find one!';\n\t\t}\n\t\tif (statusStr) {\n\t\t\tconfig.knownIssues = [statusStr].concat(config.knownIssues || []);\n\t\t}\n\t\tif (config.knownIssues && config.knownIssues.length) {\n\t\t\tconst knownIssuesContainer = document.getElementsByClassName('known-issues')[0] as HTMLElement;\n\t\t\tknownIssuesContainer.style.display = 'initial';\n\t\t\ttippy(knownIssuesContainer, {\n\t\t\t\tcontent: `\n\t\t\t\t<ul class=\"known-issues-tooltip\">\n\t\t\t\t\t${config.knownIssues.map(issue => '<li>' + issue + '</li>').join('')}\n\t\t\t\t</ul>\n\t\t\t\t`,\n\t\t\t\tallowHTML: true,\n\t\t\t\tinteractive: true,\n\t\t\t});\n\t\t}\n\n\t\tconst resultsViewerElem = this.rootElem.getElementsByClassName('sim-sidebar-results')[0] as HTMLElement;\n\t\tthis.resultsViewer = new ResultsViewer(resultsViewerElem);\n\n\t\tconst titleElem = this.rootElem.getElementsByClassName('sim-sidebar-title')[0] as HTMLElement;\n\t\tconst title = new Title(titleElem, config.spec);\n\n\t\tconst simActionsContainer = this.rootElem.getElementsByClassName('sim-sidebar-actions')[0] as HTMLElement;\n\t\tconst iterationsPicker = new NumberPicker(simActionsContainer, this.sim, {\n\t\t\tlabel: 'Iterations',\n\t\t\textraCssClasses: [\n\t\t\t\t'iterations-picker',\n\t\t\t\t'within-raid-sim-hide',\n\t\t\t],\n\t\t\tchangedEvent: (sim: Sim) => sim.iterationsChangeEmitter,\n\t\t\tgetValue: (sim: Sim) => sim.getIterations(),\n\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\t\tsim.setIterations(eventID, newValue);\n\t\t\t},\n\t\t});\n\n\t\tconst reportBug = document.createElement('span');\n\t\treportBug.classList.add('report-bug', 'fa', 'fa-bug');\n\t\ttippy(reportBug, {\n\t\t\t'content': 'Report a bug / request a feature',\n\t\t\t'allowHTML': true,\n\t\t});\n\t\treportBug.addEventListener('click', event => {\n\t\t\twindow.open('https://github.com/wowsims/wotlk/issues/new/choose', '_blank');\n\t\t});\n\t\tthis.addToolbarItem(reportBug);\n\n\t\tif (!this.isWithinRaidSim) {\n\t\t\twindow.addEventListener('message', async event => {\n\t\t\t\tif (event.data == 'runOnce') {\n\t\t\t\t\tthis.runSimOnce();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tconst patreon = document.createElement('span');\n\t\tpatreon.classList.add('patreon-link', 'fa', 'fa-brands', 'fa-patreon');\n\t\ttippy(patreon, {\n\t\t\t'content': 'Support our devs on Patreon',\n\t\t\t'allowHTML': true,\n\t\t});\n\t\tpatreon.addEventListener('click', event => {\n\t\t\twindow.open('https://patreon.com/wowsims', '_blank');\n\t\t});\n\t\tthis.addToolbarItem(patreon);\n\n\t\tconst downloadBinary = document.createElement('span');\n\t\t// downloadBinary.src = \"/wotlk/assets/img/gauge.svg\"\n\t\tdownloadBinary.classList.add('downbin', 'hide');\n\t\tdownloadBinary.addEventListener('click', event => {\n\t\t\twindow.open('https://github.com/wowsims/wotlk/releases', '_blank');\n\t\t});\n\n\t\tif (document.location.href.includes(\"localhost\")) {\n\t\t\tfetch(document.location.protocol + \"//\" + document.location.host + \"/version\").then(resp => {\n\t\t\t\tresp.json()\n\t\t\t\t\t.then((versionInfo) => {\n\t\t\t\t\t\tif (versionInfo.outdated == 2) {\n\t\t\t\t\t\t\ttippy(downloadBinary, {\n\t\t\t\t\t\t\t\t'content': 'Newer version of simulator available for download',\n\t\t\t\t\t\t\t\t'allowHTML': true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tdownloadBinary.classList.add('downbinalert');\n\t\t\t\t\t\t\tthis.addToolbarItem(downloadBinary);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tconsole.warn('No version info found!');\n\t\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\ttippy(downloadBinary, {\n\t\t\t\t'content': 'Download simulator for faster simulating',\n\t\t\t\t'allowHTML': true,\n\t\t\t});\n\t\t\tdownloadBinary.classList.add('downbinnorm');\n\t\t\tthis.addToolbarItem(downloadBinary);\n\t\t}\n\t}\n\n\taddAction(name: string, cssClass: string, actFn: () => void) {\n\t\tconst simActionsContainer = this.rootElem.getElementsByClassName('sim-sidebar-actions')[0] as HTMLElement;\n\t\tconst iterationsPicker = this.rootElem.getElementsByClassName('iterations-picker')[0] as HTMLElement;\n\n\t\tconst button = document.createElement('button');\n\t\tbutton.classList.add('sim-sidebar-actions-button', cssClass);\n\t\tbutton.textContent = name;\n\t\tbutton.addEventListener('click', actFn);\n\t\tsimActionsContainer.insertBefore(button, iterationsPicker);\n\t}\n\n\taddTab(title: string, cssClass: string, innerHTML: string) {\n\t\tconst simTabsContainer = this.rootElem.getElementsByClassName('sim-tabs')[0] as HTMLElement;\n\t\tconst simTabContentsContainer = this.rootElem.getElementsByClassName('tab-content')[0] as HTMLElement;\n\t\tconst topBar = simTabsContainer.getElementsByClassName('sim-top-bar')[0] as HTMLElement;\n\n\t\tconst contentId = cssClass.replace(/\\s+/g, '-') + '-tab';\n\t\tconst isFirstTab = simTabsContainer.children.length == 1;\n\n\t\tconst newTab = document.createElement('li');\n\t\tnewTab.innerHTML = `<a data-toggle=\"tab\" href=\"#${contentId}\">${title}</a>`;\n\t\tnewTab.classList.add(cssClass + '-tab');\n\n\t\tconst newContent = document.createElement('div');\n\t\tnewContent.id = contentId;\n\t\tnewContent.classList.add(cssClass, 'tab-pane', 'fade');\n\t\tnewContent.innerHTML = innerHTML;\n\n\t\tif (isFirstTab) {\n\t\t\tnewTab.classList.add('active');\n\t\t\tnewContent.classList.add('active', 'in');\n\t\t}\n\n\t\tsimTabsContainer.insertBefore(newTab, topBar);\n\t\tsimTabContentsContainer.appendChild(newContent);\n\t}\n\n\taddToolbarItem(elem: HTMLElement) {\n\t\tconst topBar = this.rootElem.getElementsByClassName('sim-top-bar')[0] as HTMLElement;\n\t\telem.classList.add('sim-top-bar-item');\n\t\ttopBar.appendChild(elem);\n\t}\n\n\tprivate updateWarnings() {\n\t\tconst activeWarnings = this.warnings.map(warning => warning.getContent()).flat().filter(content => content != '');\n\n\t\tconst warningsElem = document.getElementsByClassName('warnings')[0] as HTMLElement;\n\t\tif (activeWarnings.length == 0) {\n\t\t\twarningsElem.style.display = 'none';\n\t\t} else {\n\t\t\twarningsElem.style.display = 'initial';\n\t\t\tthis.warningsTippy.setContent(`\n\t\t\t\t<ul class=\"known-issues-tooltip\">\n\t\t\t\t\t${activeWarnings.map(content => '<li>' + content + '</li>').join('')}\n\t\t\t\t</ul>`\n\t\t\t);\n\t\t}\n\t}\n\n\taddWarning(warning: SimWarning) {\n\t\tthis.warnings.push(warning);\n\t\twarning.updateOn.on(() => this.updateWarnings());\n\t\tthis.updateWarnings();\n\t}\n\n\t// Returns a key suitable for the browser's localStorage feature.\n\tabstract getStorageKey(postfix: string): string;\n\n\tgetSettingsStorageKey(): string {\n\t\treturn this.getStorageKey('__currentSettings__');\n\t}\n\n\tgetSavedEncounterStorageKey(): string {\n\t\t// By skipping the call to this.getStorageKey(), saved encounters will be\n\t\t// shared across all sims.\n\t\treturn 'sharedData__savedEncounter__';\n\t}\n\n\tisIndividualSim(): boolean {\n\t\treturn this.rootElem.classList.contains('individual-sim-ui');\n\t}\n\n\tasync runSim(onProgress: Function) {\n\t\tthis.resultsViewer.setPending();\n\t\ttry {\n\t\t\tawait this.sim.runRaidSim(TypedEvent.nextEventID(), onProgress);\n\t\t} catch (e) {\n\t\t\tthis.resultsViewer.hideAll();\n\t\t\tthis.handleCrash(e);\n\t\t}\n\t}\n\n\tasync runSimOnce() {\n\t\tthis.resultsViewer.setPending();\n\t\ttry {\n\t\t\tawait this.sim.runRaidSimWithLogs(TypedEvent.nextEventID());\n\t\t} catch (e) {\n\t\t\tthis.resultsViewer.hideAll();\n\t\t\tthis.handleCrash(e);\n\t\t}\n\t}\n\n\thandleCrash(error: any) {\n\t\tif (!(error instanceof SimError)) {\n\t\t\talert(error);\n\t\t\treturn;\n\t\t}\n\n\t\tconst errorStr = (error as SimError).errorStr;\n\t\tif (window.confirm('Simulation Failure:\\n' + errorStr + '\\nPress Ok to file crash report')) {\n\t\t\t// Splice out just the line numbers\n\t\t\tconst hash = this.hashCode(errorStr);\n\t\t\tconst link = this.toLink();\n\t\t\tconst rngSeed = this.sim.getLastUsedRngSeed();\n\t\t\tfetch('https://api.github.com/search/issues?q=is:issue+is:open+repo:wowsims/wotlk+' + hash).then(resp => {\n\t\t\t\tresp.json().then((issues) => {\n\t\t\t\t\tif (issues.total_count > 0) {\n\t\t\t\t\t\twindow.open(issues.items[0].html_url, '_blank');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst base_url = 'https://github.com/wowsims/wotlk/issues/new?assignees=&labels=&title=Crash%20Report%20'\n\t\t\t\t\t\tconst base = `${base_url}${hash}&body=`;\n\t\t\t\t\t\tconst maxBodyLength = URLMAXLEN - base.length;\n\t\t\t\t\t\tlet issueBody = encodeURIComponent(`Link:\\n${link}\\n\\nRNG Seed: ${rngSeed}\\n\\n${errorStr}`)\n\t\t\t\t\t\twhile (issueBody.length > maxBodyLength) {\n\t\t\t\t\t\t\tissueBody = issueBody.slice(0, issueBody.lastIndexOf('%')) // Avoid truncating in the middle of a URLencoded segment\n\t\t\t\t\t\t}\n\t\t\t\t\t\twindow.open(base + issueBody, '_blank');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}).catch(fetchErr => {\n\t\t\t\talert('Failed to file report... try again another time:' + fetchErr);\n\t\t\t});\n\t\t}\n\t\treturn;\n\t}\n\n\thashCode(str: string): number {\n\t\tlet hash = 0;\n\t\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\t\tlet chr = str.charCodeAt(i);\n\t\t\thash = (hash << 5) - hash + chr;\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\t\treturn hash;\n\t}\n\n\tabstract applyDefaults(eventID: EventID): void;\n\tabstract toLink(): string;\n}\n\nconst simHTML = `\n<div class=\"sim-root\">\n  <section class=\"sim-sidebar\">\n    <div class=\"sim-sidebar-title\"></div>\n    <div class=\"sim-sidebar-actions within-raid-sim-hide\"></div>\n    <div class=\"sim-sidebar-results within-raid-sim-hide\"></div>\n    <div class=\"sim-sidebar-footer\"></div>\n  </section>\n  <section class=\"sim-main\">\n\t\t<div class=\"sim-toolbar\">\n\t\t\t<ul class=\"sim-tabs nav nav-tabs\">\n\t\t\t\t<li class=\"sim-top-bar\">\n\t\t\t\t\t<span class=\"notices fas fa-exclamation-circle\"></span>\n\t\t\t\t\t<span class=\"warnings fa fa-exclamation-triangle\"></span>\n\t\t\t\t\t<div class=\"known-issues\">Known Issues</div>\n\t\t\t\t</li>\n\t\t\t</ul>\n    </div>\n    <div class=\"tab-content\">\n    </div>\n  </section>\n</div>\n`;\n","import { StatWeightsRequest, StatWeightsResult, StatWeightValues, ProgressMetrics } from '../proto/api.js';\nimport { ItemSlot } from '../proto/common.js';\nimport { Gem } from '../proto/common.js';\nimport { GemColor } from '../proto/common.js';\nimport { Profession } from '../proto/common.js';\nimport { Stat } from '../proto/common.js';\nimport { Stats } from '../proto_utils/stats.js';\nimport { Gear } from '../proto_utils/gear.js';\nimport { getClassStatName, statOrder } from '../proto_utils/names.js';\nimport { IndividualSimUI } from '../individual_sim_ui.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { Player } from '../player.js';\nimport { stDevToConf90 } from '../utils.js';\nimport { BooleanPicker } from '../components/boolean_picker.js';\nimport { NumberPicker } from '../components/number_picker.js';\nimport { ResultsViewer } from '../components/results_viewer.js';\nimport { combinations, combinationsWithDups, permutations, getEnumValues, maxIndex, sum } from '../utils.js';\n\nimport * as Gems from '../proto_utils/gems.js';\n\nimport { Popup } from './popup.js';\n\ndeclare var tippy: any;\n\nexport function addStatWeightsAction(simUI: IndividualSimUI<any>, epStats: Array<Stat>, epReferenceStat: Stat) {\n\tsimUI.addAction('STAT WEIGHTS', 'ep-weights-action', () => {\n\t\tnew EpWeightsMenu(simUI, epStats, epReferenceStat);\n\t});\n}\n\nclass EpWeightsMenu extends Popup {\n\tprivate readonly simUI: IndividualSimUI<any>;\n\tprivate readonly tableContainer: HTMLElement;\n\tprivate readonly tableBody: HTMLElement;\n\tprivate readonly tableHeader: HTMLElement;\n\tprivate readonly resultsViewer: ResultsViewer;\n\n\tprivate statsType: string;\n\tprivate epStats: Array<Stat>;\n\tprivate epReferenceStat: Stat;\n\n\tconstructor(simUI: IndividualSimUI<any>, epStats: Array<Stat>, epReferenceStat: Stat) {\n\t\tsuper(simUI.rootElem);\n\t\tthis.simUI = simUI;\n\t\tthis.statsType = 'ep';\n\t\tthis.epStats = epStats;\n\t\tthis.epReferenceStat = epReferenceStat;\n\n\t\tthis.rootElem.classList.add('ep-weights-menu');\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"ep-weights-header\">\n\t\t\t\t<div class=\"ep-weights-actions\">\n\t\t\t\t\t<button class=\"sim-button calc-weights\">CALCULATE</button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"ep-weights-results\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"stats-controls-row\">\n\t\t\t\t<div class=\"ep-weights-options\">\n\t\t\t\t\t<select class=\"ep-type-select\">\n\t\t\t\t\t\t<option value=\"ep\">EP</option>\n\t\t\t\t\t\t<option value=\"weight\">Weights</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"show-all-stats-container\">\n\t\t\t\t</div>\n\t\t\t\t<button class=\"sim-button optimize-gems\">OPTIMIZE GEMS</button>\n\t\t\t</div>\n\t\t\t<p>The 'Current EPs' column displays the values currently used by the item pickers to sort items. Use <span class=\"fa fa-copy\" style=\"color: var(--theme-color-primary);\"></span> icon above the EPs to use newly calculated EPs. </p>\n\t\t\t<div class=\"ep-weights-table\">\n\t\t\t\t<table class=\"results-ep-table\">\n\t\t\t\t\t<tbody id=\"ep-tbody\">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Stat</th>\n\t\t\t\t\t\t\t<th class=\"damage-metrics type-weight\"><span>DPS Weight</span><span class=\"col-action fa fa-copy\"></span></th>\n\t\t\t\t\t\t\t<th class=\"damage-metrics type-ep\"><span>DPS EP</span><span class=\"col-action fa fa-copy\"></span></th>\n\t\t\t\t\t\t\t<th class=\"healing-metrics type-weight\"><span>HPS Weight</span><span class=\"col-action fa fa-copy\"></span></th>\n\t\t\t\t\t\t\t<th class=\"healing-metrics type-ep\"><span>HPS EP</span><span class=\"col-action fa fa-copy\"></span></th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-weight\"><span>TPS Weight</span><span class=\"col-action fa fa-copy\"></span></th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-ep\"><span>TPS EP</span><span class=\"col-action fa fa-copy\"></span></th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-weight\"><span>DTPS Weight</span><span class=\"col-action fa fa-copy\"></span></th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-ep\"><span>DTPS EP</span><span class=\"col-action fa fa-copy\"></span></th>\n\t\t\t\t\t\t\t<th><span>Current EP</span><span class=\"col-action fa fa-recycle\"></span></th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.tableContainer = this.rootElem.getElementsByClassName('ep-weights-table')[0] as HTMLElement;\n\t\tthis.tableBody = this.rootElem.querySelector('#ep-tbody') as HTMLElement;\n\t\tthis.tableHeader = this.rootElem.querySelector('#ep-tbody > tr') as HTMLElement;\n\n\t\tconst resultsViewerElem = this.rootElem.getElementsByClassName('ep-weights-results')[0] as HTMLElement;\n\t\tthis.resultsViewer = new ResultsViewer(resultsViewerElem);\n\n\t\tconst updateType = () => {\n\t\t\tif (this.statsType == 'ep') {\n\t\t\t\tthis.tableContainer.classList.remove('stats-type-weight');\n\t\t\t\tthis.tableContainer.classList.add('stats-type-ep');\n\t\t\t} else {\n\t\t\t\tthis.tableContainer.classList.add('stats-type-weight');\n\t\t\t\tthis.tableContainer.classList.remove('stats-type-ep');\n\t\t\t}\n\t\t};\n\n\t\tconst selectElem = this.rootElem.getElementsByClassName('ep-type-select')[0] as HTMLSelectElement;\n\t\tselectElem.addEventListener('input', event => {\n\t\t\tthis.statsType = selectElem.value;\n\t\t\tupdateType();\n\t\t});\n\t\tselectElem.value = this.statsType;\n\t\tupdateType();\n\n\t\tconst calcButton = this.rootElem.getElementsByClassName('calc-weights')[0] as HTMLElement;\n\t\tcalcButton.addEventListener('click', async event => {\n\t\t\tthis.resultsViewer.setPending();\n\t\t\tconst iterations = this.simUI.sim.getIterations();\n\t\t\tconst result = await this.simUI.player.computeStatWeights(TypedEvent.nextEventID(), this.epStats, this.epReferenceStat, (progress: ProgressMetrics) => {\n\t\t\t\tthis.setSimProgress(progress);\n\t\t\t});\n\t\t\tthis.resultsViewer.hideAll();\n\t\t\tthis.simUI.prevEpIterations = iterations;\n\t\t\tthis.simUI.prevEpSimResult = result;\n\t\t\tthis.updateTable(iterations, result);\n\t\t});\n\n\t\tconst colActionButtons = Array.from(this.rootElem.getElementsByClassName('col-action')) as Array<HTMLSelectElement>;\n\t\tconst makeUpdateWeights = (button: HTMLElement, labelTooltip: string, tooltip: string, weightsFunc: () => Array<number>) => {\n\t\t\ttippy(button.previousSibling, {\n\t\t\t\t'content': labelTooltip,\n\t\t\t\t'allowHTML': true,\n\t\t\t});\n\t\t\ttippy(button, {\n\t\t\t\t'content': tooltip,\n\t\t\t\t'allowHTML': true,\n\t\t\t});\n\t\t\tbutton.addEventListener('click', event => {\n\t\t\t\tthis.simUI.player.setEpWeights(TypedEvent.nextEventID(), new Stats(weightsFunc()));\n\t\t\t});\n\t\t};\n\n\t\tconst epRefStatName = getClassStatName(this.epReferenceStat, this.simUI.player.getClass());\n\t\tconst armorStatName = getClassStatName(Stat.StatArmor, this.simUI.player.getClass());\n\t\tmakeUpdateWeights(colActionButtons[0], 'Per-point increase in DPS (Damage Per Second) for each stat.', 'Copy to Current EP', () => this.getPrevSimResult().dps!.weights);\n\t\tmakeUpdateWeights(colActionButtons[1], `EP (Equivalency Points) for DPS (Damage Per Second) for each stat. Normalized by ${epRefStatName}.`, 'Copy to Current EP', () => this.getPrevSimResult().dps!.epValues);\n\t\tmakeUpdateWeights(colActionButtons[2], 'Per-point increase in HPS (Healing Per Second) for each stat.', 'Copy to Current EP', () => this.getPrevSimResult().hps!.weights);\n\t\tmakeUpdateWeights(colActionButtons[3], `EP (Equivalency Points) for HPS (Healing Per Second) for each stat. Normalized by ${epRefStatName}.`, 'Copy to Current EP', () => this.getPrevSimResult().hps!.epValues);\n\t\tmakeUpdateWeights(colActionButtons[4], 'Per-point increase in TPS (Threat Per Second) for each stat.', 'Copy to Current EP', () => this.getPrevSimResult().tps!.weights);\n\t\tmakeUpdateWeights(colActionButtons[5], `EP (Equivalency Points) for TPS (Threat Per Second) for each stat. Normalized by ${epRefStatName}.`, 'Copy to Current EP', () => this.getPrevSimResult().tps!.epValues);\n\t\tmakeUpdateWeights(colActionButtons[6], 'Per-point increase in DTPS (Damage Taken Per Second) for each stat.', 'Copy to Current EP', () => this.getPrevSimResult().dtps!.weights);\n\t\tmakeUpdateWeights(colActionButtons[7], `EP (Equivalency Points) for DTPS (Damage Taken Per Second) for each stat. Normalized by ${armorStatName}.`, 'Copy to Current EP', () => this.getPrevSimResult().dtps!.epValues);\n\t\tmakeUpdateWeights(colActionButtons[8], 'Current EP Weights. Used to sort the gear selector menus.', 'Restore Default EP', () => this.simUI.individualConfig.defaults.epWeights.asArray());\n\n\t\tconst showAllStatsContainer = this.rootElem.getElementsByClassName('show-all-stats-container')[0] as HTMLElement;\n\t\tnew BooleanPicker(showAllStatsContainer, this, {\n\t\t\tlabel: 'Show All Stats',\n\t\t\tchangedEvent: () => new TypedEvent(),\n\t\t\tgetValue: () => this.tableContainer.classList.contains('show-all-stats'),\n\t\t\tsetValue: (eventID: EventID, menu: EpWeightsMenu, newValue: boolean) => {\n\t\t\t\tif (newValue) {\n\t\t\t\t\tthis.tableContainer.classList.add('show-all-stats');\n\t\t\t\t} else {\n\t\t\t\t\tthis.tableContainer.classList.remove('show-all-stats');\n\t\t\t\t}\n\t\t\t\tthis.applyAlternatingColors();\n\t\t\t},\n\t\t});\n\n\t\tthis.updateTable(this.simUI.prevEpIterations || 1, this.getPrevSimResult());\n\n\t\tconst optimizeGemsButton = this.rootElem.getElementsByClassName('optimize-gems')[0] as HTMLElement;\n\t\ttippy(optimizeGemsButton, {\n\t\t\t'content': `\n\t\t\t\t<p><span class=\"warnings fa fa-exclamation-triangle\"></span>WARNING: This feature is experimental, and will not always produce the most optimal gems especially when interacting with soft/hard stat caps.</p>\n\t\t\t\t<p>Optimizes equipped gems to maximize EP, based on the values in <b>Current EP</b>.</p>\n\t\t\t\t<p>Does not change the meta gem, but ensures that its condition is met. Uses JC gems if Jewelcrafting is a selected profession.</p>\n\t\t\t`,\n\t\t\t'allowHTML': true,\n\t\t});\n\t\toptimizeGemsButton.addEventListener('click', event => this.optimizeGems(TypedEvent.nextEventID()));\n\n\t\tthis.addCloseButton();\n\t}\n\n\tsetSimProgress(progress: ProgressMetrics) {\n\t\tthis.resultsViewer.setContent(`\n  <div class=\"results-sim\">\n  \t\t\t<div class=\"\"> ${progress.completedSims} / ${progress.totalSims}<br>simulations complete</div>\n  \t\t\t<div class=\"\">\n\t\t\t\t${progress.completedIterations} / ${progress.totalIterations}<br>iterations complete\n\t\t\t</div>\n  </div>\n`);\n\t}\n\n\tprivate updateTable(iterations: number, result: StatWeightsResult) {\n\t\tthis.tableHeader.remove();\n\t\tthis.tableBody.innerHTML = '';\n\t\tthis.tableBody.appendChild(this.tableHeader);\n\n\t\tconst allStats = statOrder.filter(stat => ![Stat.StatMana, Stat.StatEnergy, Stat.StatRage].includes(stat));\n\t\tallStats.forEach(stat => {\n\t\t\tconst row = this.makeTableRow(stat, iterations, result);\n\t\t\tif (!this.epStats.includes(stat)) {\n\t\t\t\trow.classList.add('non-ep-stat');\n\t\t\t}\n\t\t\tthis.tableBody.appendChild(row);\n\t\t});\n\n\t\tthis.applyAlternatingColors();\n\t}\n\n\tprivate makeTableRow(stat: Stat, iterations: number, result: StatWeightsResult): HTMLElement {\n\t\tconst row = document.createElement('tr');\n\t\trow.innerHTML = `\n\t\t\t<td>${getClassStatName(stat, this.simUI.player.getClass())}</td>\n\t\t\t<td class=\"stdev-cell damage-metrics type-weight\"><span>${result.dps!.weights[stat].toFixed(2)}</span><span>${stDevToConf90(result.dps!.weightsStdev[stat], iterations).toFixed(2)}</span></td>\n\t\t\t<td class=\"stdev-cell damage-metrics type-ep\"><span>${result.dps!.epValues[stat].toFixed(2)}</span><span>${stDevToConf90(result.dps!.epValuesStdev[stat], iterations).toFixed(2)}</span></td>\n\t\t\t<td class=\"stdev-cell threat-metrics type-weight\"><span>${result.tps!.weights[stat].toFixed(2)}</span><span>${stDevToConf90(result.tps!.weightsStdev[stat], iterations).toFixed(2)}</span></td>\n\t\t\t<td class=\"stdev-cell threat-metrics type-ep\"><span>${result.tps!.epValues[stat].toFixed(2)}</span><span>${stDevToConf90(result.tps!.epValuesStdev[stat], iterations).toFixed(2)}</span></td>\n\t\t\t<td class=\"stdev-cell threat-metrics type-weight\"><span>${result.dtps!.weights[stat].toFixed(2)}</span><span>${stDevToConf90(result.dtps!.weightsStdev[stat], iterations).toFixed(2)}</span></td>\n\t\t\t<td class=\"stdev-cell threat-metrics type-ep\"><span>${result.dtps!.epValues[stat].toFixed(2)}</span><span>${stDevToConf90(result.dtps!.epValuesStdev[stat], iterations).toFixed(2)}</span></td>\n\t\t\t<td class=\"current-ep\"></td>\n\t\t`;\n\n\t\tconst currentEpCell = row.querySelector('.current-ep') as HTMLElement;\n\t\tnew NumberPicker(currentEpCell, this.simUI.player, {\n\t\t\tfloat: true,\n\t\t\tchangedEvent: (player: Player<any>) => player.epWeightsChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => player.getEpWeights().getStat(stat),\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\t\t\tconst epWeights = player.getEpWeights().withStat(stat, newValue);\n\t\t\t\tplayer.setEpWeights(eventID, epWeights);\n\t\t\t},\n\t\t});\n\n\t\treturn row;\n\t}\n\n\tprivate applyAlternatingColors() {\n\t\t(Array.from(this.tableBody.childNodes) as Array<HTMLElement>)\n\t\t\t.filter(row => window.getComputedStyle(row).getPropertyValue('display') != 'none')\n\t\t\t.forEach((row, i) => {\n\t\t\t\tif (i % 2 == 0) {\n\t\t\t\t\trow.classList.remove('odd');\n\t\t\t\t} else {\n\t\t\t\t\trow.classList.add('odd');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate getPrevSimResult(): StatWeightsResult {\n\t\treturn this.simUI.prevEpSimResult || StatWeightsResult.create({\n\t\t\tdps: {\n\t\t\t\tweights: new Stats().asArray(),\n\t\t\t\tweightsStdev: new Stats().asArray(),\n\t\t\t\tepValues: new Stats().asArray(),\n\t\t\t\tepValuesStdev: new Stats().asArray(),\n\t\t\t},\n\t\t\ttps: {\n\t\t\t\tweights: new Stats().asArray(),\n\t\t\t\tweightsStdev: new Stats().asArray(),\n\t\t\t\tepValues: new Stats().asArray(),\n\t\t\t\tepValuesStdev: new Stats().asArray(),\n\t\t\t},\n\t\t\tdtps: {\n\t\t\t\tweights: new Stats().asArray(),\n\t\t\t\tweightsStdev: new Stats().asArray(),\n\t\t\t\tepValues: new Stats().asArray(),\n\t\t\t\tepValuesStdev: new Stats().asArray(),\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate optimizeGems(eventID: EventID) {\n\t\t// Replace 0 weights with a very tiny value, so we always prefer to take free stats even if the user gave a 0 weight.\n\t\tlet epWeights = this.simUI.player.getEpWeights();\n\t\tepWeights = new Stats(epWeights.asArray().map(w => w == 0 ? 1e-8 : w));\n\n\t\tconst gear = this.simUI.player.getGear();\n\t\tconst allGems = this.simUI.sim.getGems();\n\t\tconst phase = this.simUI.sim.getPhase();\n\t\tconst isBlacksmithing = this.simUI.player.isBlacksmithing();\n\t\tconst isJewelcrafting = this.simUI.player.hasProfession(Profession.Jewelcrafting);\n\n\t\tconst optimizedGear = EpWeightsMenu.optimizeGemsForWeights(epWeights, gear, allGems, phase, isBlacksmithing, isJewelcrafting);\n\t\tthis.simUI.player.setGear(eventID, optimizedGear);\n\t}\n\n\tprivate static optimizeGemsForWeights(epWeights: Stats, gear: Gear, allGems: Array<Gem>, phase: number, isBlacksmithing: boolean, isJewelcrafting: boolean): Gear {\n\t\tconst unrestrictedGems = allGems.filter(gem => Gems.isUnrestrictedGem(gem, phase));\n\n\t\tconst {\n\t\t\tbestGemForColor: bestGemForColor,\n\t\t\tbestGemForColorEP: bestGemForColorEP,\n\t\t\tbestGemForSocket: bestGemForSocket,\n\t\t\tbestGemForSocketEP: bestGemForSocketEP,\n\t\t\tbestGem: bestGem,\n\t\t\tbestGemEP: bestGemEP,\n\t\t} = EpWeightsMenu.findBestGems(unrestrictedGems, epWeights);\n\n\t\tconst items = gear.asMap();\n\t\tconst socketBonusEPs = Object.values(items).map(item => item != null ? new Stats(item.item.socketBonus).computeEP(epWeights) : 0);\n\n\t\t// Start by optimally filling all items, ignoring meta condition.\n\t\tObject.entries(items).forEach(([itemSlot, equippedItem], i) => {\n\t\t\tif (equippedItem == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst item = equippedItem.item;\n\t\t\tconst socketColors = equippedItem.curSocketColors(isBlacksmithing);\n\n\t\t\t// Compare whether its better to match sockets + get socket bonus, or just use best gems.\n\t\t\tconst bestGemEPNotMatchingSockets = sum(socketColors.map(socketColor => socketColor == GemColor.GemColorMeta ? 0 : bestGemEP));\n\t\t\tconst bestGemEPMatchingSockets = socketBonusEPs[i] + sum(socketColors.map(socketColor => socketColor == GemColor.GemColorMeta ? 0 : bestGemForSocketEP[socketColor]));\n\n\t\t\tif (bestGemEPNotMatchingSockets > bestGemEPMatchingSockets) {\n\t\t\t\tsocketColors.forEach((socketColor, i) => {\n\t\t\t\t\tif (socketColor != GemColor.GemColorMeta) {\n\t\t\t\t\t\tequippedItem = equippedItem!.withGem(bestGem, i);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsocketColors.forEach((socketColor, i) => {\n\t\t\t\t\tif (socketColor != GemColor.GemColorMeta) {\n\t\t\t\t\t\tequippedItem = equippedItem!.withGem(bestGemForSocket[socketColor], i);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\titems[Number(itemSlot) as ItemSlot] = equippedItem;\n\t\t});\n\t\tgear = new Gear(items);\n\n\t\tconst allSockets: Array<{ itemSlot: ItemSlot, socketIdx: number }> = Object.keys(items).map((itemSlotStr) => {\n\t\t\tconst itemSlot = parseInt(itemSlotStr) as ItemSlot;\n\t\t\tconst item = items[itemSlot];\n\t\t\tif (!item) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst numSockets = item.numSockets(isBlacksmithing);\n\t\t\treturn [...Array(numSockets).keys()]\n\t\t\t\t.filter(socketIdx => item.item.gemSockets[socketIdx] != GemColor.GemColorMeta)\n\t\t\t\t.map(socketIdx => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\titemSlot: itemSlot,\n\t\t\t\t\t\tsocketIdx: socketIdx,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t}).flat();\n\t\tconst threeSocketCombos = permutations(allSockets, 3);\n\t\tconst calculateGearGemsEP = (gear: Gear): number => gear.statsFromGems(isBlacksmithing).computeEP(epWeights);\n\n\t\t// Now make adjustments to satisfy meta condition.\n\t\t// Use a wrapper function so we can return for readability.\n\t\tgear = ((gear: Gear): Gear => {\n\t\t\tconst metaGem = gear.getMetaGem();\n\t\t\tif (!metaGem) {\n\t\t\t\treturn gear;\n\t\t\t}\n\n\t\t\tconst condition = Gems.getMetaGemCondition(metaGem.id);\n\t\t\t// Only TBC gems use compare color conditions, so just ignore them.\n\t\t\tif (!condition || condition.isCompareColorCondition()) {\n\t\t\t\treturn gear;\n\t\t\t}\n\n\t\t\t// If there are very few non-meta gem slots, just skip because it's annoying to deal with.\n\t\t\tif (gear.getAllGems(isBlacksmithing).length - 1 < 3) {\n\t\t\t\treturn gear;\n\t\t\t}\n\n\t\t\t// In wrath, all meta gems use min colors condition (numRed >= r && numYellow >= y && numBlue >= b)\n\t\t\t// All conditions require 3 gems, e.g. 3 of a single color, 2 of one color and 1 of another, or 1 of each.\n\t\t\t// So the maximum number of gems that ever need to change is 3.\n\n\t\t\tconst colorCombos = EpWeightsMenu.getColorCombosToSatisfyCondition(condition);\n\n\t\t\tlet bestGear = gear;\n\t\t\tlet bestGearEP = calculateGearGemsEP(gear);\n\n\t\t\t// Use brute-force to try every possibility.\n\t\t\tcolorCombos.forEach(colorCombo => {\n\t\t\t\tthreeSocketCombos.forEach(socketCombo => {\n\t\t\t\t\tconst curItems = gear.asMap();\n\t\t\t\t\tfor (let i = 0; i < colorCombo.length; i++) {\n\t\t\t\t\t\tconst gemColor = colorCombo[i];\n\t\t\t\t\t\tconst { itemSlot, socketIdx } = socketCombo[i];\n\t\t\t\t\t\tcurItems[itemSlot] = curItems[itemSlot]!.withGem(bestGemForColor[gemColor], socketIdx);\n\t\t\t\t\t}\n\t\t\t\t\tconst curGear = new Gear(curItems);\n\t\t\t\t\tif (curGear.hasActiveMetaGem(isBlacksmithing)) {\n\t\t\t\t\t\tconst curGearEP = calculateGearGemsEP(curGear);\n\t\t\t\t\t\tif (curGearEP > bestGearEP) {\n\t\t\t\t\t\t\tbestGear = curGear;\n\t\t\t\t\t\t\tbestGearEP = curGearEP;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn bestGear;\n\t\t})(gear);\n\n\t\t// Now insert 3 JC gems, if Jewelcrafting is selected.\n\t\t// Use a wrapper function so we can return for readability.\n\t\tgear = ((gear: Gear): Gear => {\n\t\t\tif (!isJewelcrafting) {\n\t\t\t\treturn gear;\n\t\t\t}\n\n\t\t\tconst jcGems = allGems.filter(gem => gem.requiredProfession == Profession.Jewelcrafting);\n\n\t\t\tconst {\n\t\t\t\tbestGemForColor: bestJcGemForColor,\n\t\t\t\tbestGemForColorEP: bestJcGemForColorEP,\n\t\t\t\tbestGemForSocket: bestJcGemForSocket,\n\t\t\t\tbestGemForSocketEP: bestJcGemForSocketEP,\n\t\t\t\tbestGem: bestJcGem,\n\t\t\t\tbestGemEP: bestJcGemEP,\n\t\t\t} = EpWeightsMenu.findBestGems(jcGems, epWeights);\n\n\t\t\tlet bestGear = gear;\n\t\t\tlet bestGearEP = calculateGearGemsEP(gear);\n\n\t\t\tthreeSocketCombos.forEach(socketCombo => {\n\t\t\t\tconst curItems = gear.asMap();\n\t\t\t\tfor (let i = 0; i < socketCombo.length; i++) {\n\t\t\t\t\tconst { itemSlot, socketIdx } = socketCombo[i];\n\t\t\t\t\tconst ei = curItems[itemSlot]!;\n\t\t\t\t\tconst gemColor = ei.gems[socketIdx]!.color;\n\t\t\t\t\tcurItems[itemSlot] = ei.withGem(bestJcGemForColor[gemColor], socketIdx);\n\t\t\t\t}\n\n\t\t\t\tconst curGear = new Gear(curItems);\n\t\t\t\tif (curGear.hasActiveMetaGem(isBlacksmithing)) {\n\t\t\t\t\tconst curGearEP = calculateGearGemsEP(curGear);\n\t\t\t\t\tif (curGearEP > bestGearEP) {\n\t\t\t\t\t\tbestGear = curGear;\n\t\t\t\t\t\tbestGearEP = curGearEP;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn bestGear;\n\t\t})(gear);\n\n\t\treturn gear;\n\t}\n\n\t// Returns every possible way we could satisfy the gem condition.\n\tprivate static getColorCombosToSatisfyCondition(condition: Gems.MetaGemCondition): Array<Array<GemColor>> {\n\t\tif (condition.isOneOfEach()) {\n\t\t\treturn [\n\t\t\t\tGems.PRIMARY_COLORS,\n\t\t\t\t[GemColor.GemColorPrismatic],\n\t\t\t].concat(\n\t\t\t\tGems.SECONDARY_COLORS.map((secondaryColor, i) => {\n\t\t\t\t\tconst remainingColor = Gems.PRIMARY_COLORS[i];\n\t\t\t\t\treturn Gems.socketToMatchingColors.get(remainingColor)!.map(matchingColor => [matchingColor, secondaryColor]);\n\t\t\t\t}).flat()\n\t\t\t);\n\t\t} else if (condition.isTwoAndOne()) {\n\t\t\tconst oneColor = Gems.PRIMARY_COLORS[[condition.minRed, condition.minYellow, condition.minBlue].indexOf(1)];\n\t\t\tconst twoColor = Gems.PRIMARY_COLORS[[condition.minRed, condition.minYellow, condition.minBlue].indexOf(2)];\n\t\t\tconst secondaryColor = Gems.SECONDARY_COLORS.find(color => Gems.gemColorMatchesSocket(color, oneColor) && Gems.gemColorMatchesSocket(color, twoColor))!;\n\n\t\t\treturn [\n\t\t\t\t// All the ways to get 1 point in both colors. These are partial combos,\n\t\t\t\t// which still need 1 more gem in the 2-color.\n\t\t\t\t[GemColor.GemColorPrismatic],\n\t\t\t\t[secondaryColor],\n\t\t\t\t[oneColor, twoColor],\n\t\t\t].map(partialCombo => {\n\t\t\t\treturn Gems.socketToMatchingColors.get(twoColor)!.map(matchingColor => partialCombo.concat([matchingColor]));\n\t\t\t}).flat();\n\t\t} else if (condition.isThreeOfAColor()) {\n\t\t\tconst threeColor = Gems.PRIMARY_COLORS[[condition.minRed, condition.minYellow, condition.minBlue].indexOf(3)];\n\t\t\tconst matchingColors = Gems.socketToMatchingColors.get(threeColor)!;\n\t\t\treturn combinationsWithDups(matchingColors, 3);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate static findBestGems(gemList: Array<Gem>, epWeights: Stats): BestGemsResult {\n\t\t// Best gem when we need a gem of a specific color.\n\t\tconst bestGemForColor: Array<Gem> = Gems.GEM_COLORS.map(color => null as unknown as Gem);\n\t\tconst bestGemForColorEP: Array<number> = Gems.GEM_COLORS.map(color => 0);\n\t\t// Best gem when we need to match a socket to activate a bonus.\n\t\tconst bestGemForSocket: Array<Gem> = bestGemForColor.slice();\n\t\tconst bestGemForSocketEP: Array<number> = bestGemForColorEP.slice();\n\t\t// The single best gem, when color doesn't matter.\n\t\tlet bestGem = gemList[0];\n\t\tlet bestGemEP = 0;\n\t\tgemList.forEach(gem => {\n\t\t\tconst gemEP = new Stats(gem.stats).computeEP(epWeights);\n\t\t\tif (gemEP > bestGemForColorEP[gem.color]) {\n\t\t\t\tbestGemForColorEP[gem.color] = gemEP;\n\t\t\t\tbestGemForColor[gem.color] = gem;\n\n\t\t\t\tif (gem.color != GemColor.GemColorMeta && gemEP > bestGemEP) {\n\t\t\t\t\tbestGemEP = gemEP;\n\t\t\t\t\tbestGem = gem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tGems.GEM_COLORS.forEach(socketColor => {\n\t\t\t\tif (Gems.gemMatchesSocket(gem, socketColor) && gemEP > bestGemForSocketEP[socketColor]) {\n\t\t\t\t\tbestGemForSocketEP[socketColor] = gemEP;\n\t\t\t\t\tbestGemForSocket[socketColor] = gem;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn {\n\t\t\tbestGemForColor: bestGemForColor,\n\t\t\tbestGemForColorEP: bestGemForColorEP,\n\t\t\tbestGemForSocket: bestGemForSocket,\n\t\t\tbestGemForSocketEP: bestGemForSocketEP,\n\t\t\tbestGem: bestGem,\n\t\t\tbestGemEP: bestGemEP,\n\t\t};\n\t}\n}\n\ninterface BestGemsResult {\n\tbestGemForColor: Array<Gem>,\n\tbestGemForColorEP: Array<number>,\n\tbestGemForSocket: Array<Gem>,\n\tbestGemForSocketEP: Array<number>,\n\tbestGem: Gem,\n\tbestGemEP: number,\n}\n","import { Class } from '../proto/common.js';\nimport { EquipmentSpec } from '../proto/common.js';\nimport { ItemSpec } from '../proto/common.js';\nimport { Race } from '../proto/common.js';\nimport { Spec } from '../proto/common.js';\nimport { Stat } from '../proto/common.js';\nimport { IndividualSimSettings } from '../proto/ui.js';\nimport { IndividualSimUI } from '../individual_sim_ui.js';\nimport { Player } from '../player.js';\nimport { classNames, nameToClass, nameToRace } from '../proto_utils/names.js';\nimport { specNames } from '../proto_utils/utils.js';\nimport { talentSpellIdsToTalentString } from '../talents/factory.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { downloadString, getEnumValues } from '../utils.js';\n\nimport { Popup } from './popup.js';\n\ndeclare var $: any;\ndeclare var tippy: any;\ndeclare var pako: any;\n\nexport function newIndividualExporters<SpecType extends Spec>(simUI: IndividualSimUI<SpecType>): HTMLElement {\n\tconst exportSettings = document.createElement('div');\n\texportSettings.classList.add('export-settings', 'sim-dropdown-menu');\n\texportSettings.innerHTML = `\n\t\t<span id=\"exportMenuLink\" class=\"dropdown-toggle fas fa-file-export\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" arai-expanded=\"false\"></span>\n\t\t<div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"exportMenuLink\">\n\t\t</div>\n\t`;\n\tconst linkElem = exportSettings.getElementsByClassName('dropdown-toggle')[0] as HTMLElement;\n\ttippy(linkElem, {\n\t\t'content': 'Export',\n\t\t'allowHTML': true,\n\t});\n\n\tconst menuElem = exportSettings.getElementsByClassName('dropdown-menu')[0] as HTMLElement;\n\tconst addMenuItem = (label: string, onClick: () => void, showInRaidSim: boolean) => {\n\t\tconst itemElem = document.createElement('span');\n\t\titemElem.classList.add('dropdown-item');\n\t\tif (!showInRaidSim) {\n\t\t\titemElem.classList.add('within-raid-sim-hide');\n\t\t}\n\t\titemElem.textContent = label;\n\t\titemElem.addEventListener('click', onClick);\n\t\tmenuElem.appendChild(itemElem);\n\t};\n\n\taddMenuItem('Link', () => new IndividualLinkExporter(menuElem, simUI), false);\n\taddMenuItem('Json', () => new IndividualJsonExporter(menuElem, simUI), true);\n\taddMenuItem('80U EP', () => new Individual80UEPExporter(menuElem, simUI), false);\n\taddMenuItem('Pawn EP', () => new IndividualPawnEPExporter(menuElem, simUI), false);\n\n\treturn exportSettings;\n}\n\nexport abstract class Exporter extends Popup {\n\tprivate readonly textElem: HTMLElement;\n\n\tconstructor(parent: HTMLElement, title: string, allowDownload: boolean) {\n\t\tsuper(parent);\n\n\t\tthis.rootElem.classList.add('exporter');\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<span class=\"exporter-title\">${title}</span>\n\t\t\t<div class=\"export-content\">\n\t\t\t\t<textarea class=\"exporter-textarea\" readonly></textarea>\n\t\t\t</div>\n\t\t\t<div class=\"actions-row\">\n\t\t\t\t<button class=\"exporter-button sim-button clipboard-button\">COPY TO CLIPBOARD</button>\n\t\t\t\t<button class=\"exporter-button sim-button download-button\">DOWNLOAD</button>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.addCloseButton();\n\n\t\tthis.textElem = this.rootElem.getElementsByClassName('exporter-textarea')[0] as HTMLElement;\n\n\t\tconst clipboardButton = this.rootElem.getElementsByClassName('clipboard-button')[0] as HTMLElement;\n\t\tclipboardButton.addEventListener('click', event => {\n\t\t\tconst data = this.textElem.textContent!;\n\t\t\tif (navigator.clipboard == undefined) {\n\t\t\t\talert(data);\n\t\t\t} else {\n\t\t\t\tnavigator.clipboard.writeText(data);\n\t\t\t}\n\t\t});\n\n\t\tconst downloadButton = this.rootElem.getElementsByClassName('download-button')[0] as HTMLElement;\n\t\tif (allowDownload) {\n\t\t\tdownloadButton.addEventListener('click', event => {\n\t\t\t\tconst data = this.textElem.textContent!;\n\t\t\t\tdownloadString(data, 'wowsims.json');\n\t\t\t});\n\t\t} else {\n\t\t\tdownloadButton.remove();\n\t\t}\n\t}\n\n\tprotected init() {\n\t\tthis.textElem.textContent = this.getData();\n\t}\n\n\tabstract getData(): string;\n}\n\nclass IndividualLinkExporter<SpecType extends Spec> extends Exporter {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, 'Sharable Link', false);\n\t\tthis.simUI = simUI;\n\t\tthis.init();\n\t}\n\n\tgetData(): string {\n\t\treturn this.simUI.toLink();\n\t}\n}\n\nclass IndividualJsonExporter<SpecType extends Spec> extends Exporter {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, 'JSON Export', true);\n\t\tthis.simUI = simUI;\n\t\tthis.init();\n\t}\n\n\tgetData(): string {\n\t\treturn JSON.stringify(IndividualSimSettings.toJson(this.simUI.toProto()), null, 2);\n\t}\n}\n\nclass Individual80UEPExporter<SpecType extends Spec> extends Exporter {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, '80Upgrades EP Export', true);\n\t\tthis.simUI = simUI;\n\t\tthis.init();\n\t}\n\n\tgetData(): string {\n\t\tconst player = this.simUI.player;\n\t\tconst epValues = player.getEpWeights();\n\t\tconst allStats = (getEnumValues(Stat) as Array<Stat>).filter(stat => ![Stat.StatEnergy, Stat.StatRage].includes(stat));\n\n\t\tconst namesToWeights: Record<string, number> = {};\n\t\tallStats\n\t\t.filter(stat => epValues.getStat(stat) != 0)\n\t\t.forEach(stat => {\n\t\t\tconst statName = Individual80UEPExporter.linkNames[stat];\n\t\t\tconst weight = epValues.getStat(stat);\n\n\t\t\t// Need to add together stats with the same name (e.g. hit/crit/haste).\n\t\t\tif (namesToWeights[statName]) {\n\t\t\t\tnamesToWeights[statName] += weight;\n\t\t\t} else {\n\t\t\t\tnamesToWeights[statName] = weight;\n\t\t\t}\n\t\t});\n\n\t\treturn `https://eightyupgrades.com/ep/import?name=${encodeURIComponent(`${specNames[player.spec]} WoWSims Weights`)}` +\n\t\t\tObject.keys(namesToWeights)\n\t\t\t\t.map(statName => `&${statName}=${namesToWeights[statName].toFixed(3)}`).join('');\n\t}\n\n\tstatic linkNames: Record<Stat, string> = {\n\t\t[Stat.StatStrength]: 'strength',\n\t\t[Stat.StatAgility]: 'agility',\n\t\t[Stat.StatStamina]: 'stamina',\n\t\t[Stat.StatIntellect]: 'intellect',\n\t\t[Stat.StatSpirit]: 'spirit',\n\t\t[Stat.StatSpellPower]: 'spellDamage',\n\t\t[Stat.StatMP5]: 'mp5',\n\t\t[Stat.StatSpellHit]: 'hitRating',\n\t\t[Stat.StatSpellCrit]: 'critRating',\n\t\t[Stat.StatSpellHaste]: 'hasteRating',\n\t\t[Stat.StatSpellPenetration]: 'spellPen',\n\t\t[Stat.StatAttackPower]: 'attackPower',\n\t\t[Stat.StatMeleeHit]: 'hitRating',\n\t\t[Stat.StatMeleeCrit]: 'critRating',\n\t\t[Stat.StatMeleeHaste]: 'hasteRating',\n\t\t[Stat.StatArmorPenetration]: 'armorPen',\n\t\t[Stat.StatExpertise]: 'expertiseRating',\n\t\t[Stat.StatMana]: 'mana',\n\t\t[Stat.StatEnergy]: 'energy',\n\t\t[Stat.StatRage]: 'rage',\n\t\t[Stat.StatArmor]: 'armor',\n\t\t[Stat.StatRangedAttackPower]: 'attackPower',\n\t\t[Stat.StatDefense]: 'defenseRating',\n\t\t[Stat.StatBlock]: 'blockRating',\n\t\t[Stat.StatBlockValue]: 'blockValue',\n\t\t[Stat.StatDodge]: 'dodgeRating',\n\t\t[Stat.StatParry]: 'parryRating',\n\t\t[Stat.StatResilience]: 'resilienceRating',\n\t\t[Stat.StatHealth]: 'health',\n\t\t[Stat.StatArcaneResistance]: 'arcaneResistance',\n\t\t[Stat.StatFireResistance]: 'fireResistance',\n\t\t[Stat.StatFrostResistance]: 'frostResistance',\n\t\t[Stat.StatNatureResistance]: 'natureResistance',\n\t\t[Stat.StatShadowResistance]: 'shadowResistance',\n\t}\n}\n\nclass IndividualPawnEPExporter<SpecType extends Spec> extends Exporter {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, 'Pawn EP Export', true);\n\t\tthis.simUI = simUI;\n\t\tthis.init();\n\t}\n\n\tgetData(): string {\n\t\tconst player = this.simUI.player;\n\t\tconst epValues = player.getEpWeights();\n\t\tconst allStats = (getEnumValues(Stat) as Array<Stat>).filter(stat => ![Stat.StatEnergy, Stat.StatRage].includes(stat));\n\n\t\tconst namesToWeights: Record<string, number> = {};\n\t\tallStats\n\t\t.filter(stat => epValues.getStat(stat) != 0)\n\t\t.forEach(stat => {\n\t\t\tconst statName = IndividualPawnEPExporter.statNames[stat];\n\t\t\tconst weight = epValues.getStat(stat);\n\n\t\t\t// Need to add together stats with the same name (e.g. hit/crit/haste).\n\t\t\tif (namesToWeights[statName]) {\n\t\t\t\tnamesToWeights[statName] += weight;\n\t\t\t} else {\n\t\t\t\tnamesToWeights[statName] = weight;\n\t\t\t}\n\t\t});\n\n\t\treturn `( Pawn: v1: \"${specNames[player.spec]} WoWSims Weights\": Class=${classNames[player.getClass()]},` +\n\t\t\tObject.keys(namesToWeights)\n\t\t\t\t.map(statName => `${statName}=${namesToWeights[statName].toFixed(3)}`).join(',') +\n\t\t\t' )';\n\t}\n\n\tstatic statNames: Record<Stat, string> = {\n\t\t[Stat.StatStrength]: 'Strength',\n\t\t[Stat.StatAgility]: 'Agility',\n\t\t[Stat.StatStamina]: 'Stamina',\n\t\t[Stat.StatIntellect]: 'Intellect',\n\t\t[Stat.StatSpirit]: 'Spirit',\n\t\t[Stat.StatSpellPower]: 'SpellDamage',\n\t\t[Stat.StatMP5]: 'Mp5',\n\t\t[Stat.StatSpellHit]: 'HitRating',\n\t\t[Stat.StatSpellCrit]: 'CritRating',\n\t\t[Stat.StatSpellHaste]: 'HasteRating',\n\t\t[Stat.StatSpellPenetration]: 'SpellPen',\n\t\t[Stat.StatAttackPower]: 'Ap',\n\t\t[Stat.StatMeleeHit]: 'HitRating',\n\t\t[Stat.StatMeleeCrit]: 'CritRating',\n\t\t[Stat.StatMeleeHaste]: 'HasteRating',\n\t\t[Stat.StatArmorPenetration]: 'ArmorPenetration',\n\t\t[Stat.StatExpertise]: 'ExpertiseRating',\n\t\t[Stat.StatMana]: 'Mana',\n\t\t[Stat.StatEnergy]: 'Energy',\n\t\t[Stat.StatRage]: 'Rage',\n\t\t[Stat.StatArmor]: 'Armor',\n\t\t[Stat.StatRangedAttackPower]: 'Ap',\n\t\t[Stat.StatDefense]: 'DefenseRating',\n\t\t[Stat.StatBlock]: 'BlockRating',\n\t\t[Stat.StatBlockValue]: 'BlockValue',\n\t\t[Stat.StatDodge]: 'DodgeRating',\n\t\t[Stat.StatParry]: 'ParryRating',\n\t\t[Stat.StatResilience]: 'ResilienceRating',\n\t\t[Stat.StatHealth]: 'Health',\n\t\t[Stat.StatArcaneResistance]: 'ArcaneResistance',\n\t\t[Stat.StatFireResistance]: 'FireResistance',\n\t\t[Stat.StatFrostResistance]: 'FrostResistance',\n\t\t[Stat.StatNatureResistance]: 'NatureResistance',\n\t\t[Stat.StatShadowResistance]: 'ShadowResistance',\n\t}\n}\n","import { Class } from '../proto/common.js';\nimport { EquipmentSpec } from '../proto/common.js';\nimport { ItemSpec } from '../proto/common.js';\nimport { Glyphs } from '../proto/common.js';\nimport { Profession } from '../proto/common.js';\nimport { Race } from '../proto/common.js';\nimport { Spec } from '../proto/common.js';\nimport { IndividualSimSettings } from '../proto/ui.js';\nimport { IndividualSimUI } from '../individual_sim_ui.js';\nimport { Player } from '../player.js';\nimport { classNames, nameToClass, nameToRace, nameToProfession } from '../proto_utils/names.js';\nimport { classGlyphsConfig, talentSpellIdsToTalentString } from '../talents/factory.js';\nimport { GlyphConfig } from '../talents/glyphs_picker.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Popup } from './popup.js';\n\ndeclare var $: any;\ndeclare var tippy: any;\n\nexport function newIndividualImporters<SpecType extends Spec>(simUI: IndividualSimUI<SpecType>): HTMLElement {\n\tconst importSettings = document.createElement('div');\n\timportSettings.classList.add('import-settings', 'sim-dropdown-menu');\n\timportSettings.innerHTML = `\n\t\t<span id=\"importMenuLink\" class=\"dropdown-toggle fas fa-file-import\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" arai-expanded=\"false\"></span>\n\t\t<div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"importMenuLink\">\n\t\t</div>\n\t`;\n\tconst linkElem = importSettings.getElementsByClassName('dropdown-toggle')[0] as HTMLElement;\n\ttippy(linkElem, {\n\t\t'content': 'Import',\n\t\t'allowHTML': true,\n\t});\n\n\tconst menuElem = importSettings.getElementsByClassName('dropdown-menu')[0] as HTMLElement;\n\tconst addMenuItem = (label: string, onClick: () => void, showInRaidSim: boolean) => {\n\t\tconst itemElem = document.createElement('span');\n\t\titemElem.classList.add('dropdown-item');\n\t\tif (!showInRaidSim) {\n\t\t\titemElem.classList.add('within-raid-sim-hide');\n\t\t}\n\t\titemElem.textContent = label;\n\t\titemElem.addEventListener('click', onClick);\n\t\tmenuElem.appendChild(itemElem);\n\t};\n\n\taddMenuItem('Json', () => new IndividualJsonImporter(menuElem, simUI), true);\n\taddMenuItem('80U', () => new Individual80UImporter(menuElem, simUI), true);\n\taddMenuItem('Addon', () => new IndividualAddonImporter(menuElem, simUI), true);\n\n\treturn importSettings;\n}\n\nexport abstract class Importer extends Popup {\n\tprivate readonly textElem: HTMLTextAreaElement;\n\tprotected readonly descriptionElem: HTMLElement;\n\tprotected readonly importButton: HTMLButtonElement;\n\tprivate readonly includeFile: boolean;\n\n\tconstructor(parent: HTMLElement, title: string, includeFile: boolean) {\n\t\tsuper(parent);\n\t\tthis.includeFile = includeFile;\n\t\tconst uploadInputId = 'upload-input-' + title.toLowerCase().replaceAll(' ', '-');\n\n\t\tthis.rootElem.classList.add('importer');\n\t\tlet htmlVal = `\n\t\t\t<span class=\"importer-title\">${title}</span>\n\t\t\t<div class=\"import-description\">\n\t\t\t</div>\n\t\t\t<div class=\"import-content\">\n\t\t\t\t<textarea class=\"importer-textarea\"></textarea>\n\t\t\t</div>\n\t\t\t<div class=\"actions-row\">\n\t\t`;\n\t\tif (this.includeFile) {\n\t\t\thtmlVal += `<label for=\"${uploadInputId}\" class=\"importer-button sim-button upload-button\">UPLOAD FROM FILE</label>\n\t\t\t\t<input type=\"file\" id=\"${uploadInputId}\" class=\"importer-upload-input\" hidden>\n\t\t\t`\n\t\t}\n\t\thtmlVal += `<button class=\"importer-button sim-button import-button\">IMPORT</button>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.rootElem.innerHTML = htmlVal\n\n\t\tthis.addCloseButton();\n\n\t\tthis.textElem = this.rootElem.getElementsByClassName('importer-textarea')[0] as HTMLTextAreaElement;\n\t\tthis.descriptionElem = this.rootElem.getElementsByClassName('import-description')[0] as HTMLElement;\n\n\t\tif (this.includeFile) {\n\t\t\tconst uploadInput = this.rootElem.getElementsByClassName('importer-upload-input')[0] as HTMLButtonElement;\n\t\t\tuploadInput.addEventListener('change', async event => {\n\t\t\t\tconst data: string = await (event as any).target.files[0].text();\n\t\t\t\tthis.textElem.textContent = data;\n\t\t\t});\n\t\t}\n\n\t\tthis.importButton = this.rootElem.getElementsByClassName('import-button')[0] as HTMLButtonElement;\n\t\tthis.importButton.addEventListener('click', event => {\n\t\t\ttry {\n\t\t\t\tthis.onImport(this.textElem.value || '');\n\t\t\t} catch (error) {\n\t\t\t\talert('Import error: ' + error);\n\t\t\t}\n\t\t});\n\t}\n\n\tabstract onImport(data: string): void\n\n\tprotected finishIndividualImport<SpecType extends Spec>(simUI: IndividualSimUI<SpecType>, charClass: Class, race: Race, equipmentSpec: EquipmentSpec, talentsStr: string, glyphs: Glyphs | null, professions: Array<Profession>) {\n\t\tconst playerClass = simUI.player.getClass();\n\t\tif (charClass != playerClass) {\n\t\t\tthrow new Error(`Wrong Class! Expected ${classNames[playerClass]} but found ${classNames[charClass]}!`);\n\t\t}\n\n\t\tequipmentSpec.items.forEach(item => {\n\t\t\tif (item.enchant) {\n\t\t\t\tconst dbEnchant = simUI.sim.getEnchantFlexible(item.enchant);\n\t\t\t\tif (dbEnchant) {\n\t\t\t\t\titem.enchant = dbEnchant.id;\n\t\t\t\t} else {\n\t\t\t\t\titem.enchant = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst gear = simUI.sim.lookupEquipmentSpec(equipmentSpec);\n\n\t\tconst expectedEnchantIds = equipmentSpec.items.map(item => item.enchant);\n\t\tconst foundEnchantIds = gear.asSpec().items.map(item => item.enchant);\n\t\tconst missingEnchants = expectedEnchantIds.filter(expectedId => expectedId != 0 && !foundEnchantIds.includes(expectedId));\n\n\t\tconst expectedItemIds = equipmentSpec.items.map(item => item.id);\n\t\tconst foundItemIds = gear.asSpec().items.map(item => item.id);\n\t\tconst missingItems = expectedItemIds.filter(expectedId => !foundItemIds.includes(expectedId));\n\n\t\t// Now update settings using the parsed values.\n\t\tconst eventID = TypedEvent.nextEventID();\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tsimUI.player.setRace(eventID, race);\n\t\t\tsimUI.player.setGear(eventID, gear);\n\t\t\tif (talentsStr) {\n\t\t\t\tsimUI.player.setTalentsString(eventID, talentsStr);\n\t\t\t}\n\t\t\tif (glyphs) {\n\t\t\t\tsimUI.player.setGlyphs(eventID, glyphs)\n\t\t\t}\n\t\t\tif (professions.length > 0) {\n\t\t\t\tsimUI.player.setProfessions(eventID, professions)\n\t\t\t}\n\t\t});\n\n\t\tthis.close();\n\n\t\tif (missingItems.length == 0 && missingEnchants.length == 0) {\n\t\t\talert('Import successful!');\n\t\t} else {\n\t\t\talert('Import successful, but the following IDs were not found in the sim database:' +\n\t\t\t\t(missingItems.length == 0 ? '' : '\\n\\nItems: ' + missingItems.join(', ')) +\n\t\t\t\t(missingEnchants.length == 0 ? '' : '\\n\\nEnchants: ' + missingEnchants.join(', ')));\n\t\t}\n\t}\n}\n\nclass IndividualJsonImporter<SpecType extends Spec> extends Importer {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, 'JSON Import', true);\n\t\tthis.simUI = simUI;\n\n\t\tthis.descriptionElem.innerHTML = `\n\t\t\t<p>\n\t\t\t\tImport settings from a JSON text file, which can be created using the JSON Export feature of this site.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTo import, paste the JSON text below and click, 'Import'.\n\t\t\t</p>\n\t\t`;\n\t}\n\n\tonImport(data: string) {\n\t\tconst proto = IndividualSimSettings.fromJsonString(data);\n\t\tif (this.simUI.isWithinRaidSim) {\n\t\t\tif (proto.player) {\n\t\t\t\tthis.simUI.player.fromProto(TypedEvent.nextEventID(), proto.player);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.simUI.fromProto(TypedEvent.nextEventID(), proto);\n\t\t}\n\t\tthis.close();\n\t}\n}\n\nclass Individual80UImporter<SpecType extends Spec> extends Importer {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, '80 Upgrades Import', true);\n\t\tthis.simUI = simUI;\n\n\t\tthis.descriptionElem.innerHTML = `\n\t\t\t<p>\n\t\t\t\tImport settings from <a href=\"https://eightyupgrades.com\" target=\"_blank\">Eighty Upgrades</a>.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThis feature imports gear, race, and (optionally) talents. It does NOT import buffs, debuffs, consumes, rotation, or custom stats.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTo import, paste the output from the site's export option below and click, 'Import'.\n\t\t\t</p>\n\t\t`;\n\t}\n\n\tonImport(data: string) {\n\t\tconst importJson = JSON.parse(data);\n\n\t\t// Parse all the settings.\n\t\tconst charClass = nameToClass((importJson?.character?.gameClass as string) || '');\n\t\tif (charClass == Class.ClassUnknown) {\n\t\t\tthrow new Error('Could not parse Class!');\n\t\t}\n\n\t\tconst race = nameToRace((importJson?.character?.race as string) || '');\n\t\tif (race == Race.RaceUnknown) {\n\t\t\tthrow new Error('Could not parse Race!');\n\t\t}\n\n\t\tlet talentsStr = '';\n\t\tif (importJson?.talents?.length > 0) {\n\t\t\tconst talentIds = (importJson.talents as Array<any>).map(talentJson => talentJson.spellId);\n\t\t\ttalentsStr = talentSpellIdsToTalentString(charClass, talentIds);\n\t\t}\n\n\t\tlet equipmentSpec = EquipmentSpec.create();\n\t\t(importJson.items as Array<any>).forEach(itemJson => {\n\t\t\tlet itemSpec = ItemSpec.create();\n\t\t\titemSpec.id = itemJson.id;\n\t\t\tif (itemJson.enchant?.id) {\n\t\t\t\titemSpec.enchant = itemJson.enchant.id;\n\t\t\t}\n\t\t\tif (itemJson.gems) {\n\t\t\t\titemSpec.gems = (itemJson.gems as Array<any>).filter(gemJson => gemJson?.id).map(gemJson => gemJson.id);\n\t\t\t}\n\t\t\tequipmentSpec.items.push(itemSpec);\n\t\t});\n\n\t\tconst gear = this.simUI.sim.lookupEquipmentSpec(equipmentSpec);\n\n\t\tthis.finishIndividualImport(this.simUI, charClass, race, equipmentSpec, talentsStr, null, []);\n\t}\n}\n\nclass IndividualAddonImporter<SpecType extends Spec> extends Importer {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, 'Addon Import', true);\n\t\tthis.simUI = simUI;\n\n\t\tthis.descriptionElem.innerHTML = `\n\t\t\t<p>\n\t\t\t\tImport settings from the <a href=\"https://www.curseforge.com/wow/addons/wowsimsexporter\" target=\"_blank\">WoWSims Importer In-Game Addon</a>.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThis feature imports gear, race, talents, glyphs, and professions. It does NOT import buffs, debuffs, consumes, rotation, or custom stats.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTo import, paste the output from the addon below and click, 'Import'.\n\t\t\t</p>\n\t\t`;\n\t}\n\n\tonImport(data: string) {\n\t\tconst importJson = JSON.parse(data);\n\n\t\t// Parse all the settings.\n\t\tconst charClass = nameToClass((importJson['class'] as string) || '');\n\t\tif (charClass == Class.ClassUnknown) {\n\t\t\tthrow new Error('Could not parse Class!');\n\t\t}\n\n\t\tconst race = nameToRace((importJson['race'] as string) || '');\n\t\tif (race == Race.RaceUnknown) {\n\t\t\tthrow new Error('Could not parse Race!');\n\t\t}\n\n\t\tconst professions = (importJson['professions'] as Array<{name: string, level: number}>).map(profData => nameToProfession(profData.name));\n\t\tprofessions.forEach((prof, i) => {\n\t\t\tif (prof == Profession.ProfessionUnknown) {\n\t\t\t\tthrow new Error(`Could not parse profession '${importJson['professions'][i]}'`);\n\t\t\t}\n\t\t});\n\n\t\tconst talentsStr = (importJson['talents'] as string) || '';\n\n\t\tconst glyphsConfig = classGlyphsConfig[charClass];\n\t\tconst majorGlyphIDs = (importJson['glyphs']['major'] as Array<string>).map(glyphName => glyphNameToID(glyphName, glyphsConfig.majorGlyphs));\n\t\tconst minorGlyphIDs = (importJson['glyphs']['minor'] as Array<string>).map(glyphName => glyphNameToID(glyphName, glyphsConfig.minorGlyphs));\n\t\tconst glyphs = Glyphs.create({\n\t\t\tmajor1: majorGlyphIDs[0] || 0,\n\t\t\tmajor2: majorGlyphIDs[1] || 0,\n\t\t\tmajor3: majorGlyphIDs[2] || 0,\n\t\t\tminor1: minorGlyphIDs[0] || 0,\n\t\t\tminor2: minorGlyphIDs[1] || 0,\n\t\t\tminor3: minorGlyphIDs[2] || 0,\n\t\t});\n\n\t\tconst gearJson = importJson['gear'];\n\t\tgearJson.items = (gearJson.items as Array<any>).filter(item => item != null);\n\t\tconst equipmentSpec = EquipmentSpec.fromJson(gearJson);\n\n\t\tthis.finishIndividualImport(this.simUI, charClass, race, equipmentSpec, talentsStr, glyphs, professions);\n\t}\n}\n\nfunction glyphNameToID(glyphName: string, glyphsConfig: Record<number, GlyphConfig>): number {\n\tif (!glyphName) {\n\t\treturn 0;\n\t}\n\n\tfor (let glyphIDStr in glyphsConfig) {\n\t\tif (glyphsConfig[glyphIDStr].name == glyphName) {\n\t\t\treturn parseInt(glyphIDStr);\n\t\t}\n\t}\n\tthrow new Error(`Unknown glyph name '${glyphName}'`);\n}\n","import { ActionId } from '../proto_utils/action_id.js';\nimport { BattleElixir } from '../proto/common.js';\nimport { Explosive } from '../proto/common.js';\nimport { Flask } from '../proto/common.js';\nimport { Food } from '../proto/common.js';\nimport { GuardianElixir } from '../proto/common.js';\nimport { RaidBuffs } from '../proto/common.js';\nimport { PartyBuffs } from '../proto/common.js';\nimport { IndividualBuffs } from '../proto/common.js';\nimport { Conjured } from '../proto/common.js';\nimport { Consumes } from '../proto/common.js';\nimport { Debuffs } from '../proto/common.js';\n\nimport { PetFood } from '../proto/common.js';\nimport { Potions } from '../proto/common.js';\nimport { Spec } from '../proto/common.js';\nimport { TristateEffect } from '../proto/common.js';\nimport { Party } from '../party.js';\nimport { Player } from '../player.js';\nimport { Raid } from '../raid.js';\nimport { Sim } from '../sim.js';\nimport { Target } from '../target.js';\nimport { Encounter } from '../encounter.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\n\nimport { IconPickerConfig } from './icon_picker.js';\nimport { IconEnumPicker, IconEnumPickerConfig, IconEnumValueConfig } from './icon_enum_picker.js';\nimport { MultiIconPickerConfig } from './multi_icon_picker.js';\n\nimport * as InputHelpers from './input_helpers.js';\n\n// Raid Buffs\n\nexport const AllStatsBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(48470), ActionId.fromSpellId(17051), 'giftOfTheWild'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(49634), 'drumsOfTheWild'),\n], 'Stats');\n\nexport const AllStatsPercentBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(25898), 'blessingOfKings'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(49633), 'drumsOfForgottenKings'),\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(25899), 'blessingOfSanctuary'),\n], 'Stats %');\n\nexport const ArmorBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(48942), ActionId.fromSpellId(20140), 'devotionAura'),\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(58753), ActionId.fromSpellId(16293), 'stoneskinTotem'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(43468), 'scrollOfProtection'),\n\t// stoneskin?\n], 'Armor');\n\nexport const StaminaBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(48161), ActionId.fromSpellId(14767), 'powerWordFortitude'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(37094), 'scrollOfStamina'),\n], 'Stam');\n\nexport const StrengthAndAgilityBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(58643), ActionId.fromSpellId(52456), 'strengthOfEarthTotem'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(57623), 'hornOfWinter'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(43464), 'scrollOfAgility'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(43466), 'scrollOfStrength'),\n], 'Str/Agi');\n\nexport const IntellectBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(43002), 'arcaneBrilliance'),\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(57567), ActionId.fromSpellId(54038), 'felIntelligence'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(37092), 'scrollOfIntellect'),\n], 'Int');\n\nexport const SpiritBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(48073), 'divineSpirit'),\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(57567), ActionId.fromSpellId(54038), 'felIntelligence'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(37098), 'scrollOfSpirit'),\n], 'Spi');\n\nexport const AttackPowerBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateIndividualBuffInput(ActionId.fromSpellId(48934), ActionId.fromSpellId(20045), 'blessingOfMight'),\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(47436), ActionId.fromSpellId(12861), 'battleShout'),\n], 'AP');\n\nexport const AttackPowerPercentBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(53138), 'abominationsMight'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(30809), 'unleashedRage'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(19506), 'trueshotAura'),\n], 'AP %');\n\nexport const DamagePercentBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(31869), 'sanctifiedRetribution'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(31583), 'arcaneEmpowerment'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(34460), 'ferociousInspiration'),\n], 'Dmg %');\n\nexport const DamageReductionPercentBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(57472), 'renewedHope'),\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(25899), 'blessingOfSanctuary'),\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(50720), 'vigilance'),\n], 'Mit %');\n\nexport const HastePercentBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(53648), 'swiftRetribution'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(48396), 'moonkinAura', TristateEffect.TristateEffectImproved),\n], 'Haste %');\n\nexport const HealthBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(47440), ActionId.fromSpellId(12861), 'commandingShout'),\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(47982), ActionId.fromSpellId(18696), 'bloodPact'),\n], 'Health');\n\nexport const MP5Buff = InputHelpers.makeMultiIconInput([\n\tmakeTristateIndividualBuffInput(ActionId.fromSpellId(48938), ActionId.fromSpellId(20245), 'blessingOfWisdom'),\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(58774), ActionId.fromSpellId(16206), 'manaSpringTotem'),\n], 'MP5');\n\nexport const MeleeCritBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(17007), ActionId.fromSpellId(34300), 'leaderOfThePack'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(29801), 'rampage'),\n], 'Melee Crit');\n\nexport const MeleeHasteBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(55610), 'icyTalons'),\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(65990), ActionId.fromSpellId(29193), 'windfuryTotem'),\n], 'Melee Haste');\n\nexport const ReplenishmentBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(48160), 'vampiricTouch'),\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(31878), 'judgementsOfTheWise'),\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(53292), 'huntingParty'),\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(54118), 'improvedSoulLeech'),\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(44561), 'enduringWinter'),\n], 'Repl', 2);\n\nexport const SpellCritBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(24907), ActionId.fromSpellId(48396), 'moonkinAura'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(51470), 'elementalOath'),\n], 'Spell Crit');\n\nexport const SpellHasteBuff = withLabel(makeBooleanRaidBuffInput(ActionId.fromSpellId(3738), 'wrathOfAirTotem'), 'Spell Haste');\n\nexport const SpellPowerBuff = InputHelpers.makeMultiIconInput([\n\tmakeMultistateRaidBuffInput(ActionId.fromSpellId(47240), 5000, 'demonicPact', 500),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(57722), 'totemOfWrath'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(58656), 'flametongueTotem'),\n], 'SP');\n\nexport const Bloodlust = withLabel(makeBooleanRaidBuffInput(ActionId.fromSpellId(2825), 'bloodlust'), 'Lust');\n\n// Misc Buffs\nexport const RetributionAura = makeBooleanRaidBuffInput(ActionId.fromSpellId(54043), 'retributionAura');\nexport const ShadowProtection = makeBooleanRaidBuffInput(ActionId.fromSpellId(48170), 'shadowProtection');\nexport const BraidedEterniumChain = makeBooleanPartyBuffInput(ActionId.fromSpellId(31025), 'braidedEterniumChain');\nexport const ChainOfTheTwilightOwl = makeBooleanPartyBuffInput(ActionId.fromSpellId(31035), 'chainOfTheTwilightOwl');\nexport const HeroicPresence = makeBooleanPartyBuffInput(ActionId.fromSpellId(6562), 'heroicPresence');\nexport const EyeOfTheNight = makeBooleanPartyBuffInput(ActionId.fromSpellId(31033), 'eyeOfTheNight');\nexport const Thorns = makeTristateRaidBuffInput(ActionId.fromSpellId(53307), ActionId.fromSpellId(16840), 'thorns');\nexport const ManaTideTotem = makeMultistatePartyBuffInput(ActionId.fromSpellId(16190), 5, 'manaTideTotems');\nexport const Innervate = makeMultistateIndividualBuffInput(ActionId.fromSpellId(29166), 11, 'innervates');\nexport const PowerInfusion = makeMultistateIndividualBuffInput(ActionId.fromSpellId(10060), 11, 'powerInfusions');\nexport const FocusMagic = makeBooleanIndividualBuffInput(ActionId.fromSpellId(54648), 'focusMagic');\nexport const TricksOfTheTrade = makeMultistateIndividualBuffInput(ActionId.fromSpellId(57933), 20, 'tricksOfTheTrades');\nexport const UnholyFrenzy = makeMultistateIndividualBuffInput(ActionId.fromSpellId(49016), 11, 'unholyFrenzy');\nexport const RevitalizeRejuvination = makeMultistateMultiplierIndividualBuffInput(ActionId.fromSpellId(26982), 101, 10, 'revitalizeRejuvination');\nexport const RevitalizeWildGrowth = makeMultistateMultiplierIndividualBuffInput(ActionId.fromSpellId(53251), 101, 10, 'revitalizeWildGrowth');\n\n// Debuffs\n\nexport const MajorArmorDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(7386), 'sunderArmor'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(8647), 'exposeArmor'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(55754), 'acidSpit'),\n], 'Major Ar');\n\nexport const MinorArmorDebuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateDebuffInput(ActionId.fromSpellId(770), ActionId.fromSpellId(33602), 'faerieFire'),\n\tmakeTristateDebuffInput(ActionId.fromSpellId(50511), ActionId.fromSpellId(18180), 'curseOfWeakness'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(56631), 'sting'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(53598), 'sporeCloud'),\n], 'Minor Ar');\n\nexport const AttackPowerDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(26016), 'vindication'),\n\tmakeTristateDebuffInput(ActionId.fromSpellId(47437), ActionId.fromSpellId(12879), 'demoralizingShout'),\n\tmakeTristateDebuffInput(ActionId.fromSpellId(48560), ActionId.fromSpellId(16862), 'demoralizingRoar'),\n\tmakeTristateDebuffInput(ActionId.fromSpellId(50511), ActionId.fromSpellId(18180), 'curseOfWeakness'),\n], 'AP');\n\nexport const BleedDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(33876), 'mangle'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(46855), 'trauma'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(57393), 'stampede'),\n], 'Bleed');\n\nexport const CritDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(30706), 'totemOfWrath'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(20337), 'heartOfTheCrusader'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(58410), 'masterPoisoner'),\n], 'Crit');\n\nexport const MeleeAttackSpeedDebuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateDebuffInput(ActionId.fromSpellId(47502), ActionId.fromSpellId(12666), 'thunderClap'),\n\tmakeTristateDebuffInput(ActionId.fromSpellId(55095), ActionId.fromSpellId(51456), 'frostFever'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(53696), 'judgementsOfTheJust'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(48485), 'infectedWounds'),\n], 'Atk Spd');\n\nexport const MeleeHitDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(65855), 'insectSwarm'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(3043), 'scorpidSting'),\n], 'Miss');\n\nexport const PhysicalDamageDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(29859), 'bloodFrenzy'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(58413), 'savageCombat'),\n], 'Phys Vuln');\n\nexport const SpellCritDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(17800), 'shadowMastery'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(12873), 'improvedScorch'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(28593), 'wintersChill'),\n], 'Spell Crit');\n\nexport const SpellHitDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(33198), 'misery'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(33602), 'faerieFire', TristateEffect.TristateEffectImproved),\n], 'Spell Hit');\n\nexport const SpellDamageDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(51161), 'ebonPlaguebringer'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(48511), 'earthAndMoon'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(47865), 'curseOfElements'),\n], 'Spell Dmg');\n\nexport const HuntersMark = withLabel(makeQuadstateDebuffInput(ActionId.fromSpellId(53338), ActionId.fromSpellId(19423), ActionId.fromItemId(42907), 'huntersMark'), 'Mark');\nexport const JudgementOfWisdom = withLabel(makeBooleanDebuffInput(ActionId.fromSpellId(53408), 'judgementOfWisdom'), 'JoW');\nexport const JudgementOfLight = makeBooleanDebuffInput(ActionId.fromSpellId(20271), 'judgementOfLight');\nexport const ShatteringThrow = makeMultistateIndividualBuffInput(ActionId.fromSpellId(64382), 20, 'shatteringThrows');\nexport const GiftOfArthas = makeBooleanDebuffInput(ActionId.fromSpellId(11374), 'giftOfArthas');\n\n// Consumes\nexport const ThermalSapper = makeBooleanConsumeInput(ActionId.fromItemId(42641), 'thermalSapper');\nexport const ExplosiveDecoy = makeBooleanConsumeInput(ActionId.fromItemId(40536), 'explosiveDecoy');\n\nexport const SpicedMammothTreats = makeBooleanConsumeInput(ActionId.fromItemId(43005), 'petFood', PetFood.PetFoodSpicedMammothTreats);\nexport const PetScrollOfAgilityV = makeBooleanConsumeInput(ActionId.fromItemId(27498), 'petScrollOfAgility', 5);\nexport const PetScrollOfStrengthV = makeBooleanConsumeInput(ActionId.fromItemId(27503), 'petScrollOfStrength', 5);\n\nfunction withLabel<ModObject, T>(config: InputHelpers.TypedIconPickerConfig<ModObject, T>, label: string): InputHelpers.TypedIconPickerConfig<ModObject, T> {\n\tconfig.label = label;\n\treturn config;\n}\n\nfunction makeBooleanRaidBuffInput(id: ActionId, fieldName: keyof RaidBuffs, value?: number): InputHelpers.TypedIconPickerConfig<Player<any>, boolean> {\n\treturn InputHelpers.makeBooleanIconInput<any, RaidBuffs, Raid>({\n\t\tgetModObject: (player: Player<any>) => player.getRaid()!,\n\t\tgetValue: (raid: Raid) => raid.getBuffs(),\n\t\tsetValue: (eventID: EventID, raid: Raid, newVal: RaidBuffs) => raid.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (raid: Raid) => raid.buffsChangeEmitter,\n\t}, id, fieldName, value);\n}\nfunction makeBooleanPartyBuffInput(id: ActionId, fieldName: keyof PartyBuffs, value?: number): InputHelpers.TypedIconPickerConfig<Player<any>, boolean> {\n\treturn InputHelpers.makeBooleanIconInput<any, PartyBuffs, Party>({\n\t\tgetModObject: (player: Player<any>) => player.getParty()!,\n\t\tgetValue: (party: Party) => party.getBuffs(),\n\t\tsetValue: (eventID: EventID, party: Party, newVal: PartyBuffs) => party.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (party: Party) => party.buffsChangeEmitter,\n\t}, id, fieldName, value);\n}\nfunction makeBooleanIndividualBuffInput(id: ActionId, fieldName: keyof IndividualBuffs, value?: number): InputHelpers.TypedIconPickerConfig<Player<any>, boolean> {\n\treturn InputHelpers.makeBooleanIconInput<any, IndividualBuffs, Player<any>>({\n\t\tgetModObject: (player: Player<any>) => player,\n\t\tgetValue: (player: Player<any>) => player.getBuffs(),\n\t\tsetValue: (eventID: EventID, player: Player<any>, newVal: IndividualBuffs) => player.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (player: Player<any>) => player.buffsChangeEmitter,\n\t}, id, fieldName, value);\n}\nfunction makeBooleanConsumeInput(id: ActionId, fieldName: keyof Consumes, value?: number): InputHelpers.TypedIconPickerConfig<Player<any>, boolean> {\n\treturn InputHelpers.makeBooleanIconInput<any, Consumes, Player<any>>({\n\t\tgetModObject: (player: Player<any>) => player,\n\t\tgetValue: (player: Player<any>) => player.getConsumes(),\n\t\tsetValue: (eventID: EventID, player: Player<any>, newVal: Consumes) => player.setConsumes(eventID, newVal),\n\t\tchangeEmitter: (player: Player<any>) => player.consumesChangeEmitter,\n\t}, id, fieldName, value);\n}\nfunction makeBooleanDebuffInput(id: ActionId, fieldName: keyof Debuffs, value?: number): InputHelpers.TypedIconPickerConfig<Player<any>, boolean> {\n\treturn InputHelpers.makeBooleanIconInput<any, Debuffs, Raid>({\n\t\tgetModObject: (player: Player<any>) => player.getRaid()!,\n\t\tgetValue: (raid: Raid) => raid.getDebuffs(),\n\t\tsetValue: (eventID: EventID, raid: Raid, newVal: Debuffs) => raid.setDebuffs(eventID, newVal),\n\t\tchangeEmitter: (raid: Raid) => raid.debuffsChangeEmitter,\n\t}, id, fieldName, value);\n}\n\nfunction makeTristateRaidBuffInput(id: ActionId, impId: ActionId, fieldName: keyof RaidBuffs): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeTristateIconInput<any, RaidBuffs, Raid>({\n\t\tgetModObject: (player: Player<any>) => player.getRaid()!,\n\t\tgetValue: (raid: Raid) => raid.getBuffs(),\n\t\tsetValue: (eventID: EventID, raid: Raid, newVal: RaidBuffs) => raid.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (raid: Raid) => raid.buffsChangeEmitter,\n\t}, id, impId, fieldName);\n}\nfunction makeTristateIndividualBuffInput(id: ActionId, impId: ActionId, fieldName: keyof IndividualBuffs): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeTristateIconInput<any, IndividualBuffs, Player<any>>({\n\t\tgetModObject: (player: Player<any>) => player,\n\t\tgetValue: (player: Player<any>) => player.getBuffs(),\n\t\tsetValue: (eventID: EventID, player: Player<any>, newVal: IndividualBuffs) => player.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (player: Player<any>) => player.buffsChangeEmitter,\n\t}, id, impId, fieldName);\n}\nfunction makeTristateDebuffInput(id: ActionId, impId: ActionId, fieldName: keyof Debuffs): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeTristateIconInput<any, Debuffs, Raid>({\n\t\tgetModObject: (player: Player<any>) => player.getRaid()!,\n\t\tgetValue: (raid: Raid) => raid.getDebuffs(),\n\t\tsetValue: (eventID: EventID, raid: Raid, newVal: Debuffs) => raid.setDebuffs(eventID, newVal),\n\t\tchangeEmitter: (raid: Raid) => raid.debuffsChangeEmitter,\n\t}, id, impId, fieldName);\n}\nfunction makeQuadstateDebuffInput(id: ActionId, impId: ActionId, impId2: ActionId, fieldName: keyof Debuffs): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeQuadstateIconInput<any, Debuffs, Raid>({\n\t\tgetModObject: (player: Player<any>) => player.getRaid()!,\n\t\tgetValue: (raid: Raid) => raid.getDebuffs(),\n\t\tsetValue: (eventID: EventID, raid: Raid, newVal: Debuffs) => raid.setDebuffs(eventID, newVal),\n\t\tchangeEmitter: (raid: Raid) => raid.debuffsChangeEmitter,\n\t}, id, impId, impId2, fieldName);\n}\nfunction makeMultistateRaidBuffInput(id: ActionId, numStates: number, fieldName: keyof RaidBuffs, multiplier?: number): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeMultistateIconInput<any, RaidBuffs, Raid>({\n\t\tgetModObject: (player: Player<any>) => player.getRaid()!,\n\t\tgetValue: (raid: Raid) => raid.getBuffs(),\n\t\tsetValue: (eventID: EventID, raid: Raid, newVal: RaidBuffs) => raid.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (raid: Raid) => raid.buffsChangeEmitter,\n\t}, id, numStates, fieldName, multiplier);\n}\nfunction makeMultistatePartyBuffInput(id: ActionId, numStates: number, fieldName: keyof PartyBuffs): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeMultistateIconInput<any, PartyBuffs, Party>({\n\t\tgetModObject: (player: Player<any>) => player.getParty()!,\n\t\tgetValue: (party: Party) => party.getBuffs(),\n\t\tsetValue: (eventID: EventID, party: Party, newVal: PartyBuffs) => party.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (party: Party) => party.buffsChangeEmitter,\n\t}, id, numStates, fieldName);\n}\nfunction makeMultistateIndividualBuffInput(id: ActionId, numStates: number, fieldName: keyof IndividualBuffs): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeMultistateIconInput<any, IndividualBuffs, Player<any>>({\n\t\tgetModObject: (player: Player<any>) => player,\n\t\tgetValue: (player: Player<any>) => player.getBuffs(),\n\t\tsetValue: (eventID: EventID, player: Player<any>, newVal: IndividualBuffs) => player.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (player: Player<any>) => player.buffsChangeEmitter,\n\t}, id, numStates, fieldName);\n}\nfunction makeMultistateMultiplierIndividualBuffInput(id: ActionId, numStates: number, multiplier: number, fieldName: keyof IndividualBuffs): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeMultistateIconInput<any, IndividualBuffs, Player<any>>({\n\t\tgetModObject: (player: Player<any>) => player,\n\t\tgetValue: (player: Player<any>) => player.getBuffs(),\n\t\tsetValue: (eventID: EventID, player: Player<any>, newVal: IndividualBuffs) => player.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (player: Player<any>) => player.buffsChangeEmitter,\n\t}, id, numStates, fieldName, multiplier);\n}\n\n\n//////////////////////////////////////////////////////////////////////\n// Custom buffs that don't fit into any of the helper functions above.\n//////////////////////////////////////////////////////////////////////\n\nfunction makePotionInputFactory(consumesFieldName: keyof Consumes): (options: Array<Potions>) => InputHelpers.TypedIconEnumPickerConfig<Player<any>, Potions> {\n\treturn makeConsumeInputFactory(consumesFieldName, [\n\t\t{ actionId: ActionId.fromItemId(33447), value: Potions.RunicHealingPotion },\n\t\t{ actionId: ActionId.fromItemId(33448), value: Potions.RunicManaPotion },\n\t\t{ actionId: ActionId.fromItemId(40093), value: Potions.IndestructiblePotion },\n\t\t{ actionId: ActionId.fromItemId(40211), value: Potions.PotionOfSpeed },\n\t\t{ actionId: ActionId.fromItemId(40212), value: Potions.PotionOfWildMagic },\n\n\t\t{ actionId: ActionId.fromItemId(22839), value: Potions.DestructionPotion },\n\t\t{ actionId: ActionId.fromItemId(22838), value: Potions.HastePotion },\n\t\t{ actionId: ActionId.fromItemId(13442), value: Potions.MightyRagePotion },\n\t\t{ actionId: ActionId.fromItemId(22832), value: Potions.SuperManaPotion },\n\t\t{ actionId: ActionId.fromItemId(31677), value: Potions.FelManaPotion },\n\t\t{ actionId: ActionId.fromItemId(22828), value: Potions.InsaneStrengthPotion },\n\t\t{ actionId: ActionId.fromItemId(22849), value: Potions.IronshieldPotion },\n\t\t{ actionId: ActionId.fromItemId(22837), value: Potions.HeroicPotion },\n\t] as Array<IconEnumValueConfig<Player<any>, Potions>>);\n}\nexport const makePotionsInput = makePotionInputFactory('defaultPotion');\nexport const makePrepopPotionsInput = makePotionInputFactory('prepopPotion');\n\nexport const makeConjuredInput = makeConsumeInputFactory('defaultConjured', [\n\t{ actionId: ActionId.fromItemId(12662), value: Conjured.ConjuredDarkRune },\n\t{ actionId: ActionId.fromItemId(22788), value: Conjured.ConjuredFlameCap },\n\t{ actionId: ActionId.fromItemId(22105), value: Conjured.ConjuredHealthstone },\n\t{ actionId: ActionId.fromItemId(7676), value: Conjured.ConjuredRogueThistleTea },\n] as Array<IconEnumValueConfig<Player<any>, Conjured>>);\n\nexport const makeFlasksInput = makeConsumeInputFactory('flask', [\n\t{ actionId: ActionId.fromItemId(46376), value: Flask.FlaskOfTheFrostWyrm },\n\t{ actionId: ActionId.fromItemId(46377), value: Flask.FlaskOfEndlessRage },\n\t{ actionId: ActionId.fromItemId(46378), value: Flask.FlaskOfPureMojo },\n\t{ actionId: ActionId.fromItemId(46379), value: Flask.FlaskOfStoneblood },\n\t{ actionId: ActionId.fromItemId(40079), value: Flask.LesserFlaskOfToughness },\n\t{ actionId: ActionId.fromItemId(44939), value: Flask.LesserFlaskOfResistance },\n\t{ actionId: ActionId.fromItemId(22861), value: Flask.FlaskOfBlindingLight },\n\t{ actionId: ActionId.fromItemId(22853), value: Flask.FlaskOfMightyRestoration },\n\t{ actionId: ActionId.fromItemId(22866), value: Flask.FlaskOfPureDeath },\n\t{ actionId: ActionId.fromItemId(22854), value: Flask.FlaskOfRelentlessAssault },\n\t{ actionId: ActionId.fromItemId(13512), value: Flask.FlaskOfSupremePower },\n\t{ actionId: ActionId.fromItemId(22851), value: Flask.FlaskOfFortification },\n\t{ actionId: ActionId.fromItemId(33208), value: Flask.FlaskOfChromaticWonder },\n] as Array<IconEnumValueConfig<Player<any>, Flask>>, (eventID: EventID, player: Player<any>, newValue: Flask) => {\n\tif (newValue) {\n\t\tconst newConsumes = player.getConsumes();\n\t\tnewConsumes.battleElixir = BattleElixir.BattleElixirUnknown;\n\t\tnewConsumes.guardianElixir = GuardianElixir.GuardianElixirUnknown;\n\t\tplayer.setConsumes(eventID, newConsumes);\n\t}\n});\n\nexport const makeBattleElixirsInput = makeConsumeInputFactory('battleElixir', [\n\t{ actionId: ActionId.fromItemId(44325), value: BattleElixir.ElixirOfAccuracy },\n\t{ actionId: ActionId.fromItemId(44330), value: BattleElixir.ElixirOfArmorPiercing },\n\t{ actionId: ActionId.fromItemId(44327), value: BattleElixir.ElixirOfDeadlyStrikes },\n\t{ actionId: ActionId.fromItemId(44329), value: BattleElixir.ElixirOfExpertise },\n\t{ actionId: ActionId.fromItemId(44331), value: BattleElixir.ElixirOfLightningSpeed },\n\t{ actionId: ActionId.fromItemId(39666), value: BattleElixir.ElixirOfMightyAgility },\n\t{ actionId: ActionId.fromItemId(40073), value: BattleElixir.ElixirOfMightyStrength },\n\t{ actionId: ActionId.fromItemId(40076), value: BattleElixir.GurusElixir },\n\t{ actionId: ActionId.fromItemId(40070), value: BattleElixir.SpellpowerElixir },\n\t{ actionId: ActionId.fromItemId(40068), value: BattleElixir.WrathElixir },\n\t{ actionId: ActionId.fromItemId(28103), value: BattleElixir.AdeptsElixir },\n\t{ actionId: ActionId.fromItemId(9224), value: BattleElixir.ElixirOfDemonslaying },\n\t{ actionId: ActionId.fromItemId(22831), value: BattleElixir.ElixirOfMajorAgility },\n\t{ actionId: ActionId.fromItemId(22833), value: BattleElixir.ElixirOfMajorFirePower },\n\t{ actionId: ActionId.fromItemId(22827), value: BattleElixir.ElixirOfMajorFrostPower },\n\t{ actionId: ActionId.fromItemId(22835), value: BattleElixir.ElixirOfMajorShadowPower },\n\t{ actionId: ActionId.fromItemId(22824), value: BattleElixir.ElixirOfMajorStrength },\n\t{ actionId: ActionId.fromItemId(28104), value: BattleElixir.ElixirOfMastery },\n\t{ actionId: ActionId.fromItemId(13452), value: BattleElixir.ElixirOfTheMongoose },\n\t{ actionId: ActionId.fromItemId(31679), value: BattleElixir.FelStrengthElixir },\n\t{ actionId: ActionId.fromItemId(13454), value: BattleElixir.GreaterArcaneElixir },\n] as Array<IconEnumValueConfig<Player<any>, BattleElixir>>, (eventID: EventID, player: Player<any>, newValue: BattleElixir) => {\n\tif (newValue) {\n\t\tconst newConsumes = player.getConsumes();\n\t\tnewConsumes.flask = Flask.FlaskUnknown;\n\t\tplayer.setConsumes(eventID, newConsumes);\n\t}\n});\n\nexport const makeGuardianElixirsInput = makeConsumeInputFactory('guardianElixir', [\n\t{ actionId: ActionId.fromItemId(44328), value: GuardianElixir.ElixirOfMightyDefense },\n\t{ actionId: ActionId.fromItemId(40078), value: GuardianElixir.ElixirOfMightyFortitude },\n\t{ actionId: ActionId.fromItemId(40109), value: GuardianElixir.ElixirOfMightyMageblood },\n\t{ actionId: ActionId.fromItemId(44332), value: GuardianElixir.ElixirOfMightyThoughts },\n\t{ actionId: ActionId.fromItemId(40097), value: GuardianElixir.ElixirOfProtection },\n\t{ actionId: ActionId.fromItemId(40072), value: GuardianElixir.ElixirOfSpirit },\n\t{ actionId: ActionId.fromItemId(9088), value: GuardianElixir.GiftOfArthas },\n\t{ actionId: ActionId.fromItemId(32067), value: GuardianElixir.ElixirOfDraenicWisdom },\n\t{ actionId: ActionId.fromItemId(32068), value: GuardianElixir.ElixirOfIronskin },\n\t{ actionId: ActionId.fromItemId(22834), value: GuardianElixir.ElixirOfMajorDefense },\n\t{ actionId: ActionId.fromItemId(32062), value: GuardianElixir.ElixirOfMajorFortitude },\n\t{ actionId: ActionId.fromItemId(22840), value: GuardianElixir.ElixirOfMajorMageblood },\n] as Array<IconEnumValueConfig<Player<any>, GuardianElixir>>, (eventID: EventID, player: Player<any>, newValue: GuardianElixir) => {\n\tif (newValue) {\n\t\tconst newConsumes = player.getConsumes();\n\t\tnewConsumes.flask = Flask.FlaskUnknown;\n\t\tplayer.setConsumes(eventID, newConsumes);\n\t}\n});\n\nexport const makeFoodInput = makeConsumeInputFactory('food', [\n\t{ actionId: ActionId.fromItemId(43015), value: Food.FoodFishFeast },\n\t{ actionId: ActionId.fromItemId(34753), value: Food.FoodGreatFeast },\n\t{ actionId: ActionId.fromItemId(42999), value: Food.FoodBlackenedDragonfin },\n\t{ actionId: ActionId.fromItemId(42995), value: Food.FoodHeartyRhino },\n\t{ actionId: ActionId.fromItemId(34754), value: Food.FoodMegaMammothMeal },\n\t{ actionId: ActionId.fromItemId(34756), value: Food.FoodSpicedWormBurger },\n\t{ actionId: ActionId.fromItemId(42994), value: Food.FoodRhinoliciousWormsteak },\n\t{ actionId: ActionId.fromItemId(34769), value: Food.FoodImperialMantaSteak },\n\t{ actionId: ActionId.fromItemId(42996), value: Food.FoodSnapperExtreme },\n\t{ actionId: ActionId.fromItemId(34758), value: Food.FoodMightyRhinoDogs },\n\t{ actionId: ActionId.fromItemId(34767), value: Food.FoodFirecrackerSalmon },\n\t{ actionId: ActionId.fromItemId(42998), value: Food.FoodCuttlesteak },\n\t{ actionId: ActionId.fromItemId(43000), value: Food.FoodDragonfinFilet },\n\n\t{ actionId: ActionId.fromItemId(27657), value: Food.FoodBlackenedBasilisk },\n\t{ actionId: ActionId.fromItemId(27664), value: Food.FoodGrilledMudfish },\n\t{ actionId: ActionId.fromItemId(27655), value: Food.FoodRavagerDog },\n\t{ actionId: ActionId.fromItemId(27658), value: Food.FoodRoastedClefthoof },\n\t{ actionId: ActionId.fromItemId(33872), value: Food.FoodSpicyHotTalbuk },\n\t{ actionId: ActionId.fromItemId(33825), value: Food.FoodSkullfishSoup },\n\t{ actionId: ActionId.fromItemId(33052), value: Food.FoodFishermansFeast },\n] as Array<IconEnumValueConfig<Player<any>, Food>>);\n\nexport const FillerExplosiveInput = makeConsumeInput('fillerExplosive', [\n\t{ actionId: ActionId.fromItemId(41119), value: Explosive.ExplosiveSaroniteBomb },\n\t{ actionId: ActionId.fromItemId(40771), value: Explosive.ExplosiveCobaltFragBomb },\n] as Array<IconEnumValueConfig<Player<any>, Explosive>>);\n\nfunction makeConsumeInputFactory<T extends number>(consumesFieldName: keyof Consumes, allOptions: Array<IconEnumValueConfig<Player<any>, T>>, onSet?: (eventID: EventID, player: Player<any>, newValue: T) => void): (options: Array<T>) => InputHelpers.TypedIconEnumPickerConfig<Player<any>, T> {\n\treturn (options: Array<T>) => {\n\t\treturn {\n\t\t\ttype: 'iconEnum',\n\t\t\tnumColumns: options.length > 5 ? 2 : 1,\n\t\t\tvalues: [\n\t\t\t\t{ color: 'grey', value: 0 } as unknown as IconEnumValueConfig<Player<any>, T>,\n\t\t\t].concat(options.map(option => allOptions.find(allOption => allOption.value == option)!)),\n\t\t\tequals: (a: T, b: T) => a == b,\n\t\t\tzeroValue: 0 as T,\n\t\t\tchangedEvent: (player: Player<any>) => player.consumesChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => player.getConsumes()[consumesFieldName] as T,\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\t\t\tconst newConsumes = player.getConsumes();\n\t\t\t\t(newConsumes[consumesFieldName] as number) = newValue;\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tplayer.setConsumes(eventID, newConsumes);\n\t\t\t\t\tif (onSet) {\n\t\t\t\t\t\tonSet(eventID, player, newValue as T);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t};\n\t};\n}\n\nfunction makeConsumeInput<T extends number>(consumesFieldName: keyof Consumes, allOptions: Array<IconEnumValueConfig<Player<any>, T>>, onSet?: (eventID: EventID, player: Player<any>, newValue: T) => void): InputHelpers.TypedIconEnumPickerConfig<Player<any>, T> {\n\tconst factory = makeConsumeInputFactory(consumesFieldName, allOptions, onSet);\n\treturn factory(allOptions.map(option => option.value));\n}\n","export const OTHER_BUFFS_SECTION = 'Buffs provided by other party/raid members.';\nexport const DEBUFFS_SECTION = 'Debuffs applied by other raid members.';\nexport const COOLDOWNS_SECTION = 'Specify cooldown timings, in seconds. Cooldowns will be used as soon as possible after their specified timings. When not specified, cooldowns will be used when ready and it is sensible to do so.<br><br>Multiple timings can be provided by separating with commas. Any cooldown usages after the last provided timing will use the default logic.';\nexport const BLESSINGS_SECTION = 'Specify Paladin Blessings for each role, in order of priority. Blessings in the 1st column will be used if there is at least 1 Paladin in the raid, 2nd column if at least 2, etc.';\n\nexport const BASIC_BIS_DISCLAIMER = '<p>Preset gear lists are intended as rough approximations of BIS, and will often not be the absolute highest-DPS setup for you. Your optimal gear setup will depend on many factors; that\\'s why we have a sim!</p><p>Items may also be omitted from the presets if they are highly contested and clearly better utilized on other classes, to encourage equitable gearing for the raid as a whole.</p>';\n","import { ActionId } from './proto_utils/action_id.js';\nimport { BattleElixir, HandType } from './proto/common.js';\nimport { BonusStatsPicker } from './components/bonus_stats_picker.js';\nimport { BooleanPicker, BooleanPickerConfig } from './components/boolean_picker.js';\nimport { CharacterStats, StatMods } from './components/character_stats.js';\nimport { Class } from './proto/common.js';\nimport { Conjured } from './proto/common.js';\nimport { Consumes } from './proto/common.js';\nimport { Cooldowns } from './proto/common.js';\nimport { CooldownsPicker } from './components/cooldowns_picker.js';\nimport { Debuffs } from './proto/common.js';\nimport { DetailedResults } from './components/detailed_results.js';\n\nimport { CustomRotationPicker } from './components/custom_rotation_picker.js';\nimport { Encounter as EncounterProto } from './proto/common.js';\nimport { Encounter } from './encounter.js';\nimport { EncounterPicker, EncounterPickerConfig } from './components/encounter_picker.js';\nimport { EnumPicker, EnumPickerConfig } from './components/enum_picker.js';\nimport { EquipmentSpec } from './proto/common.js';\nimport { EventID, TypedEvent } from './typed_event.js';\nimport { Flask } from './proto/common.js';\nimport { Food } from './proto/common.js';\nimport { Gear } from './proto_utils/gear.js';\nimport { GearPicker } from './components/gear_picker.js';\nimport { Glyphs } from './proto/common.js';\nimport { GuardianElixir } from './proto/common.js';\nimport { HealingModel } from './proto/common.js';\nimport { HunterPetTalentsPicker } from './talents/hunter_pet.js';\nimport { IconEnumPicker, IconEnumPickerConfig } from './components/icon_enum_picker.js';\nimport { IconPicker, IconPickerConfig } from './components/icon_picker.js';\nimport { ItemSlot } from './proto/common.js';\nimport { IndividualBuffs } from './proto/common.js';\nimport { IndividualSimSettings } from './proto/ui.js';\nimport { Input } from './components/input.js';\nimport { LogRunner } from './components/log_runner.js';\nimport { MobType } from './proto/common.js';\nimport { MultiIconPicker } from './components/multi_icon_picker.js';\nimport { NumberPicker, NumberPickerConfig } from './components/number_picker.js';\nimport { Party } from './party.js';\nimport { PartyBuffs } from './proto/common.js';\nimport { PetFood } from './proto/common.js';\nimport { Player as PlayerProto } from './proto/api.js';\nimport { Player } from './player.js';\nimport { Potions } from './proto/common.js';\nimport { Profession } from './proto/common.js';\nimport { Race } from './proto/common.js';\nimport { Raid } from './raid.js';\nimport { RaidBuffs } from './proto/common.js';\nimport { SavedDataConfig, SavedDataManager } from './components/saved_data_manager.js';\nimport { SavedEncounter } from './proto/ui.js';\nimport { SavedGearSet } from './proto/ui.js';\nimport { SavedSettings } from './proto/ui.js';\nimport { SavedTalents } from './proto/ui.js';\nimport { SettingsMenu } from './components/settings_menu.js';\nimport { ShattrathFaction } from './proto/common.js';\nimport { Sim } from './sim.js';\nimport { SimOptions } from './proto/api.js';\nimport { SimSettings as SimSettingsProto } from './proto/ui.js';\nimport { SimUI, SimWarning } from './sim_ui.js';\nimport { Spec } from './proto/common.js';\nimport { SpecOptions } from './proto_utils/utils.js';\nimport { SpecRotation } from './proto_utils/utils.js';\nimport { Stat } from './proto/common.js';\nimport { StatWeightsRequest, StatWeightsResult } from './proto/api.js';\nimport { Stats } from './proto_utils/stats.js';\nimport { shattFactionNames } from './proto_utils/names.js';\nimport { Target } from './target.js';\nimport { Target as TargetProto } from './proto/common.js';\nimport { addRaidSimAction, RaidSimResultsManager } from './components/raid_sim_action.js';\nimport { addStatWeightsAction } from './components/stat_weights_action.js';\nimport { equalsOrBothNull, getEnumValues } from './utils.js';\nimport { getMetaGemConditionDescription } from './proto_utils/gems.js';\nimport { getTalentPoints } from './proto_utils/utils.js';\nimport { isDualWieldSpec } from './proto_utils/utils.js';\nimport { simLaunchStatuses } from './launched_sims.js';\nimport { makePetTypeInputConfig } from './talents/hunter_pet.js';\nimport { newIndividualExporters } from './components/exporters.js';\nimport { newIndividualImporters } from './components/importers.js';\nimport { newGlyphsPicker } from './talents/factory.js';\nimport { newTalentsPicker } from './talents/factory.js';\nimport { professionNames, raceNames } from './proto_utils/names.js';\nimport { isHealingSpec, isTankSpec } from './proto_utils/utils.js';\nimport { specNames } from './proto_utils/utils.js';\nimport { specToEligibleRaces } from './proto_utils/utils.js';\nimport { specToLocalStorageKey } from './proto_utils/utils.js';\n\nimport * as IconInputs from './components/icon_inputs.js';\nimport * as InputHelpers from './components/input_helpers.js';\nimport * as Mechanics from './constants/mechanics.js';\nimport * as OtherConstants from './constants/other.js';\nimport * as Tooltips from './constants/tooltips.js';\n\ndeclare var Muuri: any;\ndeclare var tippy: any;\ndeclare var pako: any;\n\nconst SAVED_GEAR_STORAGE_KEY = '__savedGear__';\nconst SAVED_ROTATION_STORAGE_KEY = '__savedRotation__';\nconst SAVED_SETTINGS_STORAGE_KEY = '__savedSettings__';\nconst SAVED_TALENTS_STORAGE_KEY = '__savedTalents__';\n\nexport type InputConfig<ModObject> = (\n\tInputHelpers.TypedBooleanPickerConfig<ModObject> |\n\tInputHelpers.TypedNumberPickerConfig<ModObject> |\n\tInputHelpers.TypedEnumPickerConfig<ModObject> |\n\tInputHelpers.TypedCustomRotationPickerConfig<any, any>);\n\nexport type IconInputConfig<ModObject, T> = (\n\tInputHelpers.TypedIconPickerConfig<ModObject, T> |\n\tInputHelpers.TypedIconEnumPickerConfig<ModObject, T>);\n\nexport interface InputSection {\n\ttooltip?: string,\n\tinputs: Array<InputConfig<Player<any>>>,\n}\n\nexport interface OtherDefaults {\n\tprofession1?: Profession,\n\tprofession2?: Profession,\n\tdistanceFromTarget?: number,\n}\n\nexport interface IndividualSimUIConfig<SpecType extends Spec> {\n\t// Additional css class to add to the root element.\n\tcssClass: string,\n\n\tknownIssues?: Array<string>;\n\twarnings?: Array<(simUI: IndividualSimUI<SpecType>) => SimWarning>,\n\n\tepStats: Array<Stat>;\n\tepReferenceStat: Stat;\n\tdisplayStats: Array<Stat>;\n\tmodifyDisplayStats?: (player: Player<SpecType>) => StatMods,\n\n\tdefaults: {\n\t\tgear: EquipmentSpec,\n\t\tepWeights: Stats,\n\t\tconsumes: Consumes,\n\t\trotation: SpecRotation<SpecType>,\n\t\ttalents: SavedTalents,\n\t\tspecOptions: SpecOptions<SpecType>,\n\n\t\traidBuffs: RaidBuffs,\n\t\tpartyBuffs: PartyBuffs,\n\t\tindividualBuffs: IndividualBuffs,\n\n\t\tdebuffs: Debuffs,\n\n\t\tother?: OtherDefaults,\n\t},\n\n\tplayerInputs?: InputSection,\n\tplayerIconInputs: Array<IconInputConfig<Player<SpecType>, any>>,\n\tpetConsumeInputs?: Array<IconInputConfig<Player<SpecType>, any>>,\n\trotationInputs: InputSection;\n\trotationIconInputs?: Array<IconInputConfig<Player<any>, any>>;\n\tincludeBuffDebuffInputs: Array<any>,\n\texcludeBuffDebuffInputs: Array<any>,\n\totherInputs: InputSection;\n\n\t// Extra UI sections with the same input config as other sections.\n\tadditionalSections?: Record<string, InputSection>;\n\tadditionalIconSections?: Record<string, Array<IconInputConfig<Player<any>, any>>>;\n\n\t// For when extra sections are needed, with even more flexibility than additionalSections.\n\t// Return value is the label for the section.\n\tcustomSections?: Array<(simUI: IndividualSimUI<SpecType>, parentElem: HTMLElement) => string>;\n\n\tencounterPicker: EncounterPickerConfig,\n\n\tpresets: {\n\t\tgear: Array<PresetGear>,\n\t\ttalents: Array<SavedDataConfig<Player<any>, SavedTalents>>,\n\t\trotation?: Array<SavedDataConfig<Player<any>, string>>,\n\t},\n}\n\nexport interface GearAndStats {\n\tgear: Gear,\n\tbonusStats?: Stats,\n}\n\nexport interface PresetGear {\n\tname: string;\n\tgear: EquipmentSpec;\n\ttooltip?: string;\n\tenableWhen?: (obj: Player<any>) => boolean;\n}\n\nexport interface Settings {\n\traidBuffs: RaidBuffs,\n\tpartyBuffs: PartyBuffs,\n\tindividualBuffs: IndividualBuffs,\n\tconsumes: Consumes,\n\trace: Race,\n\tprofessions?: Array<Profession>;\n}\n\n// Extended shared UI for all individual player sims.\nexport abstract class IndividualSimUI<SpecType extends Spec> extends SimUI {\n\treadonly player: Player<SpecType>;\n\treadonly individualConfig: IndividualSimUIConfig<SpecType>;\n\n\tprivate raidSimResultsManager: RaidSimResultsManager | null;\n\n\tprivate settingsMuuri: any;\n\n\tprevEpIterations: number;\n\tprevEpSimResult: StatWeightsResult | null;\n\n\tconstructor(parentElem: HTMLElement, player: Player<SpecType>, config: IndividualSimUIConfig<SpecType>) {\n\t\tsuper(parentElem, player.sim, {\n\t\t\tspec: player.spec,\n\t\t\tknownIssues: config.knownIssues,\n\t\t\tlaunchStatus: simLaunchStatuses[player.spec],\n\t\t});\n\t\tthis.rootElem.classList.add('individual-sim-ui', config.cssClass);\n\t\tthis.player = player;\n\t\tthis.individualConfig = config;\n\t\tthis.raidSimResultsManager = null;\n\t\tthis.settingsMuuri = null;\n\t\tthis.prevEpIterations = 0;\n\t\tthis.prevEpSimResult = null;\n\n\t\tthis.addWarning({\n\t\t\tupdateOn: this.player.gearChangeEmitter,\n\t\t\tgetContent: () => {\n\t\t\t\tif (!this.player.getGear().hasInactiveMetaGem(this.player.isBlacksmithing())) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\tconst metaGem = this.player.getGear().getMetaGem()!;\n\t\t\t\treturn `Meta gem disabled (${metaGem.name}): ${getMetaGemConditionDescription(metaGem)}`;\n\t\t\t},\n\t\t});\n\t\tthis.addWarning({\n\t\t\tupdateOn: TypedEvent.onAny([this.player.gearChangeEmitter, this.player.professionChangeEmitter]),\n\t\t\tgetContent: () => {\n\t\t\t\tconst failedProfReqs = this.player.getGear().getFailedProfessionRequirements(this.player.getProfessions());\n\t\t\t\tif (failedProfReqs.length == 0) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\treturn failedProfReqs.map(fpr => `${fpr.name} requires ${professionNames[fpr.requiredProfession]}, but it is not selected.`);\n\t\t\t},\n\t\t});\n\t\tthis.addWarning({\n\t\t\tupdateOn: this.player.gearChangeEmitter,\n\t\t\tgetContent: () => {\n\t\t\t\tconst jcGems = this.player.getGear().getJCGems(this.player.isBlacksmithing());\n\t\t\t\tif (jcGems.length <= 3) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\treturn `Only 3 Jewelcrafting Gems are allowed, but ${jcGems.length} are equipped.`;\n\t\t\t},\n\t\t});\n\t\tthis.addWarning({\n\t\t\tupdateOn: this.player.talentsChangeEmitter,\n\t\t\tgetContent: () => {\n\t\t\t\tconst talentPoints = getTalentPoints(this.player.getTalentsString());\n\n\t\t\t\tif (talentPoints == 0) {\n\t\t\t\t\t// Just return here, so we don't show a warning during page load.\n\t\t\t\t\treturn '';\n\t\t\t\t} else if (talentPoints < Mechanics.MAX_TALENT_POINTS) {\n\t\t\t\t\treturn 'Unspent talent points.';\n\t\t\t\t} else if (talentPoints > Mechanics.MAX_TALENT_POINTS) {\n\t\t\t\t\treturn 'More than maximum talent points spent.';\n\t\t\t\t} else {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tthis.addWarning({\n\t\t\tupdateOn: TypedEvent.onAny([this.player.gearChangeEmitter, this.player.talentsChangeEmitter]),\n\t\t\tgetContent: () => {\n\t\t\t\tif (!this.player.canDualWield2H() &&\n\t\t\t\t\t(this.player.getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.handType == HandType.HandTypeTwoHand &&\n\t\t\t\t\t\tthis.player.getEquippedItem(ItemSlot.ItemSlotOffHand) != null ||\n\t\t\t\t\t\tthis.player.getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.handType == HandType.HandTypeTwoHand)) {\n\t\t\t\t\treturn \"Dual wielding two-handed weapon(s) without Titan's Grip spec.\"\n\t\t\t\t} else {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\t(config.warnings || []).forEach(warning => this.addWarning(warning(this)));\n\n\t\tif (!this.isWithinRaidSim) {\n\t\t\t// This needs to go before all the UI components so that gear loading is the\n\t\t\t// first callback invoked from waitForInit().\n\t\t\tthis.sim.waitForInit().then(() => this.loadSettings());\n\t\t}\n\n\t\tthis.addSidebarComponents();\n\t\tthis.addTopbarComponents();\n\t\tthis.addGearTab();\n\t\tthis.addSettingsTab();\n\t\tthis.addTalentsTab();\n\n\t\tif (!this.isWithinRaidSim) {\n\t\t\tthis.addDetailedResultsTab();\n\t\t\tthis.addLogTab();\n\t\t}\n\n\t\tthis.player.changeEmitter.on(() => this.recomputeSettingsLayout());\n\t}\n\n\tprivate loadSettings() {\n\t\tconst initEventID = TypedEvent.nextEventID();\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tlet loadedSettings = false;\n\n\t\t\tlet hash = window.location.hash;\n\t\t\tif (hash.length > 1) {\n\t\t\t\t// Remove leading '#'\n\t\t\t\thash = hash.substring(1);\n\t\t\t\ttry {\n\t\t\t\t\tconst binary = atob(hash);\n\t\t\t\t\tconst bytes = new Uint8Array(binary.length);\n\t\t\t\t\tfor (let i = 0; i < bytes.length; i++) {\n\t\t\t\t\t\tbytes[i] = binary.charCodeAt(i);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst settingsBytes = pako.inflate(bytes);\n\t\t\t\t\tconst settings = IndividualSimSettings.fromBinary(settingsBytes);\n\t\t\t\t\tthis.fromProto(initEventID, settings);\n\t\t\t\t\tloadedSettings = true;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('Failed to parse settings from window hash: ' + e);\n\t\t\t\t}\n\t\t\t}\n\t\t\twindow.location.hash = '';\n\n\t\t\tconst savedSettings = window.localStorage.getItem(this.getSettingsStorageKey());\n\t\t\tif (!loadedSettings && savedSettings != null) {\n\t\t\t\ttry {\n\t\t\t\t\tconst settings = IndividualSimSettings.fromJsonString(savedSettings);\n\t\t\t\t\tthis.fromProto(initEventID, settings);\n\t\t\t\t\tloadedSettings = true;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('Failed to parse saved settings: ' + e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!loadedSettings) {\n\t\t\t\tthis.applyDefaults(initEventID);\n\t\t\t}\n\t\t\tthis.player.setName(initEventID, 'Player');\n\n\t\t\t// This needs to go last so it doesn't re-store things as they are initialized.\n\t\t\tthis.changeEmitter.on(eventID => {\n\t\t\t\tconst jsonStr = IndividualSimSettings.toJsonString(this.toProto());\n\t\t\t\twindow.localStorage.setItem(this.getSettingsStorageKey(), jsonStr);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate addSidebarComponents() {\n\t\tthis.raidSimResultsManager = addRaidSimAction(this);\n\t\taddStatWeightsAction(this, this.individualConfig.epStats, this.individualConfig.epReferenceStat);\n\n\t\tconst characterStats = new CharacterStats(\n\t\t\tthis.rootElem.getElementsByClassName('sim-sidebar-footer')[0] as HTMLElement,\n\t\t\tthis.player,\n\t\t\tthis.individualConfig.displayStats,\n\t\t\tthis.individualConfig.modifyDisplayStats);\n\t}\n\n\tprivate addTopbarComponents() {\n\t\tthis.addToolbarItem(newIndividualImporters(this));\n\t\tthis.addToolbarItem(newIndividualExporters(this));\n\n\t\tconst optionsMenu = document.createElement('span');\n\t\toptionsMenu.classList.add('fas', 'fa-cog');\n\t\ttippy(optionsMenu, {\n\t\t\t'content': 'Options',\n\t\t\t'allowHTML': true,\n\t\t});\n\t\toptionsMenu.addEventListener('click', event => {\n\t\t\tnew SettingsMenu(this.rootElem, this);\n\t\t});\n\t\tthis.addToolbarItem(optionsMenu);\n\t}\n\n\tprivate addGearTab() {\n\t\tthis.addTab('GEAR', 'gear-tab', `\n\t\t\t<div class=\"gear-tab-columns\">\n\t\t\t\t<div class=\"left-gear-panel\">\n\t\t\t\t\t<div class=\"gear-picker\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"right-gear-panel\">\n\t\t\t\t\t<div class=\"bonus-stats-picker\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"saved-gear-manager\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`);\n\n\t\tconst gearPicker = new GearPicker(this.rootElem.getElementsByClassName('gear-picker')[0] as HTMLElement, this.player);\n\t\tconst bonusStatsPicker = new BonusStatsPicker(this.rootElem.getElementsByClassName('bonus-stats-picker')[0] as HTMLElement, this.player, this.individualConfig.epStats);\n\n\t\tconst savedGearManager = new SavedDataManager<Player<any>, SavedGearSet>(this.rootElem.getElementsByClassName('saved-gear-manager')[0] as HTMLElement, this.player, {\n\t\t\tlabel: 'Gear',\n\t\t\tstorageKey: this.getSavedGearStorageKey(),\n\t\t\tgetData: (player: Player<any>) => {\n\t\t\t\treturn SavedGearSet.create({\n\t\t\t\t\tgear: player.getGear().asSpec(),\n\t\t\t\t\tbonusStats: player.getBonusStats().asArray(),\n\t\t\t\t});\n\t\t\t},\n\t\t\tsetData: (eventID: EventID, player: Player<any>, newSavedGear: SavedGearSet) => {\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tplayer.setGear(eventID, this.sim.lookupEquipmentSpec(newSavedGear.gear || EquipmentSpec.create()));\n\t\t\t\t\tplayer.setBonusStats(eventID, new Stats(newSavedGear.bonusStats || []));\n\t\t\t\t});\n\t\t\t},\n\t\t\tchangeEmitters: [this.player.changeEmitter],\n\t\t\tequals: (a: SavedGearSet, b: SavedGearSet) => SavedGearSet.equals(a, b),\n\t\t\ttoJson: (a: SavedGearSet) => SavedGearSet.toJson(a),\n\t\t\tfromJson: (obj: any) => SavedGearSet.fromJson(obj),\n\t\t});\n\n\t\tthis.sim.waitForInit().then(() => {\n\t\t\tsavedGearManager.loadUserData();\n\t\t\tthis.individualConfig.presets.gear.forEach(presetGear => {\n\t\t\t\tsavedGearManager.addSavedData({\n\t\t\t\t\tname: presetGear.name,\n\t\t\t\t\ttooltip: presetGear.tooltip,\n\t\t\t\t\tisPreset: true,\n\t\t\t\t\tdata: SavedGearSet.create({\n\t\t\t\t\t\t// Convert to gear and back so order is always the same.\n\t\t\t\t\t\tgear: this.sim.lookupEquipmentSpec(presetGear.gear).asSpec(),\n\t\t\t\t\t\tbonusStats: new Stats().asArray(),\n\t\t\t\t\t}),\n\t\t\t\t\tenableWhen: presetGear.enableWhen,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\n\tprivate addSettingsTab() {\n\t\tthis.addTab('SETTINGS', 'settings-tab', `\n\t\t\t<div class=\"settings-inputs\">\n\t\t\t\t<div class=\"settings-section-container\">\n\t\t\t\t\t<fieldset class=\"settings-section encounter-section within-raid-sim-hide\">\n\t\t\t\t\t\t<legend>Encounter</legend>\n\t\t\t\t\t</fieldset>\n\t\t\t\t\t<fieldset class=\"settings-section race-section\">\n\t\t\t\t\t\t<legend>Player</legend>\n\t\t\t\t\t\t<div class=\"settings-section-iconrow player-iconrow\"></div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t\t<fieldset class=\"settings-section rotation-section\">\n\t\t\t\t\t\t<legend>Rotation</legend>\n\t\t\t\t\t\t<div class=\"settings-section-iconrow rotation-iconrow\"></div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"settings-section-container custom-sections-container\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"settings-section-container labeled-icon-section within-raid-sim-hide\">\n\t\t\t\t\t<fieldset class=\"settings-section buffs-section\">\n\t\t\t\t\t\t<legend>Raid Buffs</legend>\n\t\t\t\t\t</fieldset>\n\t\t\t\t\t<fieldset class=\"settings-section debuffs-section damage-metrics\">\n\t\t\t\t\t\t<legend>Debuffs</legend>\n\t\t\t\t\t</fieldset>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"settings-section-container\">\n\t\t\t\t\t<fieldset class=\"settings-section new-consumes-section\">\n\t\t\t\t\t\t<legend>Consumes</legend>\n\t\t\t\t\t\t<div class=\"consumes-row\">\n\t\t\t\t\t\t\t<span>Potions</span>\n\t\t\t\t\t\t\t<div class=\"consumes-row-inputs\">\n\t\t\t\t\t\t\t\t<div class=\"consumes-prepot\"></div>\n\t\t\t\t\t\t\t\t<div class=\"consumes-potions\"></div>\n\t\t\t\t\t\t\t\t<div class=\"consumes-conjured\"></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"consumes-row\">\n\t\t\t\t\t\t\t<span>Elixirs</span>\n\t\t\t\t\t\t\t<div class=\"consumes-row-inputs\">\n\t\t\t\t\t\t\t\t<div class=\"consumes-flasks\"></div>\n\t\t\t\t\t\t\t\t<span>OR</span>\n\t\t\t\t\t\t\t\t<div class=\"consumes-battle-elixirs\"></div>\n\t\t\t\t\t\t\t\t<div class=\"consumes-guardian-elixirs\"></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"consumes-row\">\n\t\t\t\t\t\t\t<span>Food</span>\n\t\t\t\t\t\t\t<div class=\"consumes-row-inputs\">\n\t\t\t\t\t\t\t\t<div class=\"consumes-food\"></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"consumes-row damage-metrics\">\n\t\t\t\t\t\t\t<span>Eng</span>\n\t\t\t\t\t\t\t<div class=\"consumes-row-inputs consumes-trade\">\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"consumes-row consumes-row-pet\">\n\t\t\t\t\t\t\t<span>Pet</span>\n\t\t\t\t\t\t\t<div class=\"consumes-row-inputs consumes-pet\">\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"consumes-row\">\n\t\t\t\t\t\t\t<div class=\"consumes-row-inputs consumes-other\">\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"settings-section-container cooldowns-section-container\">\n\t\t\t\t\t<fieldset class=\"settings-section cooldowns-section\">\n\t\t\t\t\t\t<legend>Cooldowns</legend>\n\t\t\t\t\t\t<div class=\"cooldowns-section-content\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t\t<fieldset class=\"settings-section other-settings-section\">\n\t\t\t\t\t\t<legend>Other</legend>\n\t\t\t\t\t</fieldset>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"settings-bottom-bar\">\n\t\t\t\t<div class=\"saved-encounter-manager within-raid-sim-hide\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"saved-settings-manager within-raid-sim-hide\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`);\n\n\t\tconst settingsTab = this.rootElem.getElementsByClassName('settings-inputs')[0] as HTMLElement;\n\n\t\tconst configureIconSection = (sectionElem: HTMLElement, iconPickers: Array<any>, tooltip?: string, adjustColumns?: boolean) => {\n\t\t\tif (tooltip) {\n\t\t\t\ttippy(sectionElem, {\n\t\t\t\t\t'content': tooltip,\n\t\t\t\t\t'allowHTML': true,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (iconPickers.length == 0) {\n\t\t\t\tsectionElem.style.display = 'none';\n\t\t\t} else if (adjustColumns) {\n\t\t\t\tif (iconPickers.length < 4) {\n\t\t\t\t\tsectionElem.style.gridTemplateColumns = `repeat(${iconPickers.length}, 1fr)`;\n\t\t\t\t} else if (iconPickers.length > 4 && iconPickers.length < 8) {\n\t\t\t\t\tsectionElem.style.gridTemplateColumns = `repeat(${Math.ceil(iconPickers.length / 2)}, 1fr)`;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst makeIconInput = (parent: HTMLElement, inputConfig: IconInputConfig<Player<SpecType>, any>) => {\n\t\t\tif (inputConfig.type == 'icon') {\n\t\t\t\treturn new IconPicker<Player<SpecType>, any>(parent, this.player, inputConfig);\n\t\t\t} else if (inputConfig.type == 'iconEnum') {\n\t\t\t\treturn new IconEnumPicker<Player<SpecType>, any>(parent, this.player, inputConfig);\n\t\t\t}\n\t\t};\n\n\t\tconst playerIconsSection = this.rootElem.getElementsByClassName('player-iconrow')[0] as HTMLElement;\n\t\tconfigureIconSection(\n\t\t\tplayerIconsSection,\n\t\t\tthis.individualConfig.playerIconInputs.map(iconInput => makeIconInput(playerIconsSection, iconInput)),\n\t\t\t'', true);\n\n\t\tconst buffOptions = this.splitRelevantOptions([\n\t\t\t{ item: IconInputs.AllStatsBuff, stats: [] },\n\t\t\t{ item: IconInputs.AllStatsPercentBuff, stats: [] },\n\t\t\t{ item: IconInputs.HealthBuff, stats: [Stat.StatHealth] },\n\t\t\t{ item: IconInputs.ArmorBuff, stats: [Stat.StatArmor] },\n\t\t\t{ item: IconInputs.StaminaBuff, stats: [Stat.StatStamina] },\n\t\t\t{ item: IconInputs.StrengthAndAgilityBuff, stats: [Stat.StatStrength, Stat.StatAgility] },\n\t\t\t{ item: IconInputs.IntellectBuff, stats: [Stat.StatIntellect] },\n\t\t\t{ item: IconInputs.SpiritBuff, stats: [Stat.StatSpirit] },\n\t\t\t{ item: IconInputs.AttackPowerBuff, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower] },\n\t\t\t{ item: IconInputs.AttackPowerPercentBuff, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower] },\n\t\t\t{ item: IconInputs.MeleeCritBuff, stats: [Stat.StatMeleeCrit] },\n\t\t\t{ item: IconInputs.MeleeHasteBuff, stats: [Stat.StatMeleeHaste] },\n\t\t\t{ item: IconInputs.SpellPowerBuff, stats: [Stat.StatSpellPower] },\n\t\t\t{ item: IconInputs.SpellCritBuff, stats: [Stat.StatSpellCrit] },\n\t\t\t{ item: IconInputs.HastePercentBuff, stats: [Stat.StatMeleeHaste, Stat.StatSpellHaste] },\n\t\t\t{ item: IconInputs.DamagePercentBuff, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower, Stat.StatSpellPower] },\n\t\t\t{ item: IconInputs.DamageReductionPercentBuff, stats: [Stat.StatArmor] },\n\t\t\t{ item: IconInputs.MP5Buff, stats: [Stat.StatMP5] },\n\t\t\t{ item: IconInputs.ReplenishmentBuff, stats: [Stat.StatMP5] },\n\t\t]);\n\t\tconst buffsSection = this.rootElem.getElementsByClassName('buffs-section')[0] as HTMLElement;\n\t\tconfigureIconSection(\n\t\t\tbuffsSection,\n\t\t\tbuffOptions.map(multiIconInput => new MultiIconPicker(buffsSection, this.player, multiIconInput, this)),\n\t\t\tTooltips.OTHER_BUFFS_SECTION);\n\n\t\tconst otherBuffOptions = this.splitRelevantOptions([\n\t\t\t{ item: IconInputs.Bloodlust, stats: [Stat.StatMeleeHaste, Stat.StatSpellHaste] },\n\t\t\t{ item: IconInputs.SpellHasteBuff, stats: [Stat.StatSpellHaste] },\n\t\t] as Array<StatOption<IconInputConfig<Player<any>, any>>>);\n\t\totherBuffOptions.forEach(iconInput => makeIconInput(buffsSection, iconInput));\n\n\t\tconst revitalizeBuffOptions = this.splitRelevantOptions([\n\t\t\t{ item: IconInputs.RevitalizeRejuvination, stats: [] },\n\t\t\t{ item: IconInputs.RevitalizeWildGrowth, stats: [] },\n\t\t] as Array<StatOption<IconPickerConfig<Player<any>, any>>>);\n\t\tif (revitalizeBuffOptions.length > 0) {\n\t\t\tnew MultiIconPicker(buffsSection, this.player, {\n\t\t\t\tinputs: revitalizeBuffOptions,\n\t\t\t\tnumColumns: 1,\n\t\t\t\temptyColor: 'grey',\n\t\t\t\tlabel: 'Revitalize',\n\t\t\t\tcategoryId: ActionId.fromSpellId(48545),\n\t\t\t}, this);\n\t\t}\n\n\t\tconst miscBuffOptions = this.splitRelevantOptions([\n\t\t\t{ item: IconInputs.HeroicPresence, stats: [Stat.StatMeleeHit, Stat.StatSpellHit] },\n\t\t\t{ item: IconInputs.BraidedEterniumChain, stats: [Stat.StatMeleeCrit] },\n\t\t\t{ item: IconInputs.ChainOfTheTwilightOwl, stats: [Stat.StatSpellCrit] },\n\t\t\t{ item: IconInputs.FocusMagic, stats: [Stat.StatSpellCrit] },\n\t\t\t{ item: IconInputs.EyeOfTheNight, stats: [Stat.StatSpellPower] },\n\t\t\t{ item: IconInputs.Thorns, stats: [Stat.StatArmor] },\n\t\t\t{ item: IconInputs.RetributionAura, stats: [Stat.StatArmor] },\n\t\t\t{ item: IconInputs.ShadowProtection, stats: [Stat.StatStamina] },\n\t\t\t{ item: IconInputs.ManaTideTotem, stats: [Stat.StatMP5] },\n\t\t\t{ item: IconInputs.Innervate, stats: [Stat.StatMP5] },\n\t\t\t{ item: IconInputs.PowerInfusion, stats: [Stat.StatMP5, Stat.StatSpellPower] },\n\t\t\t{ item: IconInputs.TricksOfTheTrade, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower, Stat.StatSpellPower] },\n\t\t\t{ item: IconInputs.UnholyFrenzy, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower] },\n\t\t] as Array<StatOption<IconPickerConfig<Player<any>, any>>>);\n\t\tif (miscBuffOptions.length > 0) {\n\t\t\tnew MultiIconPicker(buffsSection, this.player, {\n\t\t\t\tinputs: miscBuffOptions,\n\t\t\t\tnumColumns: 3,\n\t\t\t\temptyColor: 'grey',\n\t\t\t\tlabel: 'Misc',\n\t\t\t}, this);\n\t\t}\n\n\t\tconst debuffOptions = this.splitRelevantOptions([\n\t\t\t{ item: IconInputs.MajorArmorDebuff, stats: [Stat.StatArmorPenetration] },\n\t\t\t{ item: IconInputs.MinorArmorDebuff, stats: [Stat.StatArmorPenetration] },\n\t\t\t{ item: IconInputs.PhysicalDamageDebuff, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower] },\n\t\t\t{ item: IconInputs.BleedDebuff, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower] },\n\t\t\t{ item: IconInputs.SpellDamageDebuff, stats: [Stat.StatSpellPower] },\n\t\t\t{ item: IconInputs.SpellHitDebuff, stats: [Stat.StatSpellHit] },\n\t\t\t{ item: IconInputs.SpellCritDebuff, stats: [Stat.StatSpellCrit] },\n\t\t\t{ item: IconInputs.CritDebuff, stats: [Stat.StatMeleeCrit, Stat.StatSpellCrit] },\n\t\t\t{ item: IconInputs.AttackPowerDebuff, stats: [Stat.StatArmor] },\n\t\t\t{ item: IconInputs.MeleeAttackSpeedDebuff, stats: [Stat.StatArmor] },\n\t\t\t{ item: IconInputs.MeleeHitDebuff, stats: [Stat.StatDodge] },\n\t\t]);\n\t\tconst debuffsSection = this.rootElem.getElementsByClassName('debuffs-section')[0] as HTMLElement;\n\t\tconfigureIconSection(\n\t\t\tdebuffsSection,\n\t\t\tdebuffOptions.map(multiIconInput => new MultiIconPicker(debuffsSection, this.player, multiIconInput, this)),\n\t\t\tTooltips.DEBUFFS_SECTION);\n\n\t\tconst otherDebuffOptions = this.splitRelevantOptions([\n\t\t\t{ item: IconInputs.JudgementOfWisdom, stats: [Stat.StatMP5, Stat.StatIntellect] },\n\t\t\t{ item: IconInputs.HuntersMark, stats: [Stat.StatRangedAttackPower] },\n\t\t] as Array<StatOption<InputHelpers.TypedIconPickerConfig<Player<any>, any>>>);\n\t\totherDebuffOptions.forEach(iconInput => makeIconInput(debuffsSection, iconInput));\n\n\t\tconst miscDebuffOptions = this.splitRelevantOptions([\n\t\t\t{ item: IconInputs.JudgementOfLight, stats: [Stat.StatStamina] },\n\t\t\t{ item: IconInputs.ShatteringThrow, stats: [Stat.StatArmorPenetration] },\n\t\t\t{ item: IconInputs.GiftOfArthas, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower] },\n\t\t] as Array<StatOption<IconPickerConfig<Player<any>, any>>>);\n\t\tif (miscDebuffOptions.length > 0) {\n\t\t\tnew MultiIconPicker(debuffsSection, this.player, {\n\t\t\t\tinputs: miscDebuffOptions,\n\t\t\t\tnumColumns: 3,\n\t\t\t\temptyColor: 'grey',\n\t\t\t\tlabel: 'Misc',\n\t\t\t}, this);\n\t\t}\n\n\t\tconst prepopPotionOptions = this.splitRelevantOptions([\n\t\t\t// This list is smaller because some potions don't make sense to use as prepot.\n\t\t\t// E.g. healing/mana potions.\n\t\t\t{ item: Potions.IndestructiblePotion, stats: [Stat.StatArmor] },\n\t\t\t{ item: Potions.InsaneStrengthPotion, stats: [Stat.StatStrength] },\n\t\t\t{ item: Potions.PotionOfSpeed, stats: [Stat.StatMeleeHaste, Stat.StatSpellHaste] },\n\t\t\t{ item: Potions.PotionOfWildMagic, stats: [Stat.StatMeleeCrit, Stat.StatSpellCrit, Stat.StatSpellPower] },\n\t\t]);\n\t\tif (prepopPotionOptions.length) {\n\t\t\tconst elem = this.rootElem.getElementsByClassName('consumes-prepot')[0] as HTMLElement;\n\t\t\tnew IconEnumPicker(elem, this.player, IconInputs.makePrepopPotionsInput(prepopPotionOptions));\n\t\t\ttippy(elem, {\n\t\t\t\t'content': 'Prepop Potion (1s before combat)',\n\t\t\t\t'allowHTML': true,\n\t\t\t});\n\t\t}\n\n\t\tconst potionOptions = this.splitRelevantOptions([\n\t\t\t{ item: Potions.RunicHealingPotion, stats: [Stat.StatStamina] },\n\t\t\t{ item: Potions.RunicManaPotion, stats: [Stat.StatIntellect] },\n\t\t\t{ item: Potions.IndestructiblePotion, stats: [Stat.StatArmor] },\n\t\t\t{ item: Potions.InsaneStrengthPotion, stats: [Stat.StatStrength] },\n\t\t\t{ item: Potions.PotionOfSpeed, stats: [Stat.StatMeleeHaste, Stat.StatSpellHaste] },\n\t\t\t{ item: Potions.PotionOfWildMagic, stats: [Stat.StatMeleeCrit, Stat.StatSpellCrit, Stat.StatSpellPower] },\n\t\t]);\n\t\tif (potionOptions.length) {\n\t\t\tconst elem = this.rootElem.getElementsByClassName('consumes-potions')[0] as HTMLElement;\n\t\t\tnew IconEnumPicker(elem, this.player, IconInputs.makePotionsInput(potionOptions));\n\t\t\ttippy(elem, {\n\t\t\t\t'content': 'Combat Potion',\n\t\t\t\t'allowHTML': true,\n\t\t\t});\n\t\t}\n\n\t\tconst conjuredOptions = this.splitRelevantOptions([\n\t\t\tthis.player.getClass() == Class.ClassRogue ? { item: Conjured.ConjuredRogueThistleTea, stats: [] } : null,\n\t\t\t{ item: Conjured.ConjuredHealthstone, stats: [Stat.StatStamina] },\n\t\t\t{ item: Conjured.ConjuredDarkRune, stats: [Stat.StatIntellect] },\n\t\t\t{ item: Conjured.ConjuredFlameCap, stats: [] },\n\t\t]);\n\t\tif (conjuredOptions.length) {\n\t\t\tconst elem = this.rootElem.getElementsByClassName('consumes-conjured')[0] as HTMLElement;\n\t\t\tnew IconEnumPicker(elem, this.player, IconInputs.makeConjuredInput(conjuredOptions));\n\t\t}\n\n\t\tconst flaskOptions = this.splitRelevantOptions([\n\t\t\t{ item: Flask.FlaskOfTheFrostWyrm, stats: [Stat.StatSpellPower] },\n\t\t\t{ item: Flask.FlaskOfEndlessRage, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower] },\n\t\t\t{ item: Flask.FlaskOfPureMojo, stats: [Stat.StatMP5] },\n\t\t\t{ item: Flask.FlaskOfStoneblood, stats: [Stat.StatStamina] },\n\t\t\t{ item: Flask.LesserFlaskOfToughness, stats: [Stat.StatResilience] },\n\t\t\t{ item: Flask.LesserFlaskOfResistance, stats: [Stat.StatArcaneResistance, Stat.StatFireResistance, Stat.StatFrostResistance, Stat.StatNatureResistance, Stat.StatShadowResistance] },\n\t\t]);\n\t\tif (flaskOptions.length) {\n\t\t\tconst elem = this.rootElem.getElementsByClassName('consumes-flasks')[0] as HTMLElement;\n\t\t\tnew IconEnumPicker(elem, this.player, IconInputs.makeFlasksInput(flaskOptions));\n\t\t}\n\n\t\tconst battleElixirOptions = this.splitRelevantOptions([\n\t\t\t{ item: BattleElixir.ElixirOfAccuracy, stats: [Stat.StatMeleeHit, Stat.StatSpellHit] },\n\t\t\t{ item: BattleElixir.ElixirOfArmorPiercing, stats: [Stat.StatArmorPenetration] },\n\t\t\t{ item: BattleElixir.ElixirOfDeadlyStrikes, stats: [Stat.StatMeleeCrit, Stat.StatSpellCrit] },\n\t\t\t{ item: BattleElixir.ElixirOfExpertise, stats: [Stat.StatExpertise] },\n\t\t\t{ item: BattleElixir.ElixirOfLightningSpeed, stats: [Stat.StatMeleeHaste, Stat.StatSpellHaste] },\n\t\t\t{ item: BattleElixir.ElixirOfMightyAgility, stats: [Stat.StatAgility] },\n\t\t\t{ item: BattleElixir.ElixirOfMightyStrength, stats: [Stat.StatStrength] },\n\t\t\t{ item: BattleElixir.GurusElixir, stats: [Stat.StatStamina, Stat.StatAgility, Stat.StatStrength, Stat.StatSpirit, Stat.StatIntellect] },\n\t\t\t{ item: BattleElixir.SpellpowerElixir, stats: [Stat.StatSpellPower] },\n\t\t\t{ item: BattleElixir.WrathElixir, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower] },\n\t\t]);\n\t\tif (battleElixirOptions.length) {\n\t\t\tconst elem = this.rootElem.getElementsByClassName('consumes-battle-elixirs')[0] as HTMLElement;\n\t\t\tnew IconEnumPicker(elem, this.player, IconInputs.makeBattleElixirsInput(battleElixirOptions));\n\t\t}\n\n\t\tconst guardianElixirOptions = this.splitRelevantOptions([\n\t\t\t{ item: GuardianElixir.ElixirOfMightyDefense, stats: [Stat.StatDefense] },\n\t\t\t{ item: GuardianElixir.ElixirOfMightyFortitude, stats: [Stat.StatStamina] },\n\t\t\t{ item: GuardianElixir.ElixirOfMightyMageblood, stats: [Stat.StatMP5] },\n\t\t\t{ item: GuardianElixir.ElixirOfMightyThoughts, stats: [Stat.StatIntellect] },\n\t\t\t{ item: GuardianElixir.ElixirOfProtection, stats: [Stat.StatArmor] },\n\t\t\t{ item: GuardianElixir.ElixirOfSpirit, stats: [Stat.StatSpirit] },\n\t\t\t{ item: GuardianElixir.GiftOfArthas, stats: [Stat.StatStamina] },\n\t\t]);\n\t\tif (guardianElixirOptions.length) {\n\t\t\tconst elem = this.rootElem.getElementsByClassName('consumes-guardian-elixirs')[0] as HTMLElement;\n\t\t\tnew IconEnumPicker(elem, this.player, IconInputs.makeGuardianElixirsInput(guardianElixirOptions));\n\t\t}\n\n\t\tconst foodOptions = this.splitRelevantOptions([\n\t\t\t{ item: Food.FoodFishFeast, stats: [Stat.StatStamina, Stat.StatAttackPower, Stat.StatRangedAttackPower, Stat.StatSpellPower] },\n\t\t\t{ item: Food.FoodGreatFeast, stats: [Stat.StatStamina, Stat.StatAttackPower, Stat.StatRangedAttackPower, Stat.StatSpellPower] },\n\t\t\t{ item: Food.FoodBlackenedDragonfin, stats: [Stat.StatAgility] },\n\t\t\t{ item: Food.FoodDragonfinFilet, stats: [Stat.StatStrength] },\n\t\t\t{ item: Food.FoodCuttlesteak, stats: [Stat.StatSpirit] },\n\t\t\t{ item: Food.FoodMegaMammothMeal, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower] },\n\t\t\t{ item: Food.FoodHeartyRhino, stats: [Stat.StatArmorPenetration] },\n\t\t\t{ item: Food.FoodRhinoliciousWormsteak, stats: [Stat.StatExpertise] },\n\t\t\t{ item: Food.FoodFirecrackerSalmon, stats: [Stat.StatSpellPower] },\n\t\t\t{ item: Food.FoodSnapperExtreme, stats: [Stat.StatMeleeHit, Stat.StatSpellHit] },\n\t\t\t{ item: Food.FoodSpicedWormBurger, stats: [Stat.StatMeleeCrit, Stat.StatSpellCrit] },\n\t\t\t{ item: Food.FoodImperialMantaSteak, stats: [Stat.StatMeleeHaste, Stat.StatSpellHaste] },\n\t\t\t{ item: Food.FoodMightyRhinoDogs, stats: [Stat.StatMP5] },\n\t\t]);\n\t\tif (foodOptions.length) {\n\t\t\tconst elem = this.rootElem.getElementsByClassName('consumes-food')[0] as HTMLElement;\n\t\t\tnew IconEnumPicker(elem, this.player, IconInputs.makeFoodInput(foodOptions));\n\t\t}\n\n\t\tconst tradeConsumesElem = this.rootElem.getElementsByClassName('consumes-trade')[0] as HTMLElement;\n\t\t//tradeConsumesElem.parentElement!.style.display = 'none';\n\t\tmakeIconInput(tradeConsumesElem, IconInputs.ThermalSapper);\n\t\tmakeIconInput(tradeConsumesElem, IconInputs.ExplosiveDecoy);\n\t\tmakeIconInput(tradeConsumesElem, IconInputs.FillerExplosiveInput);\n\n\t\tconst updateProfession = () => {\n\t\t\tif (this.player.hasProfession(Profession.Engineering)) {\n\t\t\t\ttradeConsumesElem.parentElement!.style.removeProperty('display');\n\t\t\t} else {\n\t\t\t\ttradeConsumesElem.parentElement!.style.display = 'none';\n\t\t\t}\n\t\t};\n\t\tthis.player.professionChangeEmitter.on(updateProfession);\n\t\tupdateProfession();\n\n\t\tif (this.individualConfig.petConsumeInputs?.length) {\n\t\t\tconst petConsumesElem = this.rootElem.getElementsByClassName('consumes-pet')[0] as HTMLElement;\n\t\t\tthis.individualConfig.petConsumeInputs.map(iconInput => makeIconInput(petConsumesElem, iconInput));\n\t\t} else {\n\t\t\tconst petRowElem = this.rootElem.getElementsByClassName('consumes-row-pet')[0] as HTMLElement;\n\t\t\tpetRowElem.style.display = 'none';\n\t\t}\n\n\t\tconst configureInputSection = (sectionElem: HTMLElement, sectionConfig: InputSection) => {\n\t\t\tif (sectionConfig.tooltip) {\n\t\t\t\ttippy(sectionElem, {\n\t\t\t\t\t'content': sectionConfig.tooltip,\n\t\t\t\t\t'allowHTML': true,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsectionConfig.inputs.forEach(inputConfig => {\n\t\t\t\tif (inputConfig.type == 'number') {\n\t\t\t\t\tnew NumberPicker(sectionElem, this.player, inputConfig);\n\t\t\t\t} else if (inputConfig.type == 'boolean') {\n\t\t\t\t\tnew BooleanPicker(sectionElem, this.player, inputConfig);\n\t\t\t\t} else if (inputConfig.type == 'enum') {\n\t\t\t\t\tnew EnumPicker(sectionElem, this.player, inputConfig);\n\t\t\t\t} else if (inputConfig.type == 'customRotation') {\n\t\t\t\t\tnew CustomRotationPicker(sectionElem, this.player, inputConfig);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tif (this.individualConfig.playerInputs?.inputs.length) {\n\t\t\tconfigureInputSection(this.rootElem.getElementsByClassName('race-section')[0] as HTMLElement, this.individualConfig.playerInputs);\n\t\t}\n\n\t\tif (this.individualConfig.rotationIconInputs?.length) {\n\t\t\tconst rotationIconSection = this.rootElem.getElementsByClassName('rotation-iconrow')[0] as HTMLElement;\n\t\t\tconfigureIconSection(\n\t\t\t\trotationIconSection,\n\t\t\t\tthis.individualConfig.rotationIconInputs.map(iconInput => makeIconInput(rotationIconSection, iconInput)),\n\t\t\t\t'', true);\n\t\t}\n\n\n\t\tconfigureInputSection(this.rootElem.getElementsByClassName('rotation-section')[0] as HTMLElement, this.individualConfig.rotationInputs);\n\n\t\tif (this.individualConfig.otherInputs?.inputs.length) {\n\t\t\tconfigureInputSection(this.rootElem.getElementsByClassName('other-settings-section')[0] as HTMLElement, this.individualConfig.otherInputs);\n\t\t}\n\n\t\tconst races = specToEligibleRaces[this.player.spec];\n\t\tconst racePicker = new EnumPicker(this.rootElem.getElementsByClassName('race-section')[0] as HTMLElement, this.player, {\n\t\t\tlabel: 'Race',\n\t\t\tvalues: races.map(race => {\n\t\t\t\treturn {\n\t\t\t\t\tname: raceNames[race],\n\t\t\t\t\tvalue: race,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tchangedEvent: sim => sim.raceChangeEmitter,\n\t\t\tgetValue: sim => sim.getRace(),\n\t\t\tsetValue: (eventID, sim, newValue) => sim.setRace(eventID, newValue),\n\t\t});\n\t\tconst professions = getEnumValues(Profession) as Array<Profession>;\n\t\tconst profession1Picker = new EnumPicker(this.rootElem.getElementsByClassName('race-section')[0] as HTMLElement, this.player, {\n\t\t\tlabel: 'Profession 1',\n\t\t\tvalues: professions.map(p => {\n\t\t\t\treturn {\n\t\t\t\t\tname: professionNames[p],\n\t\t\t\t\tvalue: p,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tchangedEvent: sim => sim.professionChangeEmitter,\n\t\t\tgetValue: sim => sim.getProfession1(),\n\t\t\tsetValue: (eventID, sim, newValue) => sim.setProfession1(eventID, newValue),\n\t\t});\n\t\tconst profession2Picker = new EnumPicker(this.rootElem.getElementsByClassName('race-section')[0] as HTMLElement, this.player, {\n\t\t\tlabel: 'Profession 2',\n\t\t\tvalues: professions.map(p => {\n\t\t\t\treturn {\n\t\t\t\t\tname: professionNames[p],\n\t\t\t\t\tvalue: p,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tchangedEvent: sim => sim.professionChangeEmitter,\n\t\t\tgetValue: sim => sim.getProfession2(),\n\t\t\tsetValue: (eventID, sim, newValue) => sim.setProfession2(eventID, newValue),\n\t\t});\n\t\tconst shattFactionPicker = new EnumPicker(this.rootElem.getElementsByClassName('race-section')[0] as HTMLElement, this.player, {\n\t\t\tlabel: 'Shatt Faction',\n\t\t\tvalues: [ShattrathFaction.ShattrathFactionAldor, ShattrathFaction.ShattrathFactionScryer].map(faction => {\n\t\t\t\treturn {\n\t\t\t\t\tname: shattFactionNames[faction],\n\t\t\t\t\tvalue: faction,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tchangedEvent: sim => sim.gearChangeEmitter,\n\t\t\tgetValue: sim => sim.getShattFaction(),\n\t\t\tsetValue: (eventID, sim, newValue) => sim.setShattFaction(eventID, newValue),\n\t\t\tshowWhen: (player: Player<any>) => this.player.getEquippedItem(ItemSlot.ItemSlotNeck)?.item.id == 34678 || this.player.getEquippedItem(ItemSlot.ItemSlotNeck)?.item.id == 34679,\n\t\t});\n\n\t\tconst encounterSectionElem = settingsTab.getElementsByClassName('encounter-section')[0] as HTMLElement;\n\t\tnew EncounterPicker(encounterSectionElem, this.sim.encounter, this.individualConfig.encounterPicker, this);\n\t\tconst savedEncounterManager = new SavedDataManager<Encounter, SavedEncounter>(this.rootElem.getElementsByClassName('saved-encounter-manager')[0] as HTMLElement, this.sim.encounter, {\n\t\t\tlabel: 'Encounter',\n\t\t\tstorageKey: this.getSavedEncounterStorageKey(),\n\t\t\tgetData: (encounter: Encounter) => SavedEncounter.create({ encounter: encounter.toProto() }),\n\t\t\tsetData: (eventID: EventID, encounter: Encounter, newEncounter: SavedEncounter) => encounter.fromProto(eventID, newEncounter.encounter!),\n\t\t\tchangeEmitters: [this.sim.encounter.changeEmitter],\n\t\t\tequals: (a: SavedEncounter, b: SavedEncounter) => SavedEncounter.equals(a, b),\n\t\t\ttoJson: (a: SavedEncounter) => SavedEncounter.toJson(a),\n\t\t\tfromJson: (obj: any) => SavedEncounter.fromJson(obj),\n\t\t});\n\n\t\tconst cooldownSectionElem = settingsTab.getElementsByClassName('cooldowns-section')[0] as HTMLElement;\n\t\tconst cooldownContentElem = settingsTab.getElementsByClassName('cooldowns-section-content')[0] as HTMLElement;\n\t\tnew CooldownsPicker(cooldownContentElem, this.player);\n\t\ttippy(cooldownSectionElem, {\n\t\t\tcontent: Tooltips.COOLDOWNS_SECTION,\n\t\t\tallowHTML: true,\n\t\t\tplacement: 'left',\n\t\t});\n\n\t\t// Init Muuri layout only when settings tab is clicked, because it needs the elements\n\t\t// to be shown so it can calculate sizes.\n\t\t(this.rootElem.getElementsByClassName('settings-tab-tab')[0] as HTMLElement)!.addEventListener('click', event => {\n\t\t\tif (this.settingsMuuri == null) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.settingsMuuri = new Muuri('.settings-inputs');\n\t\t\t\t}, 200); // Magic amount of time before Muuri init seems to work\n\t\t\t}\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.recomputeSettingsLayout();\n\t\t\t}, 200);\n\t\t});\n\n\t\tconst savedSettingsManager = new SavedDataManager<IndividualSimUI<any>, SavedSettings>(this.rootElem.getElementsByClassName('saved-settings-manager')[0] as HTMLElement, this, {\n\t\t\tlabel: 'Settings',\n\t\t\tstorageKey: this.getSavedSettingsStorageKey(),\n\t\t\tgetData: (simUI: IndividualSimUI<any>) => {\n\t\t\t\tconst player = simUI.player;\n\t\t\t\treturn SavedSettings.create({\n\t\t\t\t\traidBuffs: simUI.sim.raid.getBuffs(),\n\t\t\t\t\tpartyBuffs: player.getParty()?.getBuffs() || PartyBuffs.create(),\n\t\t\t\t\tplayerBuffs: player.getBuffs(),\n\t\t\t\t\tdebuffs: simUI.sim.raid.getDebuffs(),\n\t\t\t\t\tconsumes: player.getConsumes(),\n\t\t\t\t\trace: player.getRace(),\n\t\t\t\t\tcooldowns: player.getCooldowns(),\n\t\t\t\t\trotationJson: JSON.stringify(player.specTypeFunctions.rotationToJson(player.getRotation())),\n\t\t\t\t});\n\t\t\t},\n\t\t\tsetData: (eventID: EventID, simUI: IndividualSimUI<any>, newSettings: SavedSettings) => {\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tsimUI.sim.raid.setBuffs(eventID, newSettings.raidBuffs || RaidBuffs.create());\n\t\t\t\t\tsimUI.sim.raid.setDebuffs(eventID, newSettings.debuffs || Debuffs.create());\n\t\t\t\t\tconst party = simUI.player.getParty();\n\t\t\t\t\tif (party) {\n\t\t\t\t\t\tparty.setBuffs(eventID, newSettings.partyBuffs || PartyBuffs.create());\n\t\t\t\t\t}\n\t\t\t\t\tsimUI.player.setBuffs(eventID, newSettings.playerBuffs || IndividualBuffs.create());\n\t\t\t\t\tsimUI.player.setConsumes(eventID, newSettings.consumes || Consumes.create());\n\t\t\t\t\tsimUI.player.setRace(eventID, newSettings.race);\n\t\t\t\t\tsimUI.player.setCooldowns(eventID, newSettings.cooldowns || Cooldowns.create());\n\t\t\t\t\tif (newSettings.rotationJson) {\n\t\t\t\t\t\tsimUI.player.setRotation(eventID, simUI.player.specTypeFunctions.rotationFromJson(JSON.parse(newSettings.rotationJson)));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tchangeEmitters: [\n\t\t\t\tthis.sim.raid.buffsChangeEmitter,\n\t\t\t\tthis.sim.raid.debuffsChangeEmitter,\n\t\t\t\tthis.player.getParty()!.buffsChangeEmitter,\n\t\t\t\tthis.player.buffsChangeEmitter,\n\t\t\t\tthis.player.consumesChangeEmitter,\n\t\t\t\tthis.player.raceChangeEmitter,\n\t\t\t\tthis.player.cooldownsChangeEmitter,\n\t\t\t\tthis.player.rotationChangeEmitter,\n\t\t\t],\n\t\t\tequals: (a: SavedSettings, b: SavedSettings) => SavedSettings.equals(a, b),\n\t\t\ttoJson: (a: SavedSettings) => SavedSettings.toJson(a),\n\t\t\tfromJson: (obj: any) => SavedSettings.fromJson(obj),\n\t\t});\n\n\t\tconst customSectionsContainer = this.rootElem.getElementsByClassName('custom-sections-container')[0] as HTMLElement;\n\t\tlet anyCustomSections = false;\n\t\tfor (const [sectionName, sectionConfig] of Object.entries(this.individualConfig.additionalSections || {})) {\n\t\t\tconst sectionCssPrefix = sectionName.replace(/\\s+/g, '');\n\t\t\tconst sectionElem = document.createElement('fieldset');\n\t\t\tsectionElem.classList.add('settings-section', sectionCssPrefix + '-section');\n\t\t\tsectionElem.innerHTML = `<legend>${sectionName}</legend>`;\n\t\t\tcustomSectionsContainer.appendChild(sectionElem);\n\t\t\tconfigureInputSection(sectionElem, sectionConfig);\n\t\t\tanyCustomSections = true;\n\t\t};\n\n\t\tfor (const [sectionName, sectionConfig] of Object.entries(this.individualConfig.additionalIconSections || {})) {\n\t\t\tconst sectionCssPrefix = sectionName.replace(/\\s+/g, '');\n\t\t\tconst sectionElem = document.createElement('fieldset');\n\t\t\tsectionElem.classList.add('settings-section', sectionCssPrefix + '-section');\n\t\t\tsectionElem.innerHTML = `<legend>${sectionName}</legend>`;\n\t\t\tcustomSectionsContainer.appendChild(sectionElem);\n\t\t\tconfigureIconSection(sectionElem, sectionConfig.map(iconInput => makeIconInput(sectionElem, iconInput)));\n\t\t\tanyCustomSections = true;\n\t\t};\n\n\t\t(this.individualConfig.customSections || []).forEach(customSection => {\n\t\t\tconst sectionElem = document.createElement('fieldset');\n\t\t\tcustomSectionsContainer.appendChild(sectionElem);\n\t\t\tconst sectionName = customSection(this, sectionElem);\n\t\t\tconst sectionCssPrefix = sectionName.replace(/\\s+/g, '');\n\t\t\tsectionElem.classList.add('settings-section', sectionCssPrefix + '-section');\n\t\t\tconst labelElem = document.createElement('legend');\n\t\t\tlabelElem.textContent = sectionName;\n\t\t\tsectionElem.prepend(labelElem);\n\t\t\tanyCustomSections = true;\n\t\t});\n\n\t\tif (!anyCustomSections) {\n\t\t\tcustomSectionsContainer.remove();\n\t\t}\n\n\t\tthis.sim.waitForInit().then(() => {\n\t\t\tsavedEncounterManager.loadUserData();\n\t\t\tsavedSettingsManager.loadUserData();\n\t\t});\n\n\t\tArray.from(this.rootElem.getElementsByClassName('settings-section-container')).forEach((container, i) => {\n\t\t\t(container as HTMLElement).style.zIndex = String(1000 - i);\n\t\t});\n\t}\n\n\tprivate addTalentsTab() {\n\t\tthis.addTab('TALENTS', 'talents-tab', `\n\t\t\t<div class=\"player-pet-toggle\">\n\t\t\t</div>\n\t\t\t<div class=\"talents-content\">\n\t\t\t\t<div class=\"talents-tab-content\">\n\t\t\t\t\t<div class=\"talents-picker\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"glyphs-picker\">\n\t\t\t\t\t<span>Glyphs</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"saved-talents-manager\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"talents-content\">\n\t\t\t\t<div class=\"talents-tab-content\">\n\t\t\t\t\t<div class=\"pet-talents-picker\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`);\n\n\t\tconst talentsPicker = newTalentsPicker(this.rootElem.getElementsByClassName('talents-picker')[0] as HTMLElement, this.player);\n\t\tconst glyphsPicker = newGlyphsPicker(this.rootElem.getElementsByClassName('glyphs-picker')[0] as HTMLElement, this.player);\n\n\t\tconst savedTalentsManager = new SavedDataManager<Player<any>, SavedTalents>(this.rootElem.getElementsByClassName('saved-talents-manager')[0] as HTMLElement, this.player, {\n\t\t\tlabel: 'Talents',\n\t\t\tstorageKey: this.getSavedTalentsStorageKey(),\n\t\t\tgetData: (player: Player<any>) => SavedTalents.create({\n\t\t\t\ttalentsString: player.getTalentsString(),\n\t\t\t\tglyphs: player.getGlyphs(),\n\t\t\t}),\n\t\t\tsetData: (eventID: EventID, player: Player<any>, newTalents: SavedTalents) => {\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tplayer.setTalentsString(eventID, newTalents.talentsString);\n\t\t\t\t\tplayer.setGlyphs(eventID, newTalents.glyphs || Glyphs.create());\n\t\t\t\t});\n\t\t\t},\n\t\t\tchangeEmitters: [this.player.talentsChangeEmitter, this.player.glyphsChangeEmitter],\n\t\t\tequals: (a: SavedTalents, b: SavedTalents) => SavedTalents.equals(a, b),\n\t\t\ttoJson: (a: SavedTalents) => SavedTalents.toJson(a),\n\t\t\tfromJson: (obj: any) => SavedTalents.fromJson(obj),\n\t\t});\n\n\t\tthis.sim.waitForInit().then(() => {\n\t\t\tsavedTalentsManager.loadUserData();\n\t\t\tthis.individualConfig.presets.talents.forEach(config => {\n\t\t\t\tconfig.isPreset = true;\n\t\t\t\tsavedTalentsManager.addSavedData({\n\t\t\t\t\tname: config.name,\n\t\t\t\t\tisPreset: true,\n\t\t\t\t\tdata: config.data,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (this.player.getClass() == Class.ClassHunter) {\n\t\t\t\tconst petTalentsPicker = new HunterPetTalentsPicker(this.rootElem.getElementsByClassName('pet-talents-picker')[0] as HTMLElement, this.player as Player<Spec.SpecHunter>);\n\n\t\t\t\tlet curShown = 0;\n\t\t\t\tconst toggledElems = Array.from(this.rootElem.getElementsByClassName('talents-content')) as Array<HTMLElement>;\n\t\t\t\tconst updateToggle = () => {\n\t\t\t\t\ttoggledElems[1 - curShown].style.display = 'none';\n\t\t\t\t\ttoggledElems[curShown].style.removeProperty('display');\n\n\t\t\t\t\tif (curShown == 0) {\n\t\t\t\t\t\tpetTypeToggle.rootElem.style.display = 'none';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpetTypeToggle.rootElem.style.removeProperty('display');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst toggleContainer = this.rootElem.getElementsByClassName('player-pet-toggle')[0] as HTMLElement;\n\t\t\t\tconst playerPetToggle = new EnumPicker(toggleContainer, this, {\n\t\t\t\t\tvalues: [\n\t\t\t\t\t\t{ name: 'Player', value: 0 },\n\t\t\t\t\t\t{ name: 'Pet', value: 1 },\n\t\t\t\t\t],\n\t\t\t\t\tchangedEvent: sim => new TypedEvent(),\n\t\t\t\t\tgetValue: sim => curShown,\n\t\t\t\t\tsetValue: (eventID, sim, newValue) => {\n\t\t\t\t\t\tcurShown = newValue;\n\t\t\t\t\t\tupdateToggle();\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tconst petTypeToggle = new IconEnumPicker(toggleContainer, this.player as Player<Spec.SpecHunter>, makePetTypeInputConfig(false));\n\t\t\t\tupdateToggle();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate addDetailedResultsTab() {\n\t\tthis.addTab('DETAILED RESULTS', 'detailed-results-tab', `\n\t\t\t<div class=\"detailed-results\">\n\t\t\t</div>\n\t\t`);\n\n\t\tconst detailedResults = new DetailedResults(this.rootElem.getElementsByClassName('detailed-results')[0] as HTMLElement, this, this.raidSimResultsManager!);\n\t}\n\n\tprivate addLogTab() {\n\t\tthis.addTab('LOG', 'log-tab', `\n\t\t\t<div class=\"log-runner\">\n\t\t\t</div>\n\t\t`);\n\n\t\tconst logRunner = new LogRunner(this.rootElem.getElementsByClassName('log-runner')[0] as HTMLElement, this);\n\t}\n\n\tapplyDefaults(eventID: EventID) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tconst tankSpec = isTankSpec(this.player.spec);\n\t\t\tconst healingSpec = isHealingSpec(this.player.spec);\n\n\t\t\tthis.player.applySharedDefaults(eventID);\n\t\t\tthis.player.setRace(eventID, specToEligibleRaces[this.player.spec][0]);\n\t\t\tthis.player.setGear(eventID, this.sim.lookupEquipmentSpec(this.individualConfig.defaults.gear));\n\t\t\tthis.player.setConsumes(eventID, this.individualConfig.defaults.consumes);\n\t\t\tthis.player.setRotation(eventID, this.individualConfig.defaults.rotation);\n\t\t\tthis.player.setTalentsString(eventID, this.individualConfig.defaults.talents.talentsString);\n\t\t\tthis.player.setGlyphs(eventID, this.individualConfig.defaults.talents.glyphs || Glyphs.create());\n\t\t\tthis.player.setSpecOptions(eventID, this.individualConfig.defaults.specOptions);\n\t\t\tthis.player.setBuffs(eventID, this.individualConfig.defaults.individualBuffs);\n\t\t\tthis.player.getParty()!.setBuffs(eventID, this.individualConfig.defaults.partyBuffs);\n\t\t\tthis.player.getRaid()!.setBuffs(eventID, this.individualConfig.defaults.raidBuffs);\n\t\t\tthis.player.setEpWeights(eventID, this.individualConfig.defaults.epWeights);\n\t\t\tthis.player.setProfession1(eventID, this.individualConfig.defaults.other?.profession1 || Profession.Engineering);\n\t\t\tthis.player.setProfession2(eventID, this.individualConfig.defaults.other?.profession2 || Profession.Jewelcrafting);\n\t\t\tthis.player.setDistanceFromTarget(eventID, this.individualConfig.defaults.other?.distanceFromTarget || 0);\n\n\t\t\tif (this.isWithinRaidSim) {\n\t\t\t\tthis.sim.raid.setTargetDummies(eventID, 0);\n\t\t\t} else {\n\t\t\t\tthis.sim.raid.setTargetDummies(eventID, healingSpec ? 9 : 0);\n\t\t\t\tthis.sim.encounter.applyDefaults(eventID);\n\t\t\t\tthis.sim.raid.setDebuffs(eventID, this.individualConfig.defaults.debuffs);\n\t\t\t\tthis.sim.applyDefaults(eventID, tankSpec, healingSpec);\n\n\t\t\t\tif (tankSpec) {\n\t\t\t\t\tthis.sim.raid.setTanks(eventID, [this.player.makeRaidTarget()]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.sim.raid.setTanks(eventID, []);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tgetSavedGearStorageKey(): string {\n\t\treturn this.getStorageKey(SAVED_GEAR_STORAGE_KEY);\n\t}\n\n\tgetSavedRotationStorageKey(): string {\n\t\treturn this.getStorageKey(SAVED_ROTATION_STORAGE_KEY);\n\t}\n\n\tgetSavedSettingsStorageKey(): string {\n\t\treturn this.getStorageKey(SAVED_SETTINGS_STORAGE_KEY);\n\t}\n\n\tgetSavedTalentsStorageKey(): string {\n\t\treturn this.getStorageKey(SAVED_TALENTS_STORAGE_KEY);\n\t}\n\n\tprivate recomputeSettingsLayout() {\n\t\tif (this.settingsMuuri) {\n\t\t\t//this.settingsMuuri.refreshItems();\n\t\t}\n\t\twindow.dispatchEvent(new Event('resize'));\n\t}\n\n\t// Returns the actual key to use for local storage, based on the given key part and the site context.\n\tgetStorageKey(keyPart: string): string {\n\t\t// Local storage is shared by all sites under the same domain, so we need to use\n\t\t// different keys for each spec site.\n\t\treturn specToLocalStorageKey[this.player.spec] + keyPart;\n\t}\n\n\ttoProto(): IndividualSimSettings {\n\t\treturn IndividualSimSettings.create({\n\t\t\tsettings: this.sim.toProto(),\n\t\t\tplayer: this.player.toProto(true),\n\t\t\traidBuffs: this.sim.raid.getBuffs(),\n\t\t\tdebuffs: this.sim.raid.getDebuffs(),\n\t\t\ttanks: this.sim.raid.getTanks(),\n\t\t\tpartyBuffs: this.player.getParty()?.getBuffs() || PartyBuffs.create(),\n\t\t\tencounter: this.sim.encounter.toProto(),\n\t\t\tepWeights: this.player.getEpWeights().asArray(),\n\t\t\ttargetDummies: this.sim.raid.getTargetDummies(),\n\t\t});\n\t}\n\n\ttoLink(): string {\n\t\tconst proto = this.toProto();\n\t\t// When sharing links, people generally don't intend to share settings/ep weights.\n\t\tproto.settings = undefined;\n\t\tproto.epWeights = [];\n\n\t\tconst protoBytes = IndividualSimSettings.toBinary(proto);\n\t\tconst deflated = pako.deflate(protoBytes, { to: 'string' });\n\t\tconst encoded = btoa(String.fromCharCode(...deflated));\n\n\t\tconst linkUrl = new URL(window.location.href);\n\t\tlinkUrl.hash = encoded;\n\t\treturn linkUrl.toString();\n\t}\n\n\tfromProto(eventID: EventID, settings: IndividualSimSettings) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tif (!settings.player) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.player.fromProto(eventID, settings.player);\n\t\t\tif (settings.epWeights?.length > 0) {\n\t\t\t\t// Correction for removal of healing power and arcane/fire/etc power.\n\t\t\t\t// TODO: Remove this after 2 months (2022/11/22).\n\t\t\t\tif (settings.epWeights.length > 37) {\n\t\t\t\t\tsettings.epWeights.splice(6, 7);\n\t\t\t\t}\n\t\t\t\tthis.player.setEpWeights(eventID, new Stats(settings.epWeights));\n\t\t\t} else {\n\t\t\t\tthis.player.setEpWeights(eventID, this.individualConfig.defaults.epWeights);\n\t\t\t}\n\t\t\tthis.sim.raid.setBuffs(eventID, settings.raidBuffs || RaidBuffs.create());\n\t\t\tthis.sim.raid.setDebuffs(eventID, settings.debuffs || Debuffs.create());\n\t\t\tthis.sim.raid.setTanks(eventID, settings.tanks || []);\n\t\t\tthis.sim.raid.setTargetDummies(eventID, settings.targetDummies);\n\t\t\tconst party = this.player.getParty();\n\t\t\tif (party) {\n\t\t\t\tparty.setBuffs(eventID, settings.partyBuffs || PartyBuffs.create());\n\t\t\t}\n\n\t\t\tif (settings.encounter) {\n\t\t\t\t// Correction for removal of healing power and arcane/fire/etc power.\n\t\t\t\t// TODO: Remove this after 2 months (2022/11/22).\n\t\t\t\tsettings.encounter.targets.forEach(target => {\n\t\t\t\t\tif (target.stats.length > 37) {\n\t\t\t\t\t\ttarget.stats.splice(6, 7);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.sim.encounter.fromProto(eventID, settings.encounter || EncounterProto.create());\n\n\t\t\tif (settings.settings) {\n\t\t\t\tthis.sim.fromProto(eventID, settings.settings);\n\t\t\t} else {\n\t\t\t\tconst tankSpec = isTankSpec(this.player.spec);\n\t\t\t\tconst healingSpec = isHealingSpec(this.player.spec);\n\t\t\t\tthis.sim.applyDefaults(eventID, tankSpec, healingSpec);\n\t\t\t}\n\n\t\t\t// Needed because of new proto field addition. Can remove on 2022/11/14 (2 months).\n\t\t\tif (!isHealingSpec(this.player.spec)) {\n\t\t\t\tthis.sim.setShowDamageMetrics(eventID, true);\n\t\t\t}\n\t\t});\n\t}\n\n\tsplitRelevantOptions<T>(options: Array<StatOption<T> | null>): Array<T> {\n\t\treturn options\n\t\t\t.filter(option => option != null)\n\t\t\t.filter(option =>\n\t\t\t\tthis.individualConfig.includeBuffDebuffInputs.includes(option!.item) ||\n\t\t\t\toption!.stats.length == 0 ||\n\t\t\t\toption!.stats.some(stat => this.individualConfig.epStats.includes(stat)))\n\t\t\t.filter(option =>\n\t\t\t\t!this.individualConfig.excludeBuffDebuffInputs.includes(option!.item))\n\t\t\t.map(option => option!.item);\n\t}\n}\n\nexport interface StatOption<T> {\n\tstats: Array<Stat>,\n\titem: T,\n}\n"],"names":["Target","constructor","sim","this","id","name","level","Mechanics.BOSS_LEVEL","mobType","MobType","MobTypeDemon","tankIndex","stats","Stats","swingSpeed","minBaseDamage","dualWield","dualWieldPenalty","suppressDodge","parryHaste","tightEnemyDamage","spellSchool","SpellSchool","SpellSchoolPhysical","idChangeEmitter","TypedEvent","nameChangeEmitter","levelChangeEmitter","mobTypeChangeEmitter","propChangeEmitter","statsChangeEmitter","changeEmitter","forEach","emitter","on","eventID","emit","encounter","getId","setId","newId","getName","setName","newName","getLevel","setLevel","newLevel","getMobType","setMobType","newMobType","getTankIndex","setTankIndex","newTankIndex","getSwingSpeed","setSwingSpeed","newSwingSpeed","getMinBaseDamage","setMinBaseDamage","newMinBaseDamage","getDualWield","setDualWield","newDualWield","getDualWieldPenalty","setDualWieldPenalty","newDualWieldPenalty","getSuppressDodge","setSuppressDodge","newSuppressDodge","getParryHaste","setParryHaste","newParryHaste","getTightEnemyDamage","setTightEnemyDamage","newTightEnemyDamage","getSpellSchool","setSpellSchool","newSpellSchool","getStats","setStats","newStats","equals","matchesPreset","preset","TargetProto","toProto","target","applyPreset","fromProto","create","asArray","proto","freezeAllAndDo","clone","newTarget","static","MobTypeUndead","fromMap","Stat","StatArmor","StatAttackPower","defaultProto","Encounter","duration","durationVariation","executeProportion20","executeProportion25","executeProportion35","useHealth","targetsChangeEmitter","durationChangeEmitter","executeProportionChangeEmitter","targets","fromDefaults","nextEventID","primaryTarget","getDurationVariation","setDurationVariation","newDuration","getDuration","setDuration","getExecuteProportion20","setExecuteProportion20","newExecuteProportion20","getExecuteProportion25","setExecuteProportion25","newExecuteProportion25","getExecuteProportion35","setExecuteProportion35","newExecuteProportion35","getUseHealth","setUseHealth","newUseHealth","getNumTargets","length","getTargets","slice","setTargets","newTargets","every","i","t","push","nt","EncounterProto","map","targetProto","applyDefaults","MAX_NUM_PARTIES","Raid","buffs","RaidBuffs","debuffs","Debuffs","tanks","targetDummies","compChangeEmitter","buffsChangeEmitter","debuffsChangeEmitter","tanksChangeEmitter","targetDummiesChangeEmitter","parties","Array","keys","newParty","Party","onAny","size","sum","party","isEmpty","getParties","getParty","index","getPlayers","flat","getPlayer","Math","floor","MAX_PARTY_SIZE","getPlayerFromRaidTarget","raidTarget","targetIndex","NO_TARGET","setPlayer","newPlayer","getClassCount","playerClass","filter","player","getClass","getBuffs","setBuffs","newBuffs","totemOfWrath","newDebuff","setDebuffs","getDebuffs","newDebuffs","getTanks","RaidTarget","tank","setTanks","newTanks","getTargetDummies","setTargetDummies","newTargetDummies","forExport","RaidProto","clear","SIM_WORKER_URL","REPO_NAME","WorkerPool","numWorkers","workers","SimWorker","getLeastBusyWorker","reduce","curMinWorker","nextWorker","numTasksRunning","async","requestName","request","doApiCall","result","makeApiCall","GearListRequest","toBinary","GearListResult","fromBinary","ComputeStatsRequest","ComputeStatsResult","onProgress","console","log","StatWeightsRequest","toJsonString","worker","makeTaskId","addPromiseFunc","newProgressHandler","err","resultData","ProgressMetrics","StatWeightsResult","finalWeightResult","RaidSimRequest","resultJson","RaidSimResult","toJson","finalRaidResult","JSON","stringify","progressData","progress","taskIdsToPromiseFuncs","window","Worker","resolveReady","onReady","Promise","_resolve","_reject","onmessage","event","data","msg","postMessage","warn","promiseFuncs","outputData","callback","onError","characters","charAt","random","taskPromise","resolve","reject","inputData","_Sim","iterations","phase","OtherConstants.CURRENT_PHASE","faction","Faction","Alliance","fixedRngSeed","show1hWeapons","show2hWeapons","showMatchingGems","showDamageMetrics","showThreatMetrics","showHealingMetrics","showExperimental","items","enchants","gems","presetEncounters","presetTargets","iterationsChangeEmitter","phaseChangeEmitter","factionChangeEmitter","fixedRngSeedChangeEmitter","lastUsedRngSeedChangeEmitter","show1hWeaponsChangeEmitter","show2hWeaponsChangeEmitter","showMatchingGemsChangeEmitter","showDamageMetricsChangeEmitter","showThreatMetricsChangeEmitter","showHealingMetricsChangeEmitter","showExperimentalChangeEmitter","crashEmitter","simResultEmitter","lastUsedRngSeed","modifyRaidProto","workerPool","_initPromise","getGearList","then","item","gem","encounters","path","e","raid","settingsChangeEmitter","updateCharacterStats","waitForInit","setModifyRaidProto","newModFn","getModifiedRaidProto","raidProto","players","equipment","gear","lookupEquipmentSpec","gearChanged","isBlacksmith","profession1","profession2","includes","Profession","Blacksmithing","hasInactiveMetaGem","withoutMetaGem","withoutBlacksmithSockets","asSpec","makeRaidSimRequest","debug","simOptions","SimOptions","getIterations","randomSeed","BigInt","nextRngSeed","debugFirstIteration","Error","raidSimAsync","errorResult","SimError","simResult","SimResult","makeNew","req","computeStats","raidStats","partyStats","partyIndex","playerStats","playerIndex","setCurrentStats","epStats","epReferenceStat","getRaidIndex","raidBuffs","partyBuffs","statsToWeigh","statWeightsAsync","getItems","slot","Object","values","getEligibleItemSlots","getEnchants","enchant","getEligibleEnchantSlots","getEnchantFlexible","find","effectId","getGems","socketColor","gemEligibleForSocket","getMatchingGems","gemMatchesSocket","getPresetEncounter","getPresetTarget","getAllPresetEncounters","getAllPresetTargets","getPhase","setPhase","newPhase","getFaction","setFaction","newFaction","getFixedRngSeed","setFixedRngSeed","newFixedRngSeed","rngSeed","MAX_RNG_SEED","getLastUsedRngSeed","getShow1hWeapons","setShow1hWeapons","newShow1hWeapons","getShow2hWeapons","setShow2hWeapons","newShow2hWeapons","getShowMatchingGems","setShowMatchingGems","newShowMatchingGems","getShowDamageMetrics","setShowDamageMetrics","newShowDamageMetrics","getShowThreatMetrics","setShowThreatMetrics","newShowThreatMetrics","getShowHealingMetrics","setShowHealingMetrics","newShowHealingMetrics","getShowExperimental","setShowExperimental","newShowExperimental","setIterations","newIterations","lookupItemSpec","itemSpec","type","gemId","EquippedItem","equipSpec","gearMap","assignedSlot","Item","Gear","SimSettingsProto","Number","isTankSim","isHealingSim","Sim","pow","errorStr","super","NumberPicker","Input","parent","modObject","config","float","positive","inputElem","document","createElement","inputMode","min","onchange","value","abs","parseInt","toString","classList","add","rootElem","appendChild","init","addEventListener","inputChanged","getInputElem","getInputValue","parseFloat","setInputValue","newValue","String","BonusStatsPicker","Component","label","textContent","tippy","content","allowHTML","statPickers","statOrder","stat","getClassStatName","changedEvent","bonusStatsChangeEmitter","getValue","getBonusStats","getStat","setValue","bonusStats","withStat","player2","setBonusStats","statPicker","remove","BooleanPicker","Boolean","checked","CharacterStats","modifyDisplayStats","table","valueElems","tooltipElems","row","innerHTML","toUpperCase","valueElem","getElementsByClassName","tooltipElem","updateStats","currentStatsEmitter","getCurrentStats","statMods","talents","baseStats","gearStats","talentsStats","buffsStats","consumesStats","debuffStats","getDebuffStats","finalStats","gearDelta","subtract","talentsDelta","buffsDelta","consumesDelta","idx","statDisplayString","rawValue","displayStr","round","StatMeleeHit","Mechanics.MELEE_HIT_RATING_PER_HIT_CHANCE","toFixed","StatSpellHit","Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE","StatMeleeCrit","StatSpellCrit","Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE","StatMeleeHaste","Class","ClassDruid","ClassShaman","ClassPaladin","ClassDeathknight","Mechanics.SPECIAL_MELEE_HASTE_RATING_PER_HASTE_PERCENT","Mechanics.HASTE_RATING_PER_HASTE_PERCENT","StatSpellHaste","StatExpertise","Mechanics.EXPERTISE_PER_QUARTER_PERCENT_REDUCTION","StatDefense","Mechanics.CHARACTER_LEVEL","Mechanics.DEFENSE_RATING_PER_DEFENSE","StatBlock","Mechanics.BLOCK_RATING_PER_BLOCK_CHANCE","StatDodge","Mechanics.DODGE_RATING_PER_DODGE_CHANCE","StatParry","Mechanics.PARRY_RATING_PER_PARRY_CHANCE","misery","faerieFire","TristateEffect","TristateEffectImproved","addStat","heartOfTheCrusader","masterPoisoner","Mechanics.MELEE_CRIT_RATING_PER_CRIT_CHANCE","improvedScorch","wintersChill","shadowMastery","IconEnumPicker","modObj","currentValue","zeroValue","buttonElem","dropdownElem","buttonText","preventDefault","style","display","gridTemplateColumns","numColumns","valueConfig","optionContainer","option","setImage","text","optionText","append","tooltip","showWhen","dispatchEvent","Event","setActionImage","elem","actionId","fillAndSet","backgroundImage","backgroundColor","color","backupIconUrl","backupId","NumberListPicker","placeholder","str","split","val","isNaN","arrayEquals","v","join","CooldownsPicker","parentElem","cooldownPickers","update","cooldowns","getCooldowns","cooldown","deleteButton","newCooldowns","splice","setCooldowns","makeActionPicker","ActionId","fill","filledId","makeTimingsPicker","cooldownIndex","availableCooldowns","extraCssClasses","ActionIdProto","concat","cooldownAction","a","b","cooldownsChangeEmitter","Cooldown","timings","enableWhen","curCooldown","DetailedResults","simUI","simResultsManager","tabWindow","latestRun","updateSettings","computedStyles","getComputedStyle","url","URL","location","protocol","host","searchParams","getPropertyValue","trim","isIndividualSim","href","iframeElem","closed","open","setSimRunData","focus","currentChangeEmitter","runData","getRunData","simRunData","DetailedResultsUpdate","oneofKind","settings","contentWindow","ListPicker","itemPickerPairs","title","itemLabel","titleTooltip","itemsDiv","newItem","newList","pair","removePairs","ipp","curItems","addNewPicker","from","children","getPickerIndex","picker","findIndex","itemContainer","inlineMenuBar","itemHTML","upButton","error","swap","downButton","copyButton","copiedItem","copyItem","itemElem","itemPicker","newItemPicker","CustomRotationPicker","modPlayer","spells","CustomRotation","CustomSpell","oldItem","listPicker","CustomSpellPicker","modSpell","oldShowWhen","spell","setSpell","cr","EnumPicker","selectElem","EncounterPicker","modEncounter","addEncounterFieldPickers","showExecuteProportion","labelTooltip","pe","isHealingSpec","spec","isTankSpec","advancedButton","AdvancedEncounterPicker","Popup","addCloseButton","encounterTypeContainer","encounter2","header","targetsElem","TargetPicker","modTarget","section1","section2","section3","mobTypeEnumValues","ALL_TARGET_STATS","statData","statNames","SpellSchoolArcane","SpellSchoolFire","SpellSchoolFrost","SpellSchoolHoly","SpellSchoolNature","SpellSchoolShadow","obj","StatHealth","StatArcaneResistance","StatFireResistance","StatFrostResistance","StatNatureResistance","StatShadowResistance","StatBlockValue","MobTypeUnknown","MobTypeBeast","MobTypeDragonkin","MobTypeElemental","MobTypeGiant","MobTypeHumanoid","MobTypeMechanical","descriptionsPromise","getEnchantDescription","fetch","response","json","descriptionsMap","idStr","StartingConjured","Conjured","ConjuredUnknown","ConjuredDarkRune","ConjuredFlameCap","ConjuredRogueThistleTea","consumesChangeEmitter","getConsumes","startingConjured","newConsumes","setConsumes","InFrontOfTarget","inFrontOfTargetChangeEmitter","getInFrontOfTarget","setInFrontOfTarget","DistanceFromTarget","distanceFromTargetChangeEmitter","getDistanceFromTarget","setDistanceFromTarget","TankAssignment","getRaid","makeRaidTarget","emptyRaidTarget","IncomingHps","getHealingModel","hps","healingModel","setHealingModel","HealingCadence","cadenceSeconds","HpPercentForDefensives","hpPercentForDefensives","InspirationUptime","healingModelChangeEmitter","inspirationUptime","GearPicker","leftSide","rightSide","leftItemPickers","ItemSlot","ItemSlotHead","ItemSlotNeck","ItemSlotShoulder","ItemSlotBack","ItemSlotChest","ItemSlotWrist","ItemSlotMainHand","ItemSlotOffHand","ItemPicker","rightItemPickers","ItemSlotHands","ItemSlotWaist","ItemSlotLegs","ItemSlotFeet","ItemSlotFinger1","ItemSlotFinger2","ItemSlotTrinket1","ItemSlotTrinket2","ItemSlotRanged","itemPickers","sort","_items","_enchants","_equippedItem","iconElem","nameElem","enchantElem","socketsContainerElem","getEquippedItem","onClickStart","SelectorModal","closest","onClickEnd","ev","openTab","gearChangeEmitter","professionChangeEmitter","setWowheadData","removeAttribute","emptySlotIcons","slotNames","setItemQualityCssClass","heroic","heroic_span","marginLeft","innerText","quality","asActionId","setBackgroundAndHref","setWowheadHref","description","isSpellId","setAttribute","allSocketColors","gemIdx","gemIconElem","setGemSocketCssClass","src","getEmptyGemSocketIconUrl","fromItemId","iconUrl","numPossibleSockets","ItemType","ItemTypeWrist","ItemTypeHands","updateProfession","isBlacksmithing","removeProperty","equippedItem","eligibleItems","eligibleEnchants","tabsElem","contentElem","setData","click","addTab","fromItem","baseEP","computeItemEP","ignoreEPFilter","onEquip","equipItem","withItem","GemColor","GemColorUnknown","fromSpellId","computeStatsEP","withEnchant","computeEnchantEP","addGemTabs","socketBonusEP","socketBonus","gemSockets","curSocketColors","socketIdx","withGem","gemEP","computeGemEP","tabAnchor","updateGemIcon","itemData","computeEP","equippedToItemFn","onRemove","setTabContent","dataA","dataB","ilvl","diff","tabElem","tabContentId","dataset","tabContent","helpIcon","sim2","makeShow2hWeaponsSelector","ClassWarrior","makeShowMatchingGemsSelector","startsWith","makePhaseSelector","listElem","listItemElems","itemIdx","itemEP","listItemElem","onclick","is","removeTabs","updateSelected","newEquippedItem","newItemId","newEP","listItemIdx","listItemData","listItem","epDeltaElem","listItemEP","formatDeltaTextElem","applyFilters","validItemElems","currentEquippedItem","weaponType","WeaponType","WeaponTypeUnknown","handType","HandType","HandTypeTwoHand","enchantAppliesToItem","searchInput","searchQuery","toLowerCase","include","numShown","key","ele","contains","labelSubstring","tabElems","prototype","call","tab","contentElems","getElementById","getAttribute","substring","parentElement","SavedDataManager","userData","presets","frozen","presetsOnly","savedDataDiv","saveInput","alert","addSavedData","getData","saveUserData","newData","makeSavedData","dataArr","isPreset","oldIdx","insertBefore","replaceChild","dataElem","stopPropagation","confirm","checkActive","changeEmitters","savedData","localStorage","setItem","storageKey","loadUserData","dataStr","getItem","jsonData","parse","fromJson","freeze","makeMultiIconInput","inputs","emptyColor","makeWrappedBooleanInput","getModObject","makeSpecOptionsBooleanInput","getSpecOptions","fieldName","newVal","newMessage","setSpecOptions","specOptionsChangeEmitter","makeRotationBooleanInput","getRotation","setRotation","rotationChangeEmitter","makeWrappedNumberInput","makeSpecOptionsNumberInput","internalConfig","percent","makeRotationNumberInput","makeWrappedEnumInput","makeSpecOptionsEnumInput","makeRotationEnumInput","makeWrappedIconInput","states","makeBooleanIconInput","getFieldValue","setFieldValue","makeSpecOptionsBooleanIconInput","makeNumberIconInput","multiplier","sign","makeTristateIconInput","impId","input","improvedId","makeMultistateIconInput","numStates","makeWrappedEnumIconInput","makeSpecOptionsEnumIconInput","makeRotationEnumIconInput","makeCustomRotationInput","rotation","makePetTypeInputConfig","includeLabel","InputHelpers.makeSpecOptionsEnumIconInput","PetType","PetNone","fromPetName","Bat","Bear","BirdOfPrey","Boar","CarrionBird","Cat","Chimaera","CoreHound","Crab","Crocolisk","Devilsaur","Dragonhawk","Gorilla","Hyena","Moth","NetherRay","Raptor","Ravager","Rhino","Scorpid","Serpent","Silithid","Spider","SpiritBeast","SporeBat","Tallstrider","Turtle","WarpStalker","Wasp","WindSerpent","Wolf","Worm","petCategories","categoryOrder","categoryClasses","HunterPetTalentsPicker","curCategory","getCategoryFromPlayer","curTalents","getPetTalentsFromPlayer","savedSets","defaultTalents","talentsContainer","pickers","category","talentsConfig","petTalentsConfig","pickerContainer","TalentsPicker","trees","protoToTalentString","options","petTalents","talentStringToProto","HunterPetTalents","pointsPerRow","maxPoints","savedTalentsManager","defaultBMTalents","petCategory","categoryIdx","indexOf","updateIsBM","getTalents","beastMastery","setMaxPoints","talentsChangeEmitter","petType","getPetTalentsConfig","cunningDefault","cobraReflexes","dive","boarsSpeed","mobility","spikedCollar","cornered","feedingFrenzy","wolverineBite","bullheaded","wildHunt","ferocityDefault","cullingTheHerd","spidersBite","rabid","callOfTheWild","charge","greatStamina","bloodOfTheRhino","guardDog","thunderstomp","graceOfTheMantis","taunt","roarOfSacrifice","cunningBMDefault","ferocityBMDefault","bloodthirsty","sharkAttack","newTalentsConfig","backgroundUrl","rowIdx","colIdx","spellIds","prereqLocation","IconPicker","rootAnchor","useImprovedIcons","improvedId2","levelContainer","improvedAnchor","improvedAnchor2","counterElem","isRightClick","getActionId","LogRunner","controlBar","simButton","logsDiv","runSimOnce","logs","isCastCompleted","lineElem","MultiIconPicker","dropdownRootElem","labelElem","pickerConfig","updateButtonImage","getMaxValue","categoryId","SettingsMenu","restoreDefaultsButton","ResultsViewer","pendingElem","hideAll","setPending","setContent","LaunchStatus","LaunchStatus2","simLaunchStatuses","Spec","SpecBalanceDruid","SpecElementalShaman","SpecEnhancementShaman","SpecFeralDruid","SpecFeralTankDruid","SpecHunter","SpecMage","SpecRogue","SpecRetributionPaladin","SpecProtectionPaladin","SpecHealingPriest","SpecShadowPriest","SpecSmitePriest","SpecWarlock","SpecWarrior","SpecProtectionWarrior","SpecDeathknight","SpecTankDeathknight","memeSpecs","Title","currentSpec","dropdownPanel","orderedLaunchedSpecs","naturalSpecOrder","specStr","gridTemplateRows","ceil","currentOption","makeOptionData","otherOptions","makeOptionElem","makeOption","isButton","raidSimIcon","raidSimSiteUrl","titleIcons","getSpecSiteUrl","specNames","classColors","specToClass","icon","labelDiv","simLabel","SimUI","simHTML","isWithinRaidSim","handleCrash","updateShowDamageMetrics","updateShowThreatMetrics","updateShowHealingMetrics","updateShowExperimental","warnings","warningsElem","warningsTippy","updateWarnings","statusStr","launchStatus","Unlaunched","Alpha","Beta","knownIssues","knownIssuesContainer","issue","interactive","resultsViewerElem","resultsViewer","titleElem","simActionsContainer","reportBug","addToolbarItem","patreon","downloadBinary","resp","versionInfo","outdated","catch","addAction","cssClass","actFn","iterationsPicker","button","simTabsContainer","simTabContentsContainer","topBar","contentId","replace","isFirstTab","newTab","newContent","activeWarnings","warning","getContent","addWarning","updateOn","getSettingsStorageKey","getStorageKey","getSavedEncounterStorageKey","runRaidSim","runRaidSimWithLogs","hash","hashCode","link","toLink","issues","total_count","html_url","base","maxBodyLength","issueBody","encodeURIComponent","lastIndexOf","fetchErr","len","charCodeAt","EpWeightsMenu","statsType","tableContainer","tableBody","querySelector","tableHeader","updateType","computeStatWeights","setSimProgress","prevEpIterations","prevEpSimResult","updateTable","colActionButtons","makeUpdateWeights","weightsFunc","previousSibling","setEpWeights","epRefStatName","armorStatName","getPrevSimResult","dps","weights","epValues","tps","dtps","individualConfig","defaults","epWeights","showAllStatsContainer","menu","applyAlternatingColors","optimizeGemsButton","optimizeGems","completedSims","totalSims","completedIterations","totalIterations","StatMana","StatEnergy","StatRage","makeTableRow","stDevToConf90","weightsStdev","epValuesStdev","currentEpCell","epWeightsChangeEmitter","getEpWeights","childNodes","w","getGear","allGems","isJewelcrafting","hasProfession","Jewelcrafting","optimizedGear","optimizeGemsForWeights","setGear","unrestrictedGems","Gems.isUnrestrictedGem","bestGemForColor","bestGemForColorEP","bestGemForSocket","bestGemForSocketEP","bestGem","bestGemEP","findBestGems","asMap","socketBonusEPs","entries","itemSlot","socketColors","GemColorMeta","allSockets","itemSlotStr","numSockets","threeSocketCombos","permutations","calculateGearGemsEP","statsFromGems","jcGems","requiredProfession","bestJcGemForColor","bestJcGemForColorEP","bestJcGemForSocket","bestJcGemForSocketEP","bestJcGem","bestJcGemEP","bestGear","bestGearEP","socketCombo","ei","gemColor","curGear","hasActiveMetaGem","curGearEP","metaGem","getMetaGem","condition","Gems.getMetaGemCondition","isCompareColorCondition","getAllGems","colorCombos","getColorCombosToSatisfyCondition","colorCombo","isOneOfEach","Gems.PRIMARY_COLORS","GemColorPrismatic","Gems.SECONDARY_COLORS","secondaryColor","remainingColor","Gems.socketToMatchingColors","get","matchingColor","isTwoAndOne","oneColor","minRed","minYellow","minBlue","twoColor","Gems.gemColorMatchesSocket","partialCombo","isThreeOfAColor","threeColor","matchingColors","combinationsWithDups","gemList","Gems.GEM_COLORS","GEM_COLORS","Gems.gemMatchesSocket","Exporter","allowDownload","textElem","navigator","clipboard","writeText","downloadButton","downloadString","IndividualLinkExporter","IndividualJsonExporter","IndividualSimSettings","_Individual80UEPExporter","allStats","getEnumValues","namesToWeights","statName","linkNames","weight","Individual80UEPExporter","StatStrength","StatAgility","StatStamina","StatIntellect","StatSpirit","StatSpellPower","StatMP5","StatSpellPenetration","StatArmorPenetration","StatRangedAttackPower","StatResilience","_IndividualPawnEPExporter","classNames","IndividualPawnEPExporter","Importer","includeFile","uploadInputId","replaceAll","htmlVal","descriptionElem","files","importButton","onImport","finishIndividualImport","charClass","race","equipmentSpec","talentsStr","glyphs","professions","dbEnchant","expectedEnchantIds","foundEnchantIds","missingEnchants","expectedId","expectedItemIds","foundItemIds","missingItems","setRace","setTalentsString","setGlyphs","setProfessions","close","IndividualJsonImporter","fromJsonString","Individual80UImporter","importJson","nameToClass","character","gameClass","ClassUnknown","nameToRace","Race","RaceUnknown","talentIds","talentJson","spellId","talentSpellIdsToTalentString","EquipmentSpec","itemJson","ItemSpec","gemJson","IndividualAddonImporter","nameToProfession","profData","prof","ProfessionUnknown","glyphsConfig","classGlyphsConfig","majorGlyphIDs","glyphNameToID","glyphName","majorGlyphs","minorGlyphIDs","minorGlyphs","Glyphs","major1","major2","major3","minor1","minor2","minor3","gearJson","glyphIDStr","AllStatsBuff","InputHelpers.makeMultiIconInput","makeTristateRaidBuffInput","makeBooleanRaidBuffInput","AllStatsPercentBuff","makeBooleanIndividualBuffInput","ArmorBuff","StaminaBuff","StrengthAndAgilityBuff","IntellectBuff","SpiritBuff","AttackPowerBuff","makeTristateIndividualBuffInput","AttackPowerPercentBuff","DamagePercentBuff","DamageReductionPercentBuff","HastePercentBuff","HealthBuff","MP5Buff","MeleeCritBuff","MeleeHasteBuff","ReplenishmentBuff","SpellCritBuff","SpellHasteBuff","withLabel","SpellPowerBuff","InputHelpers.makeMultistateIconInput","Bloodlust","RetributionAura","ShadowProtection","BraidedEterniumChain","makeBooleanPartyBuffInput","ChainOfTheTwilightOwl","HeroicPresence","EyeOfTheNight","Thorns","ManaTideTotem","makeMultistatePartyBuffInput","Innervate","makeMultistateIndividualBuffInput","PowerInfusion","FocusMagic","TricksOfTheTrade","UnholyFrenzy","RevitalizeRejuvination","makeMultistateMultiplierIndividualBuffInput","RevitalizeWildGrowth","MajorArmorDebuff","makeBooleanDebuffInput","MinorArmorDebuff","makeTristateDebuffInput","AttackPowerDebuff","BleedDebuff","CritDebuff","MeleeAttackSpeedDebuff","MeleeHitDebuff","PhysicalDamageDebuff","SpellCritDebuff","SpellHitDebuff","SpellDamageDebuff","HuntersMark","impId2","InputHelpers.makeQuadstateIconInput","makeQuadstateDebuffInput","JudgementOfWisdom","JudgementOfLight","ShatteringThrow","GiftOfArthas","ThermalSapper","makeBooleanConsumeInput","ExplosiveDecoy","SpicedMammothTreats","PetFood","PetFoodSpicedMammothTreats","InputHelpers.makeBooleanIconInput","InputHelpers.makeTristateIconInput","makePotionInputFactory","consumesFieldName","makeConsumeInputFactory","Potions","RunicHealingPotion","RunicManaPotion","IndestructiblePotion","PotionOfSpeed","PotionOfWildMagic","DestructionPotion","HastePotion","MightyRagePotion","SuperManaPotion","FelManaPotion","InsaneStrengthPotion","IronshieldPotion","HeroicPotion","makePotionsInput","makePrepopPotionsInput","makeConjuredInput","ConjuredHealthstone","makeFlasksInput","Flask","FlaskOfTheFrostWyrm","FlaskOfEndlessRage","FlaskOfPureMojo","FlaskOfStoneblood","LesserFlaskOfToughness","LesserFlaskOfResistance","FlaskOfBlindingLight","FlaskOfMightyRestoration","FlaskOfPureDeath","FlaskOfRelentlessAssault","FlaskOfSupremePower","FlaskOfFortification","FlaskOfChromaticWonder","battleElixir","BattleElixir","BattleElixirUnknown","guardianElixir","GuardianElixir","GuardianElixirUnknown","makeBattleElixirsInput","ElixirOfAccuracy","ElixirOfArmorPiercing","ElixirOfDeadlyStrikes","ElixirOfExpertise","ElixirOfLightningSpeed","ElixirOfMightyAgility","ElixirOfMightyStrength","GurusElixir","SpellpowerElixir","WrathElixir","AdeptsElixir","ElixirOfDemonslaying","ElixirOfMajorAgility","ElixirOfMajorFirePower","ElixirOfMajorFrostPower","ElixirOfMajorShadowPower","ElixirOfMajorStrength","ElixirOfMastery","ElixirOfTheMongoose","FelStrengthElixir","GreaterArcaneElixir","flask","FlaskUnknown","makeGuardianElixirsInput","ElixirOfMightyDefense","ElixirOfMightyFortitude","ElixirOfMightyMageblood","ElixirOfMightyThoughts","ElixirOfProtection","ElixirOfSpirit","ElixirOfDraenicWisdom","ElixirOfIronskin","ElixirOfMajorDefense","ElixirOfMajorFortitude","ElixirOfMajorMageblood","makeFoodInput","Food","FoodFishFeast","FoodGreatFeast","FoodBlackenedDragonfin","FoodHeartyRhino","FoodMegaMammothMeal","FoodSpicedWormBurger","FoodRhinoliciousWormsteak","FoodImperialMantaSteak","FoodSnapperExtreme","FoodMightyRhinoDogs","FoodFirecrackerSalmon","FoodCuttlesteak","FoodDragonfinFilet","FoodBlackenedBasilisk","FoodGrilledMudfish","FoodRavagerDog","FoodRoastedClefthoof","FoodSpicyHotTalbuk","FoodSkullfishSoup","FoodFishermansFeast","FillerExplosiveInput","allOptions","Explosive","ExplosiveSaroniteBomb","ExplosiveCobaltFragBomb","onSet","factory","allOption","BLESSINGS_SECTION","BASIC_BIS_DISCLAIMER","IndividualSimUI","raidSimResultsManager","settingsMuuri","getMetaGemConditionDescription","failedProfReqs","getFailedProfessionRequirements","getProfessions","fpr","professionNames","getJCGems","talentPoints","getTalentPoints","getTalentsString","Mechanics.MAX_TALENT_POINTS","canDualWield2H","loadSettings","addSidebarComponents","addTopbarComponents","addGearTab","addSettingsTab","addTalentsTab","addDetailedResultsTab","addLogTab","recomputeSettingsLayout","initEventID","loadedSettings","binary","atob","bytes","Uint8Array","settingsBytes","pako","inflate","savedSettings","jsonStr","addRaidSimAction","displayStats","importSettings","linkElem","menuElem","addMenuItem","onClick","showInRaidSim","newIndividualImporters","exportSettings","newIndividualExporters","optionsMenu","savedGearManager","getSavedGearStorageKey","SavedGearSet","newSavedGear","presetGear","settingsTab","configureIconSection","sectionElem","iconPickers","adjustColumns","makeIconInput","inputConfig","playerIconsSection","playerIconInputs","iconInput","buffOptions","splitRelevantOptions","IconInputs.AllStatsBuff","IconInputs.AllStatsPercentBuff","IconInputs.HealthBuff","IconInputs.ArmorBuff","IconInputs.StaminaBuff","IconInputs.StrengthAndAgilityBuff","IconInputs.IntellectBuff","IconInputs.SpiritBuff","IconInputs.AttackPowerBuff","IconInputs.AttackPowerPercentBuff","IconInputs.MeleeCritBuff","IconInputs.MeleeHasteBuff","IconInputs.SpellPowerBuff","IconInputs.SpellCritBuff","IconInputs.HastePercentBuff","IconInputs.DamagePercentBuff","IconInputs.DamageReductionPercentBuff","IconInputs.MP5Buff","IconInputs.ReplenishmentBuff","buffsSection","multiIconInput","IconInputs.Bloodlust","IconInputs.SpellHasteBuff","revitalizeBuffOptions","IconInputs.RevitalizeRejuvination","IconInputs.RevitalizeWildGrowth","miscBuffOptions","IconInputs.HeroicPresence","IconInputs.BraidedEterniumChain","IconInputs.ChainOfTheTwilightOwl","IconInputs.FocusMagic","IconInputs.EyeOfTheNight","IconInputs.Thorns","IconInputs.RetributionAura","IconInputs.ShadowProtection","IconInputs.ManaTideTotem","IconInputs.Innervate","IconInputs.PowerInfusion","IconInputs.TricksOfTheTrade","IconInputs.UnholyFrenzy","debuffOptions","IconInputs.MajorArmorDebuff","IconInputs.MinorArmorDebuff","IconInputs.PhysicalDamageDebuff","IconInputs.BleedDebuff","IconInputs.SpellDamageDebuff","IconInputs.SpellHitDebuff","IconInputs.SpellCritDebuff","IconInputs.CritDebuff","IconInputs.AttackPowerDebuff","IconInputs.MeleeAttackSpeedDebuff","IconInputs.MeleeHitDebuff","debuffsSection","IconInputs.JudgementOfWisdom","IconInputs.HuntersMark","miscDebuffOptions","IconInputs.JudgementOfLight","IconInputs.ShatteringThrow","IconInputs.GiftOfArthas","prepopPotionOptions","IconInputs.makePrepopPotionsInput","potionOptions","IconInputs.makePotionsInput","conjuredOptions","ClassRogue","IconInputs.makeConjuredInput","flaskOptions","IconInputs.makeFlasksInput","battleElixirOptions","IconInputs.makeBattleElixirsInput","guardianElixirOptions","IconInputs.makeGuardianElixirsInput","foodOptions","IconInputs.makeFoodInput","tradeConsumesElem","IconInputs.ThermalSapper","IconInputs.ExplosiveDecoy","IconInputs.FillerExplosiveInput","Engineering","petConsumeInputs","petConsumesElem","configureInputSection","sectionConfig","playerInputs","rotationIconInputs","rotationIconSection","rotationInputs","otherInputs","races","specToEligibleRaces","raceNames","raceChangeEmitter","getRace","p","getProfession1","setProfession1","getProfession2","setProfession2","ShattrathFaction","ShattrathFactionAldor","ShattrathFactionScryer","shattFactionNames","getShattFaction","setShattFaction","encounterSectionElem","encounterPicker","savedEncounterManager","SavedEncounter","newEncounter","cooldownSectionElem","cooldownContentElem","placement","setTimeout","Muuri","savedSettingsManager","getSavedSettingsStorageKey","SavedSettings","PartyBuffs","playerBuffs","consumes","rotationJson","specTypeFunctions","rotationToJson","newSettings","IndividualBuffs","Consumes","Cooldowns","rotationFromJson","customSectionsContainer","anyCustomSections","sectionName","additionalSections","sectionCssPrefix","additionalIconSections","customSections","customSection","prepend","container","zIndex","newTalentsPicker","newGlyphsPicker","getSavedTalentsStorageKey","SavedTalents","talentsString","getGlyphs","newTalents","glyphsChangeEmitter","ClassHunter","curShown","toggledElems","updateToggle","petTypeToggle","toggleContainer","tankSpec","healingSpec","applySharedDefaults","specOptions","individualBuffs","other","distanceFromTarget","getSavedRotationStorageKey","keyPart","specToLocalStorageKey","protoBytes","deflated","deflate","to","encoded","btoa","fromCharCode","linkUrl","includeBuffDebuffInputs","some","excludeBuffDebuffInputs"],"mappings":"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"}