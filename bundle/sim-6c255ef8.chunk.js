import{a6 as e,b_ as t,c9 as a,ca as n,cb as o,cc as i,cd as l,bt as s,b2 as r,c0 as m,ce as d,c3 as c,c4 as h,c5 as u,c6 as p,c7 as f,ab as g,ac as S,cf as v,bp as b,ba as y,b5 as I,b8 as W,R as T,a3 as w,D as k,a$ as R,d as F,a as M,bn as N,bo as P}from"./raid_sim_action-a290d9e8.chunk.js";import{m as C,s as O,w as E,a as L,j as B,b as x,c as D,B as A,I as H,R as j,x as _,y as G,z,C as J,T as q,r as K}from"./individual_sim_ui-df1e8984.chunk.js";import{T as U}from"./totem_inputs-66336d1e.chunk.js";const $=C({fieldName:"bloodlust",id:e.fromSpellId(2825)}),Q=O({fieldName:"shield",values:[{color:"grey",value:t.NoShield},{actionId:e.fromSpellId(57960),value:t.WaterShield},{actionId:e.fromSpellId(49281),value:t.LightningShield}]}),V=O({fieldName:"imbueMh",values:[{color:"grey",value:a.NoImbue},{actionId:e.fromSpellId(58804),value:a.WindfuryWeapon},{actionId:e.fromSpellId(58790),value:a.FlametongueWeapon,text:"R10"},{actionId:e.fromSpellId(58789),value:a.FlametongueWeaponDownrank,text:"R9"},{actionId:e.fromSpellId(58796),value:a.FrostbrandWeapon}]}),X=O({fieldName:"imbueOh",values:[{color:"grey",value:a.NoImbue},{actionId:e.fromSpellId(58804),value:a.WindfuryWeapon},{actionId:e.fromSpellId(58790),value:a.FlametongueWeapon,text:"R10"},{actionId:e.fromSpellId(58789),value:a.FlametongueWeaponDownrank,text:"R9"},{actionId:e.fromSpellId(58796),value:a.FrostbrandWeapon}]}),Y=E({fieldName:"syncType",label:"Sync/Stagger Setting",labelTooltip:"Choose your sync or stagger option, Perfect Sync makes your weapons always attack at the same time, which is ideal for mixed imbues. Delayed Offhand is similar but additionally adds a slight delay to the offhand attacks while staying within the 0.5s flurry ICD window, ideal for matched imbues.",values:[{name:"None",value:n.NoSync},{name:"Perfect Sync",value:n.SyncMainhandOffhandSwings},{name:"Delayed Offhand",value:n.DelayOffhandSwings}]}),Z={inputs:[L({fieldName:"rotationType",label:"Type",labelTooltip:"<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<div>Standard: Priority Rotation</div>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<div>Custom: Highest spell that is ready will be cast.</div>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>",values:[{name:"Standard",value:o.Priority},{name:"Custom",value:o.Custom}]}),B({fieldName:"customRotation",numColumns:2,values:[{actionId:e.fromSpellId(49238),value:i.LightningBolt},{actionId:e.fromSpellId(49238),value:i.LightningBoltWeave,text:"Weave"},{actionId:e.fromSpellId(17364),value:i.StormstrikeDebuffMissing,text:"Debuff"},{actionId:e.fromSpellId(17364),value:i.Stormstrike},{actionId:e.fromSpellId(49233),value:i.FlameShock},{actionId:e.fromSpellId(49231),value:i.EarthShock},{actionId:e.fromSpellId(58734),value:i.MagmaTotem},{actionId:e.fromSpellId(61657),value:i.FireNova},{actionId:e.fromSpellId(60103),value:i.LavaLash},{actionId:e.fromSpellId(49281),value:i.LightningShield},{actionId:e.fromSpellId(60043),value:i.LavaBurst,text:"Weave"},{actionId:e.fromSpellId(49236),value:i.FrostShock}],showWhen:e=>e.getRotation().rotationType==o.Custom}),L({fieldName:"primaryShock",label:"Primary Shock",values:[{name:"None",value:l.None},{name:"Earth Shock",value:l.Earth},{name:"Frost Shock",value:l.Frost}],showWhen:e=>e.getRotation().rotationType!=o.Custom}),x({fieldName:"weaveFlameShock",label:"Weave Flame Shock",labelTooltip:"Use Flame Shock whenever the target does not already have the DoT.",showWhen:e=>e.getRotation().rotationType!=o.Custom}),D({fieldName:"flameShockClipTicks",label:"Refresh Flame Shock at ticks remaining",labelTooltip:"Set to 0 to require the debuff be missing. A tick is 3s, affected by spell haste",enableWhen:e=>e.getRotation().weaveFlameShock,showWhen:e=>e.getRotation().rotationType==o.Custom?null!=e.getRotation().customRotation?.spells.find((e=>e.spell==i.FlameShock)):e.getRotation().weaveFlameShock}),x({fieldName:"lightningboltWeave",label:"Enable Weaving Lightning Bolt",labelTooltip:"Will provide a DPS increase, but is harder to execute",enableWhen:e=>e.getTalents().maelstromWeapon>0,showWhen:e=>e.getRotation().rotationType!=o.Custom}),L({fieldName:"maelstromweaponMinStack",label:"Minimum Maelstrom Stacks to Weave",labelTooltip:"3 stacks is the most realistic, however there are cases where lower might be possible, just much harder to do in practice",values:[{name:"1",value:1},{name:"2",value:2},{name:"3",value:3},{name:"4",value:4}],enableWhen:e=>e.getRotation().rotationType==o.Custom?null!=e.getRotation().customRotation?.spells.find((e=>e.spell==i.LightningBoltWeave)):e.getRotation().lightningboltWeave,showWhen:e=>e.getRotation().rotationType!=o.Custom||null!=e.getRotation().customRotation?.spells.find((e=>e.spell==i.LightningBoltWeave))}),D({fieldName:"weaveReactionTime",label:"Weaving Reaction Time",labelTooltip:"The Reaction time to gaining maelstrom stacks after a auto attack in milliseconds",enableWhen:e=>e.getRotation().rotationType==o.Custom?null!=e.getRotation().customRotation?.spells.find((e=>e.spell==i.LightningBoltWeave)):e.getRotation().lightningboltWeave,showWhen:e=>e.getRotation().rotationType!=o.Custom||null!=e.getRotation().customRotation?.spells.find((e=>e.spell==i.LightningBoltWeave))}),x({fieldName:"lavaburstWeave",label:"Enable Weaving Lava Burst",labelTooltip:"Not particularily useful for dual wield, mostly a 2h option",enableWhen:e=>e.getRotation().lightningboltWeave,showWhen:e=>e.getRotation().rotationType!=o.Custom}),D({fieldName:"firenovaManaThreshold",label:"Minimum mana to cast Fire Nova",labelTooltip:"Fire Nova will not be cast when mana is below this value. Set this medium-low, it has a bad mana-to-damage ratio",showWhen:e=>e.getRotation().rotationType!=o.Custom||null!=e.getRotation().customRotation?.spells.find((e=>e.spell==i.FireNova))}),D({fieldName:"shamanisticRageManaThreshold",label:"Mana % to use Shamanistic Rage",enableWhen:e=>e.getTalents().shamanisticRage})]},ee={name:"Standard",data:s.create({talentsString:"053030152-30405003105021333031131031051",glyphs:r.create({major1:m.GlyphOfStormstrike,major2:m.GlyphOfFlametongueWeapon,major3:m.GlyphOfFeralSpirit})})},te=d.create({totems:c.create({earth:h.StrengthOfEarthTotem,air:u.WindfuryTotem,fire:p.MagmaTotem,water:f.ManaSpringTotem}),maelstromweaponMinStack:3,lightningboltWeave:!0,weaveReactionTime:0,lavaburstWeave:!1,firenovaManaThreshold:3e3,shamanisticRageManaThreshold:25,primaryShock:l.Earth,weaveFlameShock:!0,rotationType:o.Priority,customRotation:g.create({spells:[S.create({spell:i.LightningBolt}),S.create({spell:i.StormstrikeDebuffMissing}),S.create({spell:i.LightningBoltWeave}),S.create({spell:i.Stormstrike}),S.create({spell:i.FlameShock}),S.create({spell:i.EarthShock}),S.create({spell:i.MagmaTotem}),S.create({spell:i.LightningShield}),S.create({spell:i.FireNova}),S.create({spell:i.LavaLash})]})}),ae=v.create({shield:t.LightningShield,bloodlust:!0,imbueMh:a.WindfuryWeapon,imbueOh:a.FlametongueWeapon,syncType:n.SyncMainhandOffhandSwings}),ne=b.create({defaultPotion:y.PotionOfSpeed,flask:I.FlaskOfEndlessRage,food:W.FoodFishFeast}),oe=T.create({giftOfTheWild:w.TristateEffectImproved,arcaneBrilliance:!0,leaderOfThePack:w.TristateEffectImproved,totemOfWrath:!0,wrathOfAirTotem:!0,moonkinAura:w.TristateEffectImproved,sanctifiedRetribution:!0,divineSpirit:!0,battleShout:w.TristateEffectImproved}),ie=k.create({bloodFrenzy:!0,sunderArmor:!0,curseOfWeakness:w.TristateEffectRegular,curseOfElements:!0,faerieFire:w.TristateEffectImproved,judgementOfWisdom:!0,misery:!0,totemOfWrath:!0,shadowMastery:!0}),le={name:"Preraid Preset",tooltip:A,gear:R.fromJsonString('{"items": [\n        {\n          "id": 43311,\n          "enchant": 44879,\n          "gems": [\n            41398,\n            42156\n          ]\n        },\n        {\n          "id": 40678\n        },\n        {\n          "id": 37373,\n          "enchant": 44871\n        },\n        {\n          "id": 37840,\n          "enchant": 55002\n        },\n        {\n          "id": 39597,\n          "enchant": 44489,\n          "gems": [\n            40053,\n            40088\n          ]\n        },\n        {\n          "id": 43131,\n          "enchant": 44484,\n          "gems": [\n            0\n          ]\n        },\n        {\n          "id": 39601,\n          "enchant": 54999,\n          "gems": [\n            40053,\n            0\n          ]\n        },\n        {\n          "id": 37407,\n          "gems": [\n            42156\n          ]\n        },\n        {\n          "id": 37669,\n          "enchant": 38374\n        },\n        {\n          "id": 37167,\n          "enchant": 55016,\n          "gems": [\n            40053,\n            42156\n          ]\n        },\n        {\n          "id": 37685\n        },\n        {\n          "id": 37642\n        },\n        {\n          "id": 37390\n        },\n        {\n          "id": 40684\n        },\n        {\n          "id": 41384,\n          "enchant": 44492\n        },\n        {\n          "id": 40704,\n          "enchant": 44492\n        },\n        {\n          "id": 37575\n        },\n        {\n          "id": 33507\n        }\n    ]}')},se={name:"P1 Preset",tooltip:A,gear:R.fromJsonString('{"items": [\n        {\n          "id": 40543,\n          "enchant": 44879,\n          "gems": [\n            41398,\n            40014\n          ]\n        },\n        {\n          "id": 44661,\n          "gems": [\n            40014\n          ]\n        },\n        {\n          "id": 40524,\n          "enchant": 44871,\n          "gems": [\n            40014\n          ]\n        },\n        {\n          "id": 40403,\n          "enchant": 55002\n        },\n        {\n          "id": 40523,\n          "enchant": 44489,\n          "gems": [\n            40003,\n            40014\n          ]\n        },\n        {\n          "id": 40282,\n          "enchant": 44484,\n          "gems": [\n            42702,\n            0\n          ]\n        },\n        {\n          "id": 40520,\n          "enchant": 54999,\n          "gems": [\n            42154,\n            0\n          ]\n        },\n        {\n          "id": 40275,\n          "gems": [\n            42156\n          ]\n        },\n        {\n          "id": 40522,\n          "enchant": 38374,\n          "gems": [\n            39999,\n            42156\n          ]\n        },\n        {\n          "id": 40367,\n          "enchant": 55016,\n          "gems": [\n            40058\n          ]\n        },\n        {\n          "id": 40474\n        },\n        {\n          "id": 40074\n        },\n        {\n          "id": 40684\n        },\n        {\n          "id": 37390\n        },\n        {\n          "id": 39763,\n          "enchant": 44492\n        },\n        {\n          "id": 39468,\n          "enchant": 44492\n        },\n        {\n          "id": 40322\n        }\n      ]}')};class re extends H{constructor(e,t){super(e,t,{cssClass:"enhancement-shaman-sim-ui",knownIssues:["Fire Elemental is in a alpha state","Some things regarding weapon imbues need further testing and changes"],epStats:[F.StatIntellect,F.StatAgility,F.StatStrength,F.StatAttackPower,F.StatMeleeHit,F.StatMeleeCrit,F.StatMeleeHaste,F.StatArmorPenetration,F.StatExpertise,F.StatSpellPower,F.StatSpellCrit,F.StatSpellHit,F.StatSpellHaste],epReferenceStat:F.StatAttackPower,displayStats:[F.StatHealth,F.StatStamina,F.StatStrength,F.StatAgility,F.StatIntellect,F.StatAttackPower,F.StatMeleeHit,F.StatMeleeCrit,F.StatMeleeHaste,F.StatExpertise,F.StatArmorPenetration,F.StatSpellPower,F.StatSpellHit,F.StatSpellCrit,F.StatSpellHaste],defaults:{gear:se.gear,epWeights:M.fromMap({[F.StatIntellect]:1.517,[F.StatAgility]:1.561,[F.StatStrength]:1.1,[F.StatSpellPower]:1.117,[F.StatSpellHit]:0,[F.StatSpellCrit]:.897,[F.StatSpellHaste]:.19,[F.StatAttackPower]:1,[F.StatMeleeHit]:1.42,[F.StatMeleeCrit]:.805,[F.StatMeleeHaste]:1.37,[F.StatArmorPenetration]:.471,[F.StatExpertise]:0}),consumes:ne,rotation:te,talents:ee.data,specOptions:ae,raidBuffs:oe,partyBuffs:N.create({}),individualBuffs:P.create({blessingOfKings:!0,blessingOfWisdom:w.TristateEffectImproved,blessingOfMight:w.TristateEffectImproved,judgementsOfTheWise:!0}),debuffs:ie},playerIconInputs:[Q,$,V,X],rotationInputs:Z,includeBuffDebuffInputs:[j,_,G,z],excludeBuffDebuffInputs:[J],otherInputs:{inputs:[Y,q,K]},customSections:[U],encounterPicker:{showExecuteProportion:!1},presets:{talents:[ee],gear:[le,se]}})}}export{te as D,re as E,se as P,ee as S,ae as a,ne as b};
//# sourceMappingURL=sim-6c255ef8.chunk.js.map
